{"version":3,"file":"otel.js","sources":["../../node_modules/@opentelemetry/api/build/esm/platform/browser/globalThis.js","../../node_modules/@opentelemetry/api/build/esm/version.js","../../node_modules/@opentelemetry/api/build/esm/internal/semver.js","../../node_modules/@opentelemetry/api/build/esm/internal/global-utils.js","../../node_modules/@opentelemetry/api/build/esm/diag/ComponentLogger.js","../../node_modules/@opentelemetry/api/build/esm/diag/types.js","../../node_modules/@opentelemetry/api/build/esm/diag/internal/logLevelLogger.js","../../node_modules/@opentelemetry/api/build/esm/api/diag.js","../../node_modules/@opentelemetry/api/build/esm/baggage/internal/baggage-impl.js","../../node_modules/@opentelemetry/api/build/esm/baggage/internal/symbol.js","../../node_modules/@opentelemetry/api/build/esm/baggage/utils.js","../../node_modules/@opentelemetry/api/build/esm/context/context.js","../../node_modules/@opentelemetry/api/build/esm/metrics/NoopMeter.js","../../node_modules/@opentelemetry/api/build/esm/propagation/TextMapPropagator.js","../../node_modules/@opentelemetry/api/build/esm/context/NoopContextManager.js","../../node_modules/@opentelemetry/api/build/esm/api/context.js","../../node_modules/@opentelemetry/api/build/esm/trace/trace_flags.js","../../node_modules/@opentelemetry/api/build/esm/trace/invalid-span-constants.js","../../node_modules/@opentelemetry/api/build/esm/trace/NonRecordingSpan.js","../../node_modules/@opentelemetry/api/build/esm/trace/context-utils.js","../../node_modules/@opentelemetry/api/build/esm/trace/spancontext-utils.js","../../node_modules/@opentelemetry/api/build/esm/trace/NoopTracer.js","../../node_modules/@opentelemetry/api/build/esm/trace/ProxyTracer.js","../../node_modules/@opentelemetry/api/build/esm/trace/NoopTracerProvider.js","../../node_modules/@opentelemetry/api/build/esm/trace/ProxyTracerProvider.js","../../node_modules/@opentelemetry/api/build/esm/trace/SamplingResult.js","../../node_modules/@opentelemetry/api/build/esm/trace/span_kind.js","../../node_modules/@opentelemetry/api/build/esm/trace/status.js","../../node_modules/@opentelemetry/api/build/esm/context-api.js","../../node_modules/@opentelemetry/api/build/esm/diag-api.js","../../node_modules/@opentelemetry/api/build/esm/metrics/NoopMeterProvider.js","../../node_modules/@opentelemetry/api/build/esm/api/metrics.js","../../node_modules/@opentelemetry/api/build/esm/metrics-api.js","../../node_modules/@opentelemetry/api/build/esm/propagation/NoopTextMapPropagator.js","../../node_modules/@opentelemetry/api/build/esm/baggage/context-helpers.js","../../node_modules/@opentelemetry/api/build/esm/api/propagation.js","../../node_modules/@opentelemetry/api/build/esm/propagation-api.js","../../node_modules/@opentelemetry/api/build/esm/api/trace.js","../../node_modules/@opentelemetry/api/build/esm/trace-api.js","../../node_modules/@opentelemetry/core/build/esm/trace/suppress-tracing.js","../../node_modules/@opentelemetry/core/build/esm/baggage/constants.js","../../node_modules/@opentelemetry/core/build/esm/baggage/utils.js","../../node_modules/@opentelemetry/core/build/esm/baggage/propagation/W3CBaggagePropagator.js","../../node_modules/@opentelemetry/core/build/esm/common/attributes.js","../../node_modules/@opentelemetry/core/build/esm/common/logging-error-handler.js","../../node_modules/@opentelemetry/core/build/esm/common/global-error-handler.js","../../node_modules/@opentelemetry/core/build/esm/platform/browser/environment.js","../../node_modules/@opentelemetry/core/build/esm/platform/browser/globalThis.js","../../node_modules/@opentelemetry/core/build/esm/platform/browser/performance.js","../../node_modules/@opentelemetry/core/build/esm/version.js","../../node_modules/@opentelemetry/semantic-conventions/build/esm/trace/SemanticAttributes.js","../../node_modules/@opentelemetry/semantic-conventions/build/esm/resource/SemanticResourceAttributes.js","../../node_modules/@opentelemetry/semantic-conventions/build/esm/stable_attributes.js","../../node_modules/@opentelemetry/core/build/esm/platform/browser/sdk-info.js","../../node_modules/@opentelemetry/core/build/esm/platform/browser/timer-util.js","../../node_modules/@opentelemetry/core/build/esm/common/time.js","../../node_modules/@opentelemetry/core/build/esm/ExportResult.js","../../node_modules/@opentelemetry/core/build/esm/propagation/composite.js","../../node_modules/@opentelemetry/core/build/esm/internal/validators.js","../../node_modules/@opentelemetry/core/build/esm/trace/TraceState.js","../../node_modules/@opentelemetry/core/build/esm/trace/W3CTraceContextPropagator.js","../../node_modules/@opentelemetry/core/build/esm/utils/lodash.merge.js","../../node_modules/@opentelemetry/core/build/esm/utils/merge.js","../../node_modules/@opentelemetry/core/build/esm/utils/url.js","../../node_modules/@opentelemetry/core/build/esm/utils/promise.js","../../node_modules/@opentelemetry/core/build/esm/utils/callback.js","../../node_modules/@opentelemetry/resources/build/esm/platform/browser/default-service-name.js","../../node_modules/@opentelemetry/resources/build/esm/utils.js","../../node_modules/@opentelemetry/resources/build/esm/ResourceImpl.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/enums.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/Span.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/Sampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOffSampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/AlwaysOnSampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/ParentBasedSampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/sampler/TraceIdRatioBasedSampler.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/config.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/utility.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/export/BatchSpanProcessorBase.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/export/BatchSpanProcessor.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/platform/browser/RandomIdGenerator.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/Tracer.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/MultiSpanProcessor.js","../../node_modules/@opentelemetry/sdk-trace-base/build/esm/BasicTracerProvider.js","../../node_modules/@opentelemetry/sdk-trace-web/build/esm/StackContextManager.js","../../node_modules/@opentelemetry/sdk-trace-web/build/esm/WebTracerProvider.js","../../node_modules/@opentelemetry/sdk-trace-web/build/esm/enums/PerformanceTimingNames.js","../../node_modules/@opentelemetry/sdk-trace-web/build/esm/utils.js","../../node_modules/@opentelemetry/context-zone-peer-dep/build/esm/util.js","../../node_modules/@opentelemetry/context-zone-peer-dep/build/esm/ZoneContextManager.js","../../node_modules/zone.js/fesm2015/zone.js","../../node_modules/@opentelemetry/api-logs/build/esm/NoopLogger.js","../../node_modules/@opentelemetry/api-logs/build/esm/NoopLoggerProvider.js","../../node_modules/@opentelemetry/api-logs/build/esm/ProxyLogger.js","../../node_modules/@opentelemetry/api-logs/build/esm/ProxyLoggerProvider.js","../../node_modules/@opentelemetry/api-logs/build/esm/platform/browser/globalThis.js","../../node_modules/@opentelemetry/api-logs/build/esm/internal/global-utils.js","../../node_modules/@opentelemetry/api-logs/build/esm/api/logs.js","../../node_modules/@opentelemetry/api-logs/build/esm/index.js","../../node_modules/@opentelemetry/instrumentation/build/esm/autoLoaderUtils.js","../../node_modules/@opentelemetry/instrumentation/build/esm/autoLoader.js","../../node_modules/shimmer/index.js","../../node_modules/@opentelemetry/instrumentation/build/esm/instrumentation.js","../../node_modules/@opentelemetry/instrumentation/build/esm/platform/browser/instrumentation.js","../../node_modules/@opentelemetry/instrumentation/build/esm/utils.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/OTLPExporterBase.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/types.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/configuration/shared-configuration.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/bounded-queue-export-promise-handler.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/logging-response-handler.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/otlp-export-delegate.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/otlp-network-export-delegate.js","../../node_modules/@opentelemetry/otlp-transformer/build/esm/common/hex-to-binary.js","../../node_modules/@opentelemetry/otlp-transformer/build/esm/common/utils.js","../../node_modules/@opentelemetry/otlp-transformer/build/esm/common/internal.js","../../node_modules/@opentelemetry/otlp-transformer/build/esm/trace/internal.js","../../node_modules/@opentelemetry/otlp-transformer/build/esm/trace/json/trace.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/retrying-transport.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/is-export-retryable.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/transport/xhr-transport.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/transport/send-beacon-transport.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/otlp-browser-http-export-delegate.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/util.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/configuration/otlp-http-configuration.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/configuration/convert-legacy-browser-http-options.js","../../node_modules/@opentelemetry/otlp-exporter-base/build/esm/configuration/create-legacy-browser-delegate.js","../../node_modules/@opentelemetry/exporter-trace-otlp-http/build/esm/platform/browser/OTLPTraceExporter.js","../../node_modules/@opentelemetry/semantic-conventions/build/esm/experimental_attributes.js","../../node_modules/@opentelemetry/instrumentation-document-load/build/esm/enums/AttributeNames.js","../../node_modules/@opentelemetry/instrumentation-document-load/build/esm/version.js","../../node_modules/@opentelemetry/instrumentation-document-load/build/esm/enums/EventNames.js","../../node_modules/@opentelemetry/instrumentation-document-load/build/esm/utils.js","../../node_modules/@opentelemetry/instrumentation-document-load/build/esm/instrumentation.js","../../node_modules/@opentelemetry/instrumentation-fetch/build/esm/enums/AttributeNames.js","../../node_modules/@opentelemetry/instrumentation-fetch/build/esm/utils.js","../../node_modules/@opentelemetry/instrumentation-fetch/build/esm/version.js","../../node_modules/@opentelemetry/instrumentation-fetch/build/esm/fetch.js","../../node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/enums/AttributeNames.js","../../node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/version.js","../../node_modules/@opentelemetry/instrumentation-user-interaction/build/esm/instrumentation.js","../../node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/enums/EventNames.js","../../node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/utils.js","../../node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/version.js","../../node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/enums/AttributeNames.js","../../node_modules/@opentelemetry/instrumentation-xml-http-request/build/esm/xhr.js","../../node_modules/@opentelemetry/auto-instrumentations-web/build/esm/utils.js","../../instrumentation.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport var _globalThis = typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n        ? self\n        : typeof window === 'object'\n            ? window\n            : typeof global === 'object'\n                ? global\n                : {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport var VERSION = '1.9.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VERSION } from '../version';\nvar re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(ownVersion) {\n    var acceptedVersions = new Set([ownVersion]);\n    var rejectedVersions = new Set();\n    var myVersionMatch = ownVersion.match(re);\n    if (!myVersionMatch) {\n        // we cannot guarantee compatibility so we always return noop\n        return function () { return false; };\n    }\n    var ownVersionParsed = {\n        major: +myVersionMatch[1],\n        minor: +myVersionMatch[2],\n        patch: +myVersionMatch[3],\n        prerelease: myVersionMatch[4],\n    };\n    // if ownVersion has a prerelease tag, versions must match exactly\n    if (ownVersionParsed.prerelease != null) {\n        return function isExactmatch(globalVersion) {\n            return globalVersion === ownVersion;\n        };\n    }\n    function _reject(v) {\n        rejectedVersions.add(v);\n        return false;\n    }\n    function _accept(v) {\n        acceptedVersions.add(v);\n        return true;\n    }\n    return function isCompatible(globalVersion) {\n        if (acceptedVersions.has(globalVersion)) {\n            return true;\n        }\n        if (rejectedVersions.has(globalVersion)) {\n            return false;\n        }\n        var globalVersionMatch = globalVersion.match(re);\n        if (!globalVersionMatch) {\n            // cannot parse other version\n            // we cannot guarantee compatibility so we always noop\n            return _reject(globalVersion);\n        }\n        var globalVersionParsed = {\n            major: +globalVersionMatch[1],\n            minor: +globalVersionMatch[2],\n            patch: +globalVersionMatch[3],\n            prerelease: globalVersionMatch[4],\n        };\n        // if globalVersion has a prerelease tag, versions must match exactly\n        if (globalVersionParsed.prerelease != null) {\n            return _reject(globalVersion);\n        }\n        // major versions must match\n        if (ownVersionParsed.major !== globalVersionParsed.major) {\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.major === 0) {\n            if (ownVersionParsed.minor === globalVersionParsed.minor &&\n                ownVersionParsed.patch <= globalVersionParsed.patch) {\n                return _accept(globalVersion);\n            }\n            return _reject(globalVersion);\n        }\n        if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n            return _accept(globalVersion);\n        }\n        return _reject(globalVersion);\n    };\n}\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport var isCompatible = _makeCompatibilityCheck(VERSION);\n//# sourceMappingURL=semver.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\nvar major = VERSION.split('.')[0];\nvar GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\"opentelemetry.js.api.\" + major);\nvar _global = _globalThis;\nexport function registerGlobal(type, instance, diag, allowOverride) {\n    var _a;\n    if (allowOverride === void 0) { allowOverride = false; }\n    var api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) !== null && _a !== void 0 ? _a : {\n        version: VERSION,\n    });\n    if (!allowOverride && api[type]) {\n        // already registered an API of this type\n        var err = new Error(\"@opentelemetry/api: Attempted duplicate registration of API: \" + type);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    if (api.version !== VERSION) {\n        // All registered APIs must be of the same version exactly\n        var err = new Error(\"@opentelemetry/api: Registration of version v\" + api.version + \" for \" + type + \" does not match previously registered API v\" + VERSION);\n        diag.error(err.stack || err.message);\n        return false;\n    }\n    api[type] = instance;\n    diag.debug(\"@opentelemetry/api: Registered a global for \" + type + \" v\" + VERSION + \".\");\n    return true;\n}\nexport function getGlobal(type) {\n    var _a, _b;\n    var globalVersion = (_a = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _a === void 0 ? void 0 : _a.version;\n    if (!globalVersion || !isCompatible(globalVersion)) {\n        return;\n    }\n    return (_b = _global[GLOBAL_OPENTELEMETRY_API_KEY]) === null || _b === void 0 ? void 0 : _b[type];\n}\nexport function unregisterGlobal(type, diag) {\n    diag.debug(\"@opentelemetry/api: Unregistering a global for \" + type + \" v\" + VERSION + \".\");\n    var api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n    if (api) {\n        delete api[type];\n    }\n}\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { getGlobal } from '../internal/global-utils';\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nvar DiagComponentLogger = /** @class */ (function () {\n    function DiagComponentLogger(props) {\n        this._namespace = props.namespace || 'DiagComponentLogger';\n    }\n    DiagComponentLogger.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('debug', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('error', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.info = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('info', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('warn', this._namespace, args);\n    };\n    DiagComponentLogger.prototype.verbose = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return logProxy('verbose', this._namespace, args);\n    };\n    return DiagComponentLogger;\n}());\nexport { DiagComponentLogger };\nfunction logProxy(funcName, namespace, args) {\n    var logger = getGlobal('diag');\n    // shortcut if logger not set\n    if (!logger) {\n        return;\n    }\n    args.unshift(namespace);\n    return logger[funcName].apply(logger, __spreadArray([], __read(args), false));\n}\n//# sourceMappingURL=ComponentLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport var DiagLogLevel;\n(function (DiagLogLevel) {\n    /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n    DiagLogLevel[DiagLogLevel[\"NONE\"] = 0] = \"NONE\";\n    /** Identifies an error scenario */\n    DiagLogLevel[DiagLogLevel[\"ERROR\"] = 30] = \"ERROR\";\n    /** Identifies a warning scenario */\n    DiagLogLevel[DiagLogLevel[\"WARN\"] = 50] = \"WARN\";\n    /** General informational log message */\n    DiagLogLevel[DiagLogLevel[\"INFO\"] = 60] = \"INFO\";\n    /** General debug log message */\n    DiagLogLevel[DiagLogLevel[\"DEBUG\"] = 70] = \"DEBUG\";\n    /**\n     * Detailed trace level logging should only be used for development, should only be set\n     * in a development environment.\n     */\n    DiagLogLevel[DiagLogLevel[\"VERBOSE\"] = 80] = \"VERBOSE\";\n    /** Used to set the logging level to include all logging */\n    DiagLogLevel[DiagLogLevel[\"ALL\"] = 9999] = \"ALL\";\n})(DiagLogLevel || (DiagLogLevel = {}));\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagLogLevel } from '../types';\nexport function createLogLevelDiagLogger(maxLevel, logger) {\n    if (maxLevel < DiagLogLevel.NONE) {\n        maxLevel = DiagLogLevel.NONE;\n    }\n    else if (maxLevel > DiagLogLevel.ALL) {\n        maxLevel = DiagLogLevel.ALL;\n    }\n    // In case the logger is null or undefined\n    logger = logger || {};\n    function _filterFunc(funcName, theLevel) {\n        var theFunc = logger[funcName];\n        if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n            return theFunc.bind(logger);\n        }\n        return function () { };\n    }\n    return {\n        error: _filterFunc('error', DiagLogLevel.ERROR),\n        warn: _filterFunc('warn', DiagLogLevel.WARN),\n        info: _filterFunc('info', DiagLogLevel.INFO),\n        debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n        verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n    };\n}\n//# sourceMappingURL=logLevelLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport { DiagLogLevel, } from '../diag/types';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nvar API_NAME = 'diag';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nvar DiagAPI = /** @class */ (function () {\n    /**\n     * Private internal constructor\n     * @private\n     */\n    function DiagAPI() {\n        function _logProxy(funcName) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var logger = getGlobal('diag');\n                // shortcut if logger not set\n                if (!logger)\n                    return;\n                return logger[funcName].apply(logger, __spreadArray([], __read(args), false));\n            };\n        }\n        // Using self local variable for minification purposes as 'this' cannot be minified\n        var self = this;\n        // DiagAPI specific functions\n        var setLogger = function (logger, optionsOrLogLevel) {\n            var _a, _b, _c;\n            if (optionsOrLogLevel === void 0) { optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }; }\n            if (logger === self) {\n                // There isn't much we can do here.\n                // Logging to the console might break the user application.\n                // Try to log to self. If a logger was previously registered it will receive the log.\n                var err = new Error('Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation');\n                self.error((_a = err.stack) !== null && _a !== void 0 ? _a : err.message);\n                return false;\n            }\n            if (typeof optionsOrLogLevel === 'number') {\n                optionsOrLogLevel = {\n                    logLevel: optionsOrLogLevel,\n                };\n            }\n            var oldLogger = getGlobal('diag');\n            var newLogger = createLogLevelDiagLogger((_b = optionsOrLogLevel.logLevel) !== null && _b !== void 0 ? _b : DiagLogLevel.INFO, logger);\n            // There already is an logger registered. We'll let it know before overwriting it.\n            if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n                var stack = (_c = new Error().stack) !== null && _c !== void 0 ? _c : '<failed to generate stacktrace>';\n                oldLogger.warn(\"Current logger will be overwritten from \" + stack);\n                newLogger.warn(\"Current logger will overwrite one already registered from \" + stack);\n            }\n            return registerGlobal('diag', newLogger, self, true);\n        };\n        self.setLogger = setLogger;\n        self.disable = function () {\n            unregisterGlobal(API_NAME, self);\n        };\n        self.createComponentLogger = function (options) {\n            return new DiagComponentLogger(options);\n        };\n        self.verbose = _logProxy('verbose');\n        self.debug = _logProxy('debug');\n        self.info = _logProxy('info');\n        self.warn = _logProxy('warn');\n        self.error = _logProxy('error');\n    }\n    /** Get the singleton instance of the DiagAPI API */\n    DiagAPI.instance = function () {\n        if (!this._instance) {\n            this._instance = new DiagAPI();\n        }\n        return this._instance;\n    };\n    return DiagAPI;\n}());\nexport { DiagAPI };\n//# sourceMappingURL=diag.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar BaggageImpl = /** @class */ (function () {\n    function BaggageImpl(entries) {\n        this._entries = entries ? new Map(entries) : new Map();\n    }\n    BaggageImpl.prototype.getEntry = function (key) {\n        var entry = this._entries.get(key);\n        if (!entry) {\n            return undefined;\n        }\n        return Object.assign({}, entry);\n    };\n    BaggageImpl.prototype.getAllEntries = function () {\n        return Array.from(this._entries.entries()).map(function (_a) {\n            var _b = __read(_a, 2), k = _b[0], v = _b[1];\n            return [k, v];\n        });\n    };\n    BaggageImpl.prototype.setEntry = function (key, entry) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.set(key, entry);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntry = function (key) {\n        var newBaggage = new BaggageImpl(this._entries);\n        newBaggage._entries.delete(key);\n        return newBaggage;\n    };\n    BaggageImpl.prototype.removeEntries = function () {\n        var e_1, _a;\n        var keys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            keys[_i] = arguments[_i];\n        }\n        var newBaggage = new BaggageImpl(this._entries);\n        try {\n            for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n                var key = keys_1_1.value;\n                newBaggage._entries.delete(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return newBaggage;\n    };\n    BaggageImpl.prototype.clear = function () {\n        return new BaggageImpl();\n    };\n    return BaggageImpl;\n}());\nexport { BaggageImpl };\n//# sourceMappingURL=baggage-impl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport var baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n//# sourceMappingURL=symbol.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nvar diag = DiagAPI.instance();\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(entries) {\n    if (entries === void 0) { entries = {}; }\n    return new BaggageImpl(new Map(Object.entries(entries)));\n}\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(str) {\n    if (typeof str !== 'string') {\n        diag.error(\"Cannot create baggage metadata from unknown type: \" + typeof str);\n        str = '';\n    }\n    return {\n        __TYPE__: baggageEntryMetadataSymbol,\n        toString: function () {\n            return str;\n        },\n    };\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description) {\n    // The specification states that for the same input, multiple calls should\n    // return different keys. Due to the nature of the JS dependency management\n    // system, this creates problems where multiple versions of some package\n    // could hold different keys for the same property.\n    //\n    // Therefore, we use Symbol.for which returns the same key for the same input.\n    return Symbol.for(description);\n}\nvar BaseContext = /** @class */ (function () {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    function BaseContext(parentContext) {\n        // for minification\n        var self = this;\n        self._currentContext = parentContext ? new Map(parentContext) : new Map();\n        self.getValue = function (key) { return self._currentContext.get(key); };\n        self.setValue = function (key, value) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.set(key, value);\n            return context;\n        };\n        self.deleteValue = function (key) {\n            var context = new BaseContext(self._currentContext);\n            context._currentContext.delete(key);\n            return context;\n        };\n    }\n    return BaseContext;\n}());\n/** The root context is used as the default parent context when there is no active context */\nexport var ROOT_CONTEXT = new BaseContext();\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nvar NoopMeter = /** @class */ (function () {\n    function NoopMeter() {\n    }\n    /**\n     * @see {@link Meter.createGauge}\n     */\n    NoopMeter.prototype.createGauge = function (_name, _options) {\n        return NOOP_GAUGE_METRIC;\n    };\n    /**\n     * @see {@link Meter.createHistogram}\n     */\n    NoopMeter.prototype.createHistogram = function (_name, _options) {\n        return NOOP_HISTOGRAM_METRIC;\n    };\n    /**\n     * @see {@link Meter.createCounter}\n     */\n    NoopMeter.prototype.createCounter = function (_name, _options) {\n        return NOOP_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createUpDownCounter}\n     */\n    NoopMeter.prototype.createUpDownCounter = function (_name, _options) {\n        return NOOP_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableGauge}\n     */\n    NoopMeter.prototype.createObservableGauge = function (_name, _options) {\n        return NOOP_OBSERVABLE_GAUGE_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableCounter}\n     */\n    NoopMeter.prototype.createObservableCounter = function (_name, _options) {\n        return NOOP_OBSERVABLE_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.createObservableUpDownCounter}\n     */\n    NoopMeter.prototype.createObservableUpDownCounter = function (_name, _options) {\n        return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n    };\n    /**\n     * @see {@link Meter.addBatchObservableCallback}\n     */\n    NoopMeter.prototype.addBatchObservableCallback = function (_callback, _observables) { };\n    /**\n     * @see {@link Meter.removeBatchObservableCallback}\n     */\n    NoopMeter.prototype.removeBatchObservableCallback = function (_callback) { };\n    return NoopMeter;\n}());\nexport { NoopMeter };\nvar NoopMetric = /** @class */ (function () {\n    function NoopMetric() {\n    }\n    return NoopMetric;\n}());\nexport { NoopMetric };\nvar NoopCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopCounterMetric, _super);\n    function NoopCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopCounterMetric;\n}(NoopMetric));\nexport { NoopCounterMetric };\nvar NoopUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopUpDownCounterMetric, _super);\n    function NoopUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopUpDownCounterMetric.prototype.add = function (_value, _attributes) { };\n    return NoopUpDownCounterMetric;\n}(NoopMetric));\nexport { NoopUpDownCounterMetric };\nvar NoopGaugeMetric = /** @class */ (function (_super) {\n    __extends(NoopGaugeMetric, _super);\n    function NoopGaugeMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopGaugeMetric.prototype.record = function (_value, _attributes) { };\n    return NoopGaugeMetric;\n}(NoopMetric));\nexport { NoopGaugeMetric };\nvar NoopHistogramMetric = /** @class */ (function (_super) {\n    __extends(NoopHistogramMetric, _super);\n    function NoopHistogramMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoopHistogramMetric.prototype.record = function (_value, _attributes) { };\n    return NoopHistogramMetric;\n}(NoopMetric));\nexport { NoopHistogramMetric };\nvar NoopObservableMetric = /** @class */ (function () {\n    function NoopObservableMetric() {\n    }\n    NoopObservableMetric.prototype.addCallback = function (_callback) { };\n    NoopObservableMetric.prototype.removeCallback = function (_callback) { };\n    return NoopObservableMetric;\n}());\nexport { NoopObservableMetric };\nvar NoopObservableCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableCounterMetric, _super);\n    function NoopObservableCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableCounterMetric;\n}(NoopObservableMetric));\nexport { NoopObservableCounterMetric };\nvar NoopObservableGaugeMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableGaugeMetric, _super);\n    function NoopObservableGaugeMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableGaugeMetric;\n}(NoopObservableMetric));\nexport { NoopObservableGaugeMetric };\nvar NoopObservableUpDownCounterMetric = /** @class */ (function (_super) {\n    __extends(NoopObservableUpDownCounterMetric, _super);\n    function NoopObservableUpDownCounterMetric() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NoopObservableUpDownCounterMetric;\n}(NoopObservableMetric));\nexport { NoopObservableUpDownCounterMetric };\nexport var NOOP_METER = new NoopMeter();\n// Synchronous instruments\nexport var NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport var NOOP_GAUGE_METRIC = new NoopGaugeMetric();\nexport var NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport var NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n// Asynchronous instruments\nexport var NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport var NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport var NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric();\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter() {\n    return NOOP_METER;\n}\n//# sourceMappingURL=NoopMeter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var defaultTextMapGetter = {\n    get: function (carrier, key) {\n        if (carrier == null) {\n            return undefined;\n        }\n        return carrier[key];\n    },\n    keys: function (carrier) {\n        if (carrier == null) {\n            return [];\n        }\n        return Object.keys(carrier);\n    },\n};\nexport var defaultTextMapSetter = {\n    set: function (carrier, key, value) {\n        if (carrier == null) {\n            return;\n        }\n        carrier[key] = value;\n    },\n};\n//# sourceMappingURL=TextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { ROOT_CONTEXT } from './context';\nvar NoopContextManager = /** @class */ (function () {\n    function NoopContextManager() {\n    }\n    NoopContextManager.prototype.active = function () {\n        return ROOT_CONTEXT;\n    };\n    NoopContextManager.prototype.with = function (_context, fn, thisArg) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return fn.call.apply(fn, __spreadArray([thisArg], __read(args), false));\n    };\n    NoopContextManager.prototype.bind = function (_context, target) {\n        return target;\n    };\n    NoopContextManager.prototype.enable = function () {\n        return this;\n    };\n    NoopContextManager.prototype.disable = function () {\n        return this;\n    };\n    return NoopContextManager;\n}());\nexport { NoopContextManager };\n//# sourceMappingURL=NoopContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'context';\nvar NOOP_CONTEXT_MANAGER = new NoopContextManager();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nvar ContextAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function ContextAPI() {\n    }\n    /** Get the singleton instance of the Context API */\n    ContextAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new ContextAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current context manager.\n     *\n     * @returns true if the context manager was successfully registered, else false\n     */\n    ContextAPI.prototype.setGlobalContextManager = function (contextManager) {\n        return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n    };\n    /**\n     * Get the currently active context\n     */\n    ContextAPI.prototype.active = function () {\n        return this._getContextManager().active();\n    };\n    /**\n     * Execute a function with an active context\n     *\n     * @param context context to be active during function execution\n     * @param fn function to execute in a context\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    ContextAPI.prototype.with = function (context, fn, thisArg) {\n        var _a;\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        return (_a = this._getContextManager()).with.apply(_a, __spreadArray([context, fn, thisArg], __read(args), false));\n    };\n    /**\n     * Bind a context to a target function or event emitter\n     *\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\n     * @param target function or event emitter to bind\n     */\n    ContextAPI.prototype.bind = function (context, target) {\n        return this._getContextManager().bind(context, target);\n    };\n    ContextAPI.prototype._getContextManager = function () {\n        return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n    };\n    /** Disable and remove the global context manager */\n    ContextAPI.prototype.disable = function () {\n        this._getContextManager().disable();\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return ContextAPI;\n}());\nexport { ContextAPI };\n//# sourceMappingURL=context.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var TraceFlags;\n(function (TraceFlags) {\n    /** Represents no flag set. */\n    TraceFlags[TraceFlags[\"NONE\"] = 0] = \"NONE\";\n    /** Bit to represent whether trace is sampled in trace flags. */\n    TraceFlags[TraceFlags[\"SAMPLED\"] = 1] = \"SAMPLED\";\n})(TraceFlags || (TraceFlags = {}));\n//# sourceMappingURL=trace_flags.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TraceFlags } from './trace_flags';\nexport var INVALID_SPANID = '0000000000000000';\nexport var INVALID_TRACEID = '00000000000000000000000000000000';\nexport var INVALID_SPAN_CONTEXT = {\n    traceId: INVALID_TRACEID,\n    spanId: INVALID_SPANID,\n    traceFlags: TraceFlags.NONE,\n};\n//# sourceMappingURL=invalid-span-constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NonRecordingSpan = /** @class */ (function () {\n    function NonRecordingSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NonRecordingSpan.prototype.spanContext = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    NonRecordingSpan.prototype.addLink = function (_link) {\n        return this;\n    };\n    NonRecordingSpan.prototype.addLinks = function (_links) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for NonRecordingSpan.\n    NonRecordingSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NonRecordingSpan.prototype.recordException = function (_exception, _time) { };\n    return NonRecordingSpan;\n}());\nexport { NonRecordingSpan };\n//# sourceMappingURL=NonRecordingSpan.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '../context/context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n/**\n * span key\n */\nvar SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context) {\n    return context.getValue(SPAN_KEY) || undefined;\n}\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan() {\n    return getSpan(ContextAPI.getInstance().active());\n}\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context, span) {\n    return context.setValue(SPAN_KEY, span);\n}\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context) {\n    return context.deleteValue(SPAN_KEY);\n}\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(context, spanContext) {\n    return setSpan(context, new NonRecordingSpan(spanContext));\n}\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context) {\n    var _a;\n    return (_a = getSpan(context)) === null || _a === void 0 ? void 0 : _a.spanContext();\n}\n//# sourceMappingURL=context-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nvar VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nvar VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\nexport function isValidTraceId(traceId) {\n    return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\nexport function isValidSpanId(spanId) {\n    return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext) {\n    return (isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId));\n}\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext) {\n    return new NonRecordingSpan(spanContext);\n}\n//# sourceMappingURL=spancontext-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { isSpanContextValid } from './spancontext-utils';\nvar contextApi = ContextAPI.getInstance();\n/**\n * No-op implementations of {@link Tracer}.\n */\nvar NoopTracer = /** @class */ (function () {\n    function NoopTracer() {\n    }\n    // startSpan starts a noop span.\n    NoopTracer.prototype.startSpan = function (name, options, context) {\n        if (context === void 0) { context = contextApi.active(); }\n        var root = Boolean(options === null || options === void 0 ? void 0 : options.root);\n        if (root) {\n            return new NonRecordingSpan();\n        }\n        var parentFromContext = context && getSpanContext(context);\n        if (isSpanContext(parentFromContext) &&\n            isSpanContextValid(parentFromContext)) {\n            return new NonRecordingSpan(parentFromContext);\n        }\n        else {\n            return new NonRecordingSpan();\n        }\n    };\n    NoopTracer.prototype.startActiveSpan = function (name, arg2, arg3, arg4) {\n        var opts;\n        var ctx;\n        var fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        var parentContext = ctx !== null && ctx !== void 0 ? ctx : contextApi.active();\n        var span = this.startSpan(name, opts, parentContext);\n        var contextWithSpanSet = setSpan(parentContext, span);\n        return contextApi.with(contextWithSpanSet, fn, undefined, span);\n    };\n    return NoopTracer;\n}());\nexport { NoopTracer };\nfunction isSpanContext(spanContext) {\n    return (typeof spanContext === 'object' &&\n        typeof spanContext['spanId'] === 'string' &&\n        typeof spanContext['traceId'] === 'string' &&\n        typeof spanContext['traceFlags'] === 'number');\n}\n//# sourceMappingURL=NoopTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\nvar NOOP_TRACER = new NoopTracer();\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nvar ProxyTracer = /** @class */ (function () {\n    function ProxyTracer(_provider, name, version, options) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n        this.options = options;\n    }\n    ProxyTracer.prototype.startSpan = function (name, options, context) {\n        return this._getTracer().startSpan(name, options, context);\n    };\n    ProxyTracer.prototype.startActiveSpan = function (_name, _options, _context, _fn) {\n        var tracer = this._getTracer();\n        return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n    };\n    /**\n     * Try to get a tracer from the proxy tracer provider.\n     * If the proxy tracer provider has no delegate, return a noop tracer.\n     */\n    ProxyTracer.prototype._getTracer = function () {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        var tracer = this._provider.getDelegateTracer(this.name, this.version, this.options);\n        if (!tracer) {\n            return NOOP_TRACER;\n        }\n        this._delegate = tracer;\n        return this._delegate;\n    };\n    return ProxyTracer;\n}());\nexport { ProxyTracer };\n//# sourceMappingURL=ProxyTracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopTracer } from './NoopTracer';\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nvar NoopTracerProvider = /** @class */ (function () {\n    function NoopTracerProvider() {\n    }\n    NoopTracerProvider.prototype.getTracer = function (_name, _version, _options) {\n        return new NoopTracer();\n    };\n    return NoopTracerProvider;\n}());\nexport { NoopTracerProvider };\n//# sourceMappingURL=NoopTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nvar NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nvar ProxyTracerProvider = /** @class */ (function () {\n    function ProxyTracerProvider() {\n    }\n    /**\n     * Get a {@link ProxyTracer}\n     */\n    ProxyTracerProvider.prototype.getTracer = function (name, version, options) {\n        var _a;\n        return ((_a = this.getDelegateTracer(name, version, options)) !== null && _a !== void 0 ? _a : new ProxyTracer(this, name, version, options));\n    };\n    ProxyTracerProvider.prototype.getDelegate = function () {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_TRACER_PROVIDER;\n    };\n    /**\n     * Set the delegate tracer provider\n     */\n    ProxyTracerProvider.prototype.setDelegate = function (delegate) {\n        this._delegate = delegate;\n    };\n    ProxyTracerProvider.prototype.getDelegateTracer = function (name, version, options) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getTracer(name, version, options);\n    };\n    return ProxyTracerProvider;\n}());\nexport { ProxyTracerProvider };\n//# sourceMappingURL=ProxyTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=SamplingResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var SpanKind;\n(function (SpanKind) {\n    /** Default value. Indicates that the span is used internally. */\n    SpanKind[SpanKind[\"INTERNAL\"] = 0] = \"INTERNAL\";\n    /**\n     * Indicates that the span covers server-side handling of an RPC or other\n     * remote request.\n     */\n    SpanKind[SpanKind[\"SERVER\"] = 1] = \"SERVER\";\n    /**\n     * Indicates that the span covers the client-side wrapper around an RPC or\n     * other remote request.\n     */\n    SpanKind[SpanKind[\"CLIENT\"] = 2] = \"CLIENT\";\n    /**\n     * Indicates that the span describes producer sending a message to a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"PRODUCER\"] = 3] = \"PRODUCER\";\n    /**\n     * Indicates that the span describes consumer receiving a message from a\n     * broker. Unlike client and server, there is no direct critical path latency\n     * relationship between producer and consumer spans.\n     */\n    SpanKind[SpanKind[\"CONSUMER\"] = 4] = \"CONSUMER\";\n})(SpanKind || (SpanKind = {}));\n//# sourceMappingURL=span_kind.js.map","/**\n * An enumeration of status codes.\n */\nexport var SpanStatusCode;\n(function (SpanStatusCode) {\n    /**\n     * The default status.\n     */\n    SpanStatusCode[SpanStatusCode[\"UNSET\"] = 0] = \"UNSET\";\n    /**\n     * The operation has been validated by an Application developer or\n     * Operator to have completed successfully.\n     */\n    SpanStatusCode[SpanStatusCode[\"OK\"] = 1] = \"OK\";\n    /**\n     * The operation contains an error.\n     */\n    SpanStatusCode[SpanStatusCode[\"ERROR\"] = 2] = \"ERROR\";\n})(SpanStatusCode || (SpanStatusCode = {}));\n//# sourceMappingURL=status.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport var context = ContextAPI.getInstance();\n//# sourceMappingURL=context-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport var diag = DiagAPI.instance();\n//# sourceMappingURL=diag-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER } from './NoopMeter';\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nvar NoopMeterProvider = /** @class */ (function () {\n    function NoopMeterProvider() {\n    }\n    NoopMeterProvider.prototype.getMeter = function (_name, _version, _options) {\n        return NOOP_METER;\n    };\n    return NoopMeterProvider;\n}());\nexport { NoopMeterProvider };\nexport var NOOP_METER_PROVIDER = new NoopMeterProvider();\n//# sourceMappingURL=NoopMeterProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_METER_PROVIDER } from '../metrics/NoopMeterProvider';\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'metrics';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nvar MetricsAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function MetricsAPI() {\n    }\n    /** Get the singleton instance of the Metrics API */\n    MetricsAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new MetricsAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global meter provider.\n     * Returns true if the meter provider was successfully registered, else false.\n     */\n    MetricsAPI.prototype.setGlobalMeterProvider = function (provider) {\n        return registerGlobal(API_NAME, provider, DiagAPI.instance());\n    };\n    /**\n     * Returns the global meter provider.\n     */\n    MetricsAPI.prototype.getMeterProvider = function () {\n        return getGlobal(API_NAME) || NOOP_METER_PROVIDER;\n    };\n    /**\n     * Returns a meter from the global meter provider.\n     */\n    MetricsAPI.prototype.getMeter = function (name, version, options) {\n        return this.getMeterProvider().getMeter(name, version, options);\n    };\n    /** Remove the global meter provider */\n    MetricsAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    return MetricsAPI;\n}());\nexport { MetricsAPI };\n//# sourceMappingURL=metrics.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport var metrics = MetricsAPI.getInstance();\n//# sourceMappingURL=metrics-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nvar NoopTextMapPropagator = /** @class */ (function () {\n    function NoopTextMapPropagator() {\n    }\n    /** Noop inject function does nothing */\n    NoopTextMapPropagator.prototype.inject = function (_context, _carrier) { };\n    /** Noop extract function does nothing and returns the input context */\n    NoopTextMapPropagator.prototype.extract = function (context, _carrier) {\n        return context;\n    };\n    NoopTextMapPropagator.prototype.fields = function () {\n        return [];\n    };\n    return NoopTextMapPropagator;\n}());\nexport { NoopTextMapPropagator };\n//# sourceMappingURL=NoopTextMapPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ContextAPI } from '../api/context';\nimport { createContextKey } from '../context/context';\n/**\n * Baggage key\n */\nvar BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context) {\n    return context.getValue(BAGGAGE_KEY) || undefined;\n}\n/**\n * Retrieve the current baggage from the active/current context\n *\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getActiveBaggage() {\n    return getBaggage(ContextAPI.getInstance().active());\n}\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context, baggage) {\n    return context.setValue(BAGGAGE_KEY, baggage);\n}\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context) {\n    return context.deleteValue(BAGGAGE_KEY);\n}\n//# sourceMappingURL=context-helpers.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport { defaultTextMapGetter, defaultTextMapSetter, } from '../propagation/TextMapPropagator';\nimport { getBaggage, getActiveBaggage, setBaggage, deleteBaggage, } from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'propagation';\nvar NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nvar PropagationAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function PropagationAPI() {\n        this.createBaggage = createBaggage;\n        this.getBaggage = getBaggage;\n        this.getActiveBaggage = getActiveBaggage;\n        this.setBaggage = setBaggage;\n        this.deleteBaggage = deleteBaggage;\n    }\n    /** Get the singleton instance of the Propagator API */\n    PropagationAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new PropagationAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current propagator.\n     *\n     * @returns true if the propagator was successfully registered, else false\n     */\n    PropagationAPI.prototype.setGlobalPropagator = function (propagator) {\n        return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n    };\n    /**\n     * Inject context into a carrier to be propagated inter-process\n     *\n     * @param context Context carrying tracing data to inject\n     * @param carrier carrier to inject context into\n     * @param setter Function used to set values on the carrier\n     */\n    PropagationAPI.prototype.inject = function (context, carrier, setter) {\n        if (setter === void 0) { setter = defaultTextMapSetter; }\n        return this._getGlobalPropagator().inject(context, carrier, setter);\n    };\n    /**\n     * Extract context from a carrier\n     *\n     * @param context Context which the newly created context will inherit from\n     * @param carrier Carrier to extract context from\n     * @param getter Function used to extract keys from a carrier\n     */\n    PropagationAPI.prototype.extract = function (context, carrier, getter) {\n        if (getter === void 0) { getter = defaultTextMapGetter; }\n        return this._getGlobalPropagator().extract(context, carrier, getter);\n    };\n    /**\n     * Return a list of all fields which may be used by the propagator.\n     */\n    PropagationAPI.prototype.fields = function () {\n        return this._getGlobalPropagator().fields();\n    };\n    /** Remove the global propagator */\n    PropagationAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n    };\n    PropagationAPI.prototype._getGlobalPropagator = function () {\n        return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n    };\n    return PropagationAPI;\n}());\nexport { PropagationAPI };\n//# sourceMappingURL=propagation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport var propagation = PropagationAPI.getInstance();\n//# sourceMappingURL=propagation-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getGlobal, registerGlobal, unregisterGlobal, } from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport { isSpanContextValid, wrapSpanContext, } from '../trace/spancontext-utils';\nimport { deleteSpan, getActiveSpan, getSpan, getSpanContext, setSpan, setSpanContext, } from '../trace/context-utils';\nimport { DiagAPI } from './diag';\nvar API_NAME = 'trace';\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nvar TraceAPI = /** @class */ (function () {\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\n    function TraceAPI() {\n        this._proxyTracerProvider = new ProxyTracerProvider();\n        this.wrapSpanContext = wrapSpanContext;\n        this.isSpanContextValid = isSpanContextValid;\n        this.deleteSpan = deleteSpan;\n        this.getSpan = getSpan;\n        this.getActiveSpan = getActiveSpan;\n        this.getSpanContext = getSpanContext;\n        this.setSpan = setSpan;\n        this.setSpanContext = setSpanContext;\n    }\n    /** Get the singleton instance of the Trace API */\n    TraceAPI.getInstance = function () {\n        if (!this._instance) {\n            this._instance = new TraceAPI();\n        }\n        return this._instance;\n    };\n    /**\n     * Set the current global tracer.\n     *\n     * @returns true if the tracer provider was successfully registered, else false\n     */\n    TraceAPI.prototype.setGlobalTracerProvider = function (provider) {\n        var success = registerGlobal(API_NAME, this._proxyTracerProvider, DiagAPI.instance());\n        if (success) {\n            this._proxyTracerProvider.setDelegate(provider);\n        }\n        return success;\n    };\n    /**\n     * Returns the global tracer provider.\n     */\n    TraceAPI.prototype.getTracerProvider = function () {\n        return getGlobal(API_NAME) || this._proxyTracerProvider;\n    };\n    /**\n     * Returns a tracer from the global tracer provider.\n     */\n    TraceAPI.prototype.getTracer = function (name, version) {\n        return this.getTracerProvider().getTracer(name, version);\n    };\n    /** Remove the global tracer provider */\n    TraceAPI.prototype.disable = function () {\n        unregisterGlobal(API_NAME, DiagAPI.instance());\n        this._proxyTracerProvider = new ProxyTracerProvider();\n    };\n    return TraceAPI;\n}());\nexport { TraceAPI };\n//# sourceMappingURL=trace.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport var trace = TraceAPI.getInstance();\n//# sourceMappingURL=trace-api.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContextKey } from '@opentelemetry/api';\nconst SUPPRESS_TRACING_KEY = createContextKey('OpenTelemetry SDK Context Key SUPPRESS_TRACING');\nexport function suppressTracing(context) {\n    return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\nexport function unsuppressTracing(context) {\n    return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\nexport function isTracingSuppressed(context) {\n    return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n//# sourceMappingURL=suppress-tracing.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n//# sourceMappingURL=constants.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { baggageEntryMetadataFromString, } from '@opentelemetry/api';\nimport { BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_PROPERTIES_SEPARATOR, BAGGAGE_KEY_PAIR_SEPARATOR, BAGGAGE_MAX_TOTAL_LENGTH, } from './constants';\nexport function serializeKeyPairs(keyPairs) {\n    return keyPairs.reduce((hValue, current) => {\n        const value = `${hValue}${hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''}${current}`;\n        return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n    }, '');\n}\nexport function getKeyPairs(baggage) {\n    return baggage.getAllEntries().map(([key, value]) => {\n        let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n        // include opaque metadata if provided\n        // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n        if (value.metadata !== undefined) {\n            entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n        }\n        return entry;\n    });\n}\nexport function parsePairKeyValue(entry) {\n    const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n    if (valueProps.length <= 0)\n        return;\n    const keyPairPart = valueProps.shift();\n    if (!keyPairPart)\n        return;\n    const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n    if (separatorIndex <= 0)\n        return;\n    const key = decodeURIComponent(keyPairPart.substring(0, separatorIndex).trim());\n    const value = decodeURIComponent(keyPairPart.substring(separatorIndex + 1).trim());\n    let metadata;\n    if (valueProps.length > 0) {\n        metadata = baggageEntryMetadataFromString(valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR));\n    }\n    return { key, value, metadata };\n}\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(value) {\n    if (typeof value !== 'string' || value.length === 0)\n        return {};\n    return value\n        .split(BAGGAGE_ITEMS_SEPARATOR)\n        .map(entry => {\n        return parsePairKeyValue(entry);\n    })\n        .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n        .reduce((headers, keyPair) => {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        headers[keyPair.key] = keyPair.value;\n        return headers;\n    }, {});\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { propagation, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport { BAGGAGE_HEADER, BAGGAGE_ITEMS_SEPARATOR, BAGGAGE_MAX_NAME_VALUE_PAIRS, BAGGAGE_MAX_PER_NAME_VALUE_PAIRS, } from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator {\n    inject(context, carrier, setter) {\n        const baggage = propagation.getBaggage(context);\n        if (!baggage || isTracingSuppressed(context))\n            return;\n        const keyPairs = getKeyPairs(baggage)\n            .filter((pair) => {\n            return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n        })\n            .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n        const headerValue = serializeKeyPairs(keyPairs);\n        if (headerValue.length > 0) {\n            setter.set(carrier, BAGGAGE_HEADER, headerValue);\n        }\n    }\n    extract(context, carrier, getter) {\n        const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n        const baggageString = Array.isArray(headerValue)\n            ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n            : headerValue;\n        if (!baggageString)\n            return context;\n        const baggage = {};\n        if (baggageString.length === 0) {\n            return context;\n        }\n        const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n        pairs.forEach(entry => {\n            const keyPair = parsePairKeyValue(entry);\n            if (keyPair) {\n                const baggageEntry = { value: keyPair.value };\n                if (keyPair.metadata) {\n                    baggageEntry.metadata = keyPair.metadata;\n                }\n                baggage[keyPair.key] = baggageEntry;\n            }\n        });\n        if (Object.entries(baggage).length === 0) {\n            return context;\n        }\n        return propagation.setBaggage(context, propagation.createBaggage(baggage));\n    }\n    fields() {\n        return [BAGGAGE_HEADER];\n    }\n}\n//# sourceMappingURL=W3CBaggagePropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nexport function sanitizeAttributes(attributes) {\n    const out = {};\n    if (typeof attributes !== 'object' || attributes == null) {\n        return out;\n    }\n    for (const [key, val] of Object.entries(attributes)) {\n        if (!isAttributeKey(key)) {\n            diag.warn(`Invalid attribute key: ${key}`);\n            continue;\n        }\n        if (!isAttributeValue(val)) {\n            diag.warn(`Invalid attribute value set for key: ${key}`);\n            continue;\n        }\n        if (Array.isArray(val)) {\n            out[key] = val.slice();\n        }\n        else {\n            out[key] = val;\n        }\n    }\n    return out;\n}\nexport function isAttributeKey(key) {\n    return typeof key === 'string' && key.length > 0;\n}\nexport function isAttributeValue(val) {\n    if (val == null) {\n        return true;\n    }\n    if (Array.isArray(val)) {\n        return isHomogeneousAttributeValueArray(val);\n    }\n    return isValidPrimitiveAttributeValue(val);\n}\nfunction isHomogeneousAttributeValueArray(arr) {\n    let type;\n    for (const element of arr) {\n        // null/undefined elements are allowed\n        if (element == null)\n            continue;\n        if (!type) {\n            if (isValidPrimitiveAttributeValue(element)) {\n                type = typeof element;\n                continue;\n            }\n            // encountered an invalid primitive\n            return false;\n        }\n        if (typeof element === type) {\n            continue;\n        }\n        return false;\n    }\n    return true;\n}\nfunction isValidPrimitiveAttributeValue(val) {\n    switch (typeof val) {\n        case 'number':\n        case 'boolean':\n        case 'string':\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler() {\n    return (ex) => {\n        diag.error(stringifyException(ex));\n    };\n}\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex) {\n    if (typeof ex === 'string') {\n        return ex;\n    }\n    else {\n        return JSON.stringify(flattenException(ex));\n    }\n}\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex) {\n    const result = {};\n    let current = ex;\n    while (current !== null) {\n        Object.getOwnPropertyNames(current).forEach(propertyName => {\n            if (result[propertyName])\n                return;\n            const value = current[propertyName];\n            if (value) {\n                result[propertyName] = String(value);\n            }\n        });\n        current = Object.getPrototypeOf(current);\n    }\n    return result;\n}\n//# sourceMappingURL=logging-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { loggingErrorHandler } from './logging-error-handler';\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler) {\n    delegateHandler = handler;\n}\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex) {\n    try {\n        delegateHandler(ex);\n    }\n    catch { } // eslint-disable-line no-empty\n}\n//# sourceMappingURL=global-error-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function getStringFromEnv(_) {\n    return undefined;\n}\nexport function getBooleanFromEnv(_) {\n    return undefined;\n}\nexport function getNumberFromEnv(_) {\n    return undefined;\n}\nexport function getStringListFromEnv(_) {\n    return undefined;\n}\n//# sourceMappingURL=environment.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis = typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n        ? self\n        : typeof window === 'object'\n            ? window\n            : typeof global === 'object'\n                ? global\n                : {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const otperformance = performance;\n//# sourceMappingURL=performance.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '2.0.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createConstMap } from '../internal/utils';\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticAttributes\n//----------------------------------------------------------------------------------------------------------\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\nvar TMP_DB_SYSTEM = 'db.system';\nvar TMP_DB_CONNECTION_STRING = 'db.connection_string';\nvar TMP_DB_USER = 'db.user';\nvar TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\nvar TMP_DB_NAME = 'db.name';\nvar TMP_DB_STATEMENT = 'db.statement';\nvar TMP_DB_OPERATION = 'db.operation';\nvar TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\nvar TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';\nvar TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\nvar TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\nvar TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';\nvar TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\nvar TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = 'db.cassandra.speculative_execution_count';\nvar TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\nvar TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\nvar TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';\nvar TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\nvar TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\nvar TMP_DB_SQL_TABLE = 'db.sql.table';\nvar TMP_EXCEPTION_TYPE = 'exception.type';\nvar TMP_EXCEPTION_MESSAGE = 'exception.message';\nvar TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';\nvar TMP_EXCEPTION_ESCAPED = 'exception.escaped';\nvar TMP_FAAS_TRIGGER = 'faas.trigger';\nvar TMP_FAAS_EXECUTION = 'faas.execution';\nvar TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\nvar TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\nvar TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';\nvar TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';\nvar TMP_FAAS_TIME = 'faas.time';\nvar TMP_FAAS_CRON = 'faas.cron';\nvar TMP_FAAS_COLDSTART = 'faas.coldstart';\nvar TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';\nvar TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\nvar TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';\nvar TMP_NET_TRANSPORT = 'net.transport';\nvar TMP_NET_PEER_IP = 'net.peer.ip';\nvar TMP_NET_PEER_PORT = 'net.peer.port';\nvar TMP_NET_PEER_NAME = 'net.peer.name';\nvar TMP_NET_HOST_IP = 'net.host.ip';\nvar TMP_NET_HOST_PORT = 'net.host.port';\nvar TMP_NET_HOST_NAME = 'net.host.name';\nvar TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';\nvar TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';\nvar TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';\nvar TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';\nvar TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';\nvar TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';\nvar TMP_PEER_SERVICE = 'peer.service';\nvar TMP_ENDUSER_ID = 'enduser.id';\nvar TMP_ENDUSER_ROLE = 'enduser.role';\nvar TMP_ENDUSER_SCOPE = 'enduser.scope';\nvar TMP_THREAD_ID = 'thread.id';\nvar TMP_THREAD_NAME = 'thread.name';\nvar TMP_CODE_FUNCTION = 'code.function';\nvar TMP_CODE_NAMESPACE = 'code.namespace';\nvar TMP_CODE_FILEPATH = 'code.filepath';\nvar TMP_CODE_LINENO = 'code.lineno';\nvar TMP_HTTP_METHOD = 'http.method';\nvar TMP_HTTP_URL = 'http.url';\nvar TMP_HTTP_TARGET = 'http.target';\nvar TMP_HTTP_HOST = 'http.host';\nvar TMP_HTTP_SCHEME = 'http.scheme';\nvar TMP_HTTP_STATUS_CODE = 'http.status_code';\nvar TMP_HTTP_FLAVOR = 'http.flavor';\nvar TMP_HTTP_USER_AGENT = 'http.user_agent';\nvar TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\nvar TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = 'http.request_content_length_uncompressed';\nvar TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\nvar TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = 'http.response_content_length_uncompressed';\nvar TMP_HTTP_SERVER_NAME = 'http.server_name';\nvar TMP_HTTP_ROUTE = 'http.route';\nvar TMP_HTTP_CLIENT_IP = 'http.client_ip';\nvar TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\nvar TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\nvar TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = 'aws.dynamodb.item_collection_metrics';\nvar TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = 'aws.dynamodb.provisioned_read_capacity';\nvar TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = 'aws.dynamodb.provisioned_write_capacity';\nvar TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\nvar TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\nvar TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\nvar TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\nvar TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\nvar TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\nvar TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = 'aws.dynamodb.global_secondary_indexes';\nvar TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = 'aws.dynamodb.local_secondary_indexes';\nvar TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = 'aws.dynamodb.exclusive_start_table';\nvar TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\nvar TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\nvar TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\nvar TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\nvar TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\nvar TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\nvar TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = 'aws.dynamodb.attribute_definitions';\nvar TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = 'aws.dynamodb.global_secondary_index_updates';\nvar TMP_MESSAGING_SYSTEM = 'messaging.system';\nvar TMP_MESSAGING_DESTINATION = 'messaging.destination';\nvar TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';\nvar TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';\nvar TMP_MESSAGING_PROTOCOL = 'messaging.protocol';\nvar TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';\nvar TMP_MESSAGING_URL = 'messaging.url';\nvar TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';\nvar TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';\nvar TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = 'messaging.message_payload_size_bytes';\nvar TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = 'messaging.message_payload_compressed_size_bytes';\nvar TMP_MESSAGING_OPERATION = 'messaging.operation';\nvar TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';\nvar TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';\nvar TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';\nvar TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';\nvar TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';\nvar TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';\nvar TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';\nvar TMP_RPC_SYSTEM = 'rpc.system';\nvar TMP_RPC_SERVICE = 'rpc.service';\nvar TMP_RPC_METHOD = 'rpc.method';\nvar TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\nvar TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\nvar TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\nvar TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\nvar TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\nvar TMP_MESSAGE_TYPE = 'message.type';\nvar TMP_MESSAGE_ID = 'message.id';\nvar TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\nvar TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * Note: This may be different from `faas.id` if an alias is involved.\n *\n * @deprecated Use ATTR_AWS_LAMBDA_INVOKED_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use ATTR_DB_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;\n/**\n * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n *\n * @deprecated Use ATTR_DB_CONNECTION_STRING in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;\n/**\n * Username for accessing the database.\n *\n * @deprecated Use ATTR_DB_USER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_USER = TMP_DB_USER;\n/**\n * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n *\n * @deprecated Use ATTR_DB_JDBC_DRIVER_CLASSNAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;\n/**\n * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n *\n * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_NAME = TMP_DB_NAME;\n/**\n * The database statement being executed.\n *\n * Note: The value may be sanitized to exclude sensitive information.\n *\n * @deprecated Use ATTR_DB_STATEMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;\n/**\n * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n *\n * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n *\n * @deprecated Use ATTR_DB_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;\n/**\n * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n *\n * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n *\n * @deprecated Use ATTR_DB_MSSQL_INSTANCE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;\n/**\n * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_PAGE_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL = TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;\n/**\n * Whether or not the query is idempotent.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_IDEMPOTENCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;\n/**\n * The ID of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_COORDINATOR_ID = TMP_DB_CASSANDRA_COORDINATOR_ID;\n/**\n * The data center of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_DC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_CASSANDRA_COORDINATOR_DC = TMP_DB_CASSANDRA_COORDINATOR_DC;\n/**\n * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;\n/**\n * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_REDIS_DATABASE_INDEX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;\n/**\n * The collection being accessed within the database stated in `db.name`.\n *\n * @deprecated Use ATTR_DB_MONGODB_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_SQL_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @deprecated Use ATTR_EXCEPTION_TYPE.\n */\nexport var SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;\n/**\n * The exception message.\n *\n * @deprecated Use ATTR_EXCEPTION_MESSAGE.\n */\nexport var SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @deprecated Use ATTR_EXCEPTION_STACKTRACE.\n */\nexport var SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;\n/**\n* SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n*\n* Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n*\n* @deprecated Use ATTR_EXCEPTION_ESCAPED.\n*/\nexport var SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use ATTR_FAAS_TRIGGER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;\n/**\n * The execution ID of the current function execution.\n *\n * @deprecated Use ATTR_FAAS_INVOCATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @deprecated Use ATTR_FAAS_CRON in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @deprecated Use ATTR_FAAS_COLDSTART in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;\n/**\n * The name of the invoked function.\n *\n * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;\n/**\n * The cloud region of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use ATTR_NET_TRANSPORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;\n/**\n * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n *\n * @deprecated Use ATTR_NET_PEER_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;\n/**\n * Remote port number.\n *\n * @deprecated Use ATTR_NET_PEER_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;\n/**\n * Remote hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_PEER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;\n/**\n * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n *\n * @deprecated Use ATTR_NET_HOST_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;\n/**\n * Like `net.peer.port` but for the host port.\n *\n * @deprecated Use ATTR_NET_HOST_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;\n/**\n * Local hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_SUBTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CONNECTION_SUBTYPE = TMP_NET_HOST_CONNECTION_SUBTYPE;\n/**\n * The name of the mobile carrier.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;\n/**\n * The mobile carrier country code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MCC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;\n/**\n * The mobile carrier network code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MNC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_ICC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;\n/**\n * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @deprecated Use ATTR_PEER_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;\n/**\n * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n *\n * @deprecated Use ATTR_ENDUSER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;\n/**\n * Actual/assumed role the client is making the request under extracted from token or application security context.\n *\n * @deprecated Use ATTR_ENDUSER_ROLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;\n/**\n * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n *\n * @deprecated Use ATTR_ENDUSER_SCOPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;\n/**\n * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n *\n * @deprecated Use ATTR_THREAD_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_THREAD_ID = TMP_THREAD_ID;\n/**\n * Current thread name.\n *\n * @deprecated Use ATTR_THREAD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n *\n * @deprecated Use ATTR_CODE_FUNCTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;\n/**\n * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n *\n * @deprecated Use ATTR_CODE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @deprecated Use ATTR_CODE_FILEPATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;\n/**\n * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n *\n * @deprecated Use ATTR_CODE_LINENO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;\n/**\n * HTTP request method.\n *\n * @deprecated Use ATTR_HTTP_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;\n/**\n * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n *\n * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n *\n * @deprecated Use ATTR_HTTP_URL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_URL = TMP_HTTP_URL;\n/**\n * The full request target as passed in a HTTP request line or equivalent.\n *\n * @deprecated Use ATTR_HTTP_TARGET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;\n/**\n * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n *\n * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n *\n * @deprecated Use ATTR_HTTP_HOST in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;\n/**\n * The URI scheme identifying the used protocol.\n *\n * @deprecated Use ATTR_HTTP_SCHEME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @deprecated Use ATTR_HTTP_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use ATTR_HTTP_FLAVOR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;\n/**\n * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n *\n * @deprecated Use ATTR_HTTP_USER_AGENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH = TMP_HTTP_REQUEST_CONTENT_LENGTH;\n/**\n * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH = TMP_HTTP_RESPONSE_CONTENT_LENGTH;\n/**\n * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;\n/**\n * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n *\n * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n *\n * @deprecated Use ATTR_HTTP_SERVER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;\n/**\n * The matched route (path template).\n *\n * @deprecated Use ATTR_HTTP_ROUTE.\n */\nexport var SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;\n/**\n* The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n*\n* Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n*\n* @deprecated Use ATTR_HTTP_CLIENT_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;\n/**\n * The keys in the `RequestItems` object field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY = TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSISTENT_READ in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ = TMP_AWS_DYNAMODB_CONSISTENT_READ;\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROJECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;\n/**\n * The value of the `Limit` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LIMIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET = TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;\n/**\n * The value of the `IndexName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_INDEX_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;\n/**\n * The value of the `Select` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SELECT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;\n/**\n * The the number of items in the `TableNames` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCAN_FORWARD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;\n/**\n * The value of the `Segment` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SEGMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS = TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;\n/**\n * The value of the `Count` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCANNED_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT = TMP_AWS_DYNAMODB_SCANNED_COUNT;\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;\n/**\n * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;\n/**\n * A string identifying the messaging system.\n *\n * @deprecated Use ATTR_MESSAGING_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;\n/**\n * The message destination name. This might be equal to the span name but is required nevertheless.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var SEMATTRS_MESSAGING_DESTINATION_KIND = TMP_MESSAGING_DESTINATION_KIND;\n/**\n * A boolean that is true if the message destination is temporary.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_TEMPORARY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_TEMP_DESTINATION = TMP_MESSAGING_TEMP_DESTINATION;\n/**\n * The name of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_NAME.\n */\nexport var SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;\n/**\n * The version of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_VERSION.\n */\nexport var SEMATTRS_MESSAGING_PROTOCOL_VERSION = TMP_MESSAGING_PROTOCOL_VERSION;\n/**\n * Connection string.\n *\n * @deprecated Removed in semconv v1.17.0.\n */\nexport var SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;\n/**\n * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_CONVERSATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;\n/**\n * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_BODY_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES = TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;\n/**\n * The compressed size of the message payload in bytes.\n *\n * @deprecated Removed in semconv v1.22.0.\n */\nexport var SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES = TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use ATTR_MESSAGING_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;\n/**\n * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n *\n * @deprecated Removed in semconv v1.21.0.\n */\nexport var SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;\n/**\n * RabbitMQ message routing key.\n *\n * @deprecated Use ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY = TMP_MESSAGING_RABBITMQ_ROUTING_KEY;\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n *\n * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY = TMP_MESSAGING_KAFKA_MESSAGE_KEY;\n/**\n * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_CONSUMER_GROUP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP = TMP_MESSAGING_KAFKA_CONSUMER_GROUP;\n/**\n * Client Id for the Consumer or Producer that is handling the message.\n *\n * @deprecated Use ATTR_MESSAGING_CLIENT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;\n/**\n * Partition the message is sent to.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;\n/**\n * A string identifying the remoting system.\n *\n * @deprecated Use ATTR_RPC_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @deprecated Use ATTR_RPC_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @deprecated Use ATTR_RPC_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use ATTR_RPC_GRPC_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_REQUEST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;\n/**\n * `error.code` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;\n/**\n * `error.message` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_MESSAGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use ATTR_MESSAGE_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;\n/**\n * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * Note: This way we guarantee that the values will be consistent between different implementations.\n *\n * @deprecated Use ATTR_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;\n/**\n * Compressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_COMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;\n/**\n * Uncompressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_UNCOMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;\n/**\n * Create exported Value Map for SemanticAttributes values\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification\n */\nexport var SemanticAttributes = \n/*#__PURE__*/ createConstMap([\n    TMP_AWS_LAMBDA_INVOKED_ARN,\n    TMP_DB_SYSTEM,\n    TMP_DB_CONNECTION_STRING,\n    TMP_DB_USER,\n    TMP_DB_JDBC_DRIVER_CLASSNAME,\n    TMP_DB_NAME,\n    TMP_DB_STATEMENT,\n    TMP_DB_OPERATION,\n    TMP_DB_MSSQL_INSTANCE_NAME,\n    TMP_DB_CASSANDRA_KEYSPACE,\n    TMP_DB_CASSANDRA_PAGE_SIZE,\n    TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,\n    TMP_DB_CASSANDRA_TABLE,\n    TMP_DB_CASSANDRA_IDEMPOTENCE,\n    TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,\n    TMP_DB_CASSANDRA_COORDINATOR_ID,\n    TMP_DB_CASSANDRA_COORDINATOR_DC,\n    TMP_DB_HBASE_NAMESPACE,\n    TMP_DB_REDIS_DATABASE_INDEX,\n    TMP_DB_MONGODB_COLLECTION,\n    TMP_DB_SQL_TABLE,\n    TMP_EXCEPTION_TYPE,\n    TMP_EXCEPTION_MESSAGE,\n    TMP_EXCEPTION_STACKTRACE,\n    TMP_EXCEPTION_ESCAPED,\n    TMP_FAAS_TRIGGER,\n    TMP_FAAS_EXECUTION,\n    TMP_FAAS_DOCUMENT_COLLECTION,\n    TMP_FAAS_DOCUMENT_OPERATION,\n    TMP_FAAS_DOCUMENT_TIME,\n    TMP_FAAS_DOCUMENT_NAME,\n    TMP_FAAS_TIME,\n    TMP_FAAS_CRON,\n    TMP_FAAS_COLDSTART,\n    TMP_FAAS_INVOKED_NAME,\n    TMP_FAAS_INVOKED_PROVIDER,\n    TMP_FAAS_INVOKED_REGION,\n    TMP_NET_TRANSPORT,\n    TMP_NET_PEER_IP,\n    TMP_NET_PEER_PORT,\n    TMP_NET_PEER_NAME,\n    TMP_NET_HOST_IP,\n    TMP_NET_HOST_PORT,\n    TMP_NET_HOST_NAME,\n    TMP_NET_HOST_CONNECTION_TYPE,\n    TMP_NET_HOST_CONNECTION_SUBTYPE,\n    TMP_NET_HOST_CARRIER_NAME,\n    TMP_NET_HOST_CARRIER_MCC,\n    TMP_NET_HOST_CARRIER_MNC,\n    TMP_NET_HOST_CARRIER_ICC,\n    TMP_PEER_SERVICE,\n    TMP_ENDUSER_ID,\n    TMP_ENDUSER_ROLE,\n    TMP_ENDUSER_SCOPE,\n    TMP_THREAD_ID,\n    TMP_THREAD_NAME,\n    TMP_CODE_FUNCTION,\n    TMP_CODE_NAMESPACE,\n    TMP_CODE_FILEPATH,\n    TMP_CODE_LINENO,\n    TMP_HTTP_METHOD,\n    TMP_HTTP_URL,\n    TMP_HTTP_TARGET,\n    TMP_HTTP_HOST,\n    TMP_HTTP_SCHEME,\n    TMP_HTTP_STATUS_CODE,\n    TMP_HTTP_FLAVOR,\n    TMP_HTTP_USER_AGENT,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_SERVER_NAME,\n    TMP_HTTP_ROUTE,\n    TMP_HTTP_CLIENT_IP,\n    TMP_AWS_DYNAMODB_TABLE_NAMES,\n    TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,\n    TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n    TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n    TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n    TMP_AWS_DYNAMODB_CONSISTENT_READ,\n    TMP_AWS_DYNAMODB_PROJECTION,\n    TMP_AWS_DYNAMODB_LIMIT,\n    TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,\n    TMP_AWS_DYNAMODB_INDEX_NAME,\n    TMP_AWS_DYNAMODB_SELECT,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n    TMP_AWS_DYNAMODB_TABLE_COUNT,\n    TMP_AWS_DYNAMODB_SCAN_FORWARD,\n    TMP_AWS_DYNAMODB_SEGMENT,\n    TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,\n    TMP_AWS_DYNAMODB_COUNT,\n    TMP_AWS_DYNAMODB_SCANNED_COUNT,\n    TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n    TMP_MESSAGING_SYSTEM,\n    TMP_MESSAGING_DESTINATION,\n    TMP_MESSAGING_DESTINATION_KIND,\n    TMP_MESSAGING_TEMP_DESTINATION,\n    TMP_MESSAGING_PROTOCOL,\n    TMP_MESSAGING_PROTOCOL_VERSION,\n    TMP_MESSAGING_URL,\n    TMP_MESSAGING_MESSAGE_ID,\n    TMP_MESSAGING_CONVERSATION_ID,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,\n    TMP_MESSAGING_OPERATION,\n    TMP_MESSAGING_CONSUMER_ID,\n    TMP_MESSAGING_RABBITMQ_ROUTING_KEY,\n    TMP_MESSAGING_KAFKA_MESSAGE_KEY,\n    TMP_MESSAGING_KAFKA_CONSUMER_GROUP,\n    TMP_MESSAGING_KAFKA_CLIENT_ID,\n    TMP_MESSAGING_KAFKA_PARTITION,\n    TMP_MESSAGING_KAFKA_TOMBSTONE,\n    TMP_RPC_SYSTEM,\n    TMP_RPC_SERVICE,\n    TMP_RPC_METHOD,\n    TMP_RPC_GRPC_STATUS_CODE,\n    TMP_RPC_JSONRPC_VERSION,\n    TMP_RPC_JSONRPC_REQUEST_ID,\n    TMP_RPC_JSONRPC_ERROR_CODE,\n    TMP_RPC_JSONRPC_ERROR_MESSAGE,\n    TMP_MESSAGE_TYPE,\n    TMP_MESSAGE_ID,\n    TMP_MESSAGE_COMPRESSED_SIZE,\n    TMP_MESSAGE_UNCOMPRESSED_SIZE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';\nvar TMP_DBSYSTEMVALUES_MSSQL = 'mssql';\nvar TMP_DBSYSTEMVALUES_MYSQL = 'mysql';\nvar TMP_DBSYSTEMVALUES_ORACLE = 'oracle';\nvar TMP_DBSYSTEMVALUES_DB2 = 'db2';\nvar TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';\nvar TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';\nvar TMP_DBSYSTEMVALUES_HIVE = 'hive';\nvar TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';\nvar TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';\nvar TMP_DBSYSTEMVALUES_PROGRESS = 'progress';\nvar TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';\nvar TMP_DBSYSTEMVALUES_HANADB = 'hanadb';\nvar TMP_DBSYSTEMVALUES_INGRES = 'ingres';\nvar TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';\nvar TMP_DBSYSTEMVALUES_EDB = 'edb';\nvar TMP_DBSYSTEMVALUES_CACHE = 'cache';\nvar TMP_DBSYSTEMVALUES_ADABAS = 'adabas';\nvar TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';\nvar TMP_DBSYSTEMVALUES_DERBY = 'derby';\nvar TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';\nvar TMP_DBSYSTEMVALUES_INFORMIX = 'informix';\nvar TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';\nvar TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';\nvar TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';\nvar TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';\nvar TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';\nvar TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';\nvar TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';\nvar TMP_DBSYSTEMVALUES_SYBASE = 'sybase';\nvar TMP_DBSYSTEMVALUES_TERADATA = 'teradata';\nvar TMP_DBSYSTEMVALUES_VERTICA = 'vertica';\nvar TMP_DBSYSTEMVALUES_H2 = 'h2';\nvar TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';\nvar TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';\nvar TMP_DBSYSTEMVALUES_HBASE = 'hbase';\nvar TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';\nvar TMP_DBSYSTEMVALUES_REDIS = 'redis';\nvar TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';\nvar TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';\nvar TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';\nvar TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';\nvar TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';\nvar TMP_DBSYSTEMVALUES_GEODE = 'geode';\nvar TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';\nvar TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';\nvar TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_OTHER_SQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MSSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MYSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ORACLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DB2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POSTGRESQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDSHIFT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CLOUDSCAPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HSQLDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PROGRESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MAXDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HANADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INGRES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIRSTSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_EDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CACHE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ADABAS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIREBIRD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DERBY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FILEMAKER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INFORMIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INSTANTDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INTERBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MARIADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NETEZZA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PERVASIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POINTBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SQLITE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SYBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_TERADATA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_VERTICA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_H2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COLDFUSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CASSANDRA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MONGODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COSMOSDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DYNAMODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NEO4J in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_GEODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ELASTICSEARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MEMCACHED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COCKROACHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;\n/**\n * The constant map of values for DbSystemValues.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport var DbSystemValues = \n/*#__PURE__*/ createConstMap([\n    TMP_DBSYSTEMVALUES_OTHER_SQL,\n    TMP_DBSYSTEMVALUES_MSSQL,\n    TMP_DBSYSTEMVALUES_MYSQL,\n    TMP_DBSYSTEMVALUES_ORACLE,\n    TMP_DBSYSTEMVALUES_DB2,\n    TMP_DBSYSTEMVALUES_POSTGRESQL,\n    TMP_DBSYSTEMVALUES_REDSHIFT,\n    TMP_DBSYSTEMVALUES_HIVE,\n    TMP_DBSYSTEMVALUES_CLOUDSCAPE,\n    TMP_DBSYSTEMVALUES_HSQLDB,\n    TMP_DBSYSTEMVALUES_PROGRESS,\n    TMP_DBSYSTEMVALUES_MAXDB,\n    TMP_DBSYSTEMVALUES_HANADB,\n    TMP_DBSYSTEMVALUES_INGRES,\n    TMP_DBSYSTEMVALUES_FIRSTSQL,\n    TMP_DBSYSTEMVALUES_EDB,\n    TMP_DBSYSTEMVALUES_CACHE,\n    TMP_DBSYSTEMVALUES_ADABAS,\n    TMP_DBSYSTEMVALUES_FIREBIRD,\n    TMP_DBSYSTEMVALUES_DERBY,\n    TMP_DBSYSTEMVALUES_FILEMAKER,\n    TMP_DBSYSTEMVALUES_INFORMIX,\n    TMP_DBSYSTEMVALUES_INSTANTDB,\n    TMP_DBSYSTEMVALUES_INTERBASE,\n    TMP_DBSYSTEMVALUES_MARIADB,\n    TMP_DBSYSTEMVALUES_NETEZZA,\n    TMP_DBSYSTEMVALUES_PERVASIVE,\n    TMP_DBSYSTEMVALUES_POINTBASE,\n    TMP_DBSYSTEMVALUES_SQLITE,\n    TMP_DBSYSTEMVALUES_SYBASE,\n    TMP_DBSYSTEMVALUES_TERADATA,\n    TMP_DBSYSTEMVALUES_VERTICA,\n    TMP_DBSYSTEMVALUES_H2,\n    TMP_DBSYSTEMVALUES_COLDFUSION,\n    TMP_DBSYSTEMVALUES_CASSANDRA,\n    TMP_DBSYSTEMVALUES_HBASE,\n    TMP_DBSYSTEMVALUES_MONGODB,\n    TMP_DBSYSTEMVALUES_REDIS,\n    TMP_DBSYSTEMVALUES_COUCHBASE,\n    TMP_DBSYSTEMVALUES_COUCHDB,\n    TMP_DBSYSTEMVALUES_COSMOSDB,\n    TMP_DBSYSTEMVALUES_DYNAMODB,\n    TMP_DBSYSTEMVALUES_NEO4J,\n    TMP_DBSYSTEMVALUES_GEODE,\n    TMP_DBSYSTEMVALUES_ELASTICSEARCH,\n    TMP_DBSYSTEMVALUES_MEMCACHED,\n    TMP_DBSYSTEMVALUES_COCKROACHDB,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';\nvar TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ALL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ONE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_TWO = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_THREE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_ANY = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;\n/**\n * The constant map of values for DbCassandraConsistencyLevelValues.\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport var DbCassandraConsistencyLevelValues = \n/*#__PURE__*/ createConstMap([\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';\nvar TMP_FAASTRIGGERVALUES_HTTP = 'http';\nvar TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';\nvar TMP_FAASTRIGGERVALUES_TIMER = 'timer';\nvar TMP_FAASTRIGGERVALUES_OTHER = 'other';\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_DATASOURCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_HTTP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_PUBSUB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_TIMER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;\n/**\n * The constant map of values for FaasTriggerValues.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport var FaasTriggerValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASTRIGGERVALUES_DATASOURCE,\n    TMP_FAASTRIGGERVALUES_HTTP,\n    TMP_FAASTRIGGERVALUES_PUBSUB,\n    TMP_FAASTRIGGERVALUES_TIMER,\n    TMP_FAASTRIGGERVALUES_OTHER,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';\nvar TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';\nvar TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_INSERT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_INSERT = TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_EDIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_EDIT = TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_DELETE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASDOCUMENTOPERATIONVALUES_DELETE = TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;\n/**\n * The constant map of values for FaasDocumentOperationValues.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport var FaasDocumentOperationValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nvar TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';\nvar TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';\nvar TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_AZURE = TMP_FAASINVOKEDPROVIDERVALUES_AZURE;\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;\n/**\n * The constant map of values for FaasInvokedProviderValues.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport var FaasInvokedProviderValues = \n/*#__PURE__*/ createConstMap([\n    TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_FAASINVOKEDPROVIDERVALUES_AWS,\n    TMP_FAASINVOKEDPROVIDERVALUES_AZURE,\n    TMP_FAASINVOKEDPROVIDERVALUES_GCP,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';\nvar TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';\nvar TMP_NETTRANSPORTVALUES_IP = 'ip';\nvar TMP_NETTRANSPORTVALUES_UNIX = 'unix';\nvar TMP_NETTRANSPORTVALUES_PIPE = 'pipe';\nvar TMP_NETTRANSPORTVALUES_INPROC = 'inproc';\nvar TMP_NETTRANSPORTVALUES_OTHER = 'other';\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_TCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_UDP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport var NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport var NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_PIPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_INPROC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;\n/**\n * The constant map of values for NetTransportValues.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport var NetTransportValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETTRANSPORTVALUES_IP_TCP,\n    TMP_NETTRANSPORTVALUES_IP_UDP,\n    TMP_NETTRANSPORTVALUES_IP,\n    TMP_NETTRANSPORTVALUES_UNIX,\n    TMP_NETTRANSPORTVALUES_PIPE,\n    TMP_NETTRANSPORTVALUES_INPROC,\n    TMP_NETTRANSPORTVALUES_OTHER,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';\nvar TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIFI in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_WIFI = TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIRED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_WIRED = TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_CELL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_CELL = TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;\n/**\n * The constant map of values for NetHostConnectionTypeValues.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport var NetHostConnectionTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';\nvar TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_LTE = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GSM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_GSM = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_NR = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;\n/**\n * The constant map of values for NetHostConnectionSubtypeValues.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport var NetHostConnectionSubtypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';\nvar TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';\nvar TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';\nvar TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';\nvar TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_1 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_2_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_SPDY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_QUIC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;\n/**\n * The constant map of values for HttpFlavorValues.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport var HttpFlavorValues = {\n    HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,\n    HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,\n    HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,\n    SPDY: TMP_HTTPFLAVORVALUES_SPDY,\n    QUIC: TMP_HTTPFLAVORVALUES_QUIC,\n};\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';\nvar TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var MESSAGINGDESTINATIONKINDVALUES_QUEUE = TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport var MESSAGINGDESTINATIONKINDVALUES_TOPIC = TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n/**\n * The constant map of values for MessagingDestinationKindValues.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport var MessagingDestinationKindValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n    TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';\nvar TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_RECEIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGINGOPERATIONVALUES_RECEIVE = TMP_MESSAGINGOPERATIONVALUES_RECEIVE;\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_PROCESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGINGOPERATIONVALUES_PROCESS = TMP_MESSAGINGOPERATIONVALUES_PROCESS;\n/**\n * The constant map of values for MessagingOperationValues.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport var MessagingOperationValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGINGOPERATIONVALUES_RECEIVE,\n    TMP_MESSAGINGOPERATIONVALUES_PROCESS,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;\nvar TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;\nvar TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;\nvar TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;\nvar TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;\nvar TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;\nvar TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;\nvar TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;\nvar TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;\nvar TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;\nvar TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;\nvar TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;\nvar TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;\nvar TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_CANCELLED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_CANCELLED = TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNKNOWN = TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_NOT_FOUND = TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ABORTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_ABORTED = TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INTERNAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_INTERNAL = TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_DATA_LOSS = TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;\n/**\n * The constant map of values for RpcGrpcStatusCodeValues.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport var RpcGrpcStatusCodeValues = {\n    OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,\n    CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,\n    UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,\n    INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,\n    DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,\n    NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,\n    ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,\n    PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,\n    RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,\n    FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,\n    ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,\n    OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,\n    UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,\n    INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,\n    UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,\n    DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,\n    UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,\n};\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_MESSAGETYPEVALUES_SENT = 'SENT';\nvar TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_SENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_RECEIVED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;\n/**\n * The constant map of values for MessageTypeValues.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport var MessageTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_MESSAGETYPEVALUES_SENT,\n    TMP_MESSAGETYPEVALUES_RECEIVED,\n]);\n//# sourceMappingURL=SemanticAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createConstMap } from '../internal/utils';\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticResourceAttributes\n//----------------------------------------------------------------------------------------------------------\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUD_PROVIDER = 'cloud.provider';\nvar TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';\nvar TMP_CLOUD_REGION = 'cloud.region';\nvar TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\nvar TMP_CLOUD_PLATFORM = 'cloud.platform';\nvar TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\nvar TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\nvar TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\nvar TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\nvar TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\nvar TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\nvar TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\nvar TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\nvar TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\nvar TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\nvar TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\nvar TMP_CONTAINER_NAME = 'container.name';\nvar TMP_CONTAINER_ID = 'container.id';\nvar TMP_CONTAINER_RUNTIME = 'container.runtime';\nvar TMP_CONTAINER_IMAGE_NAME = 'container.image.name';\nvar TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';\nvar TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\nvar TMP_DEVICE_ID = 'device.id';\nvar TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\nvar TMP_DEVICE_MODEL_NAME = 'device.model.name';\nvar TMP_FAAS_NAME = 'faas.name';\nvar TMP_FAAS_ID = 'faas.id';\nvar TMP_FAAS_VERSION = 'faas.version';\nvar TMP_FAAS_INSTANCE = 'faas.instance';\nvar TMP_FAAS_MAX_MEMORY = 'faas.max_memory';\nvar TMP_HOST_ID = 'host.id';\nvar TMP_HOST_NAME = 'host.name';\nvar TMP_HOST_TYPE = 'host.type';\nvar TMP_HOST_ARCH = 'host.arch';\nvar TMP_HOST_IMAGE_NAME = 'host.image.name';\nvar TMP_HOST_IMAGE_ID = 'host.image.id';\nvar TMP_HOST_IMAGE_VERSION = 'host.image.version';\nvar TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';\nvar TMP_K8S_NODE_NAME = 'k8s.node.name';\nvar TMP_K8S_NODE_UID = 'k8s.node.uid';\nvar TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\nvar TMP_K8S_POD_UID = 'k8s.pod.uid';\nvar TMP_K8S_POD_NAME = 'k8s.pod.name';\nvar TMP_K8S_CONTAINER_NAME = 'k8s.container.name';\nvar TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\nvar TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\nvar TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\nvar TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\nvar TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\nvar TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\nvar TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\nvar TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\nvar TMP_K8S_JOB_UID = 'k8s.job.uid';\nvar TMP_K8S_JOB_NAME = 'k8s.job.name';\nvar TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\nvar TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\nvar TMP_OS_TYPE = 'os.type';\nvar TMP_OS_DESCRIPTION = 'os.description';\nvar TMP_OS_NAME = 'os.name';\nvar TMP_OS_VERSION = 'os.version';\nvar TMP_PROCESS_PID = 'process.pid';\nvar TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\nvar TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\nvar TMP_PROCESS_COMMAND = 'process.command';\nvar TMP_PROCESS_COMMAND_LINE = 'process.command_line';\nvar TMP_PROCESS_COMMAND_ARGS = 'process.command_args';\nvar TMP_PROCESS_OWNER = 'process.owner';\nvar TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nvar TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\nvar TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\nvar TMP_SERVICE_NAME = 'service.name';\nvar TMP_SERVICE_NAMESPACE = 'service.namespace';\nvar TMP_SERVICE_INSTANCE_ID = 'service.instance.id';\nvar TMP_SERVICE_VERSION = 'service.version';\nvar TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\nvar TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\nvar TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\nvar TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';\nvar TMP_WEBENGINE_NAME = 'webengine.name';\nvar TMP_WEBENGINE_VERSION = 'webengine.version';\nvar TMP_WEBENGINE_DESCRIPTION = 'webengine.description';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use ATTR_CLOUD_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @deprecated Use ATTR_CLOUD_ACCOUNT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;\n/**\n * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n *\n * @deprecated Use ATTR_CLOUD_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n *\n * @deprecated Use ATTR_CLOUD_AVAILABILITY_ZONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use ATTR_CLOUD_PLATFORM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CONTAINER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use ATTR_AWS_ECS_LAUNCHTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;\n/**\n * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;\n/**\n * The task definition family this task definition is a member of.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_FAMILY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;\n/**\n * The revision for this task definition.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_REVISION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;\n/**\n * The ARN of an EKS cluster.\n *\n * @deprecated Use ATTR_AWS_EKS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;\n/**\n * Container name.\n *\n * @deprecated Use ATTR_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n *\n * @deprecated Use ATTR_CONTAINER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;\n/**\n * The container runtime managing this container.\n *\n * @deprecated Use ATTR_CONTAINER_RUNTIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;\n/**\n * Name of the image the container was built on.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;\n/**\n * Container image tag.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_TAGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;\n/**\n * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @deprecated Use ATTR_DEPLOYMENT_ENVIRONMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;\n/**\n * A unique identifier representing the device.\n *\n * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @deprecated Use ATTR_DEVICE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;\n/**\n * The model identifier for the device.\n *\n * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_IDENTIFIER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;\n/**\n * The marketing name for the device model.\n *\n * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;\n/**\n * The name of the single function that this runtime instance executes.\n *\n * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n *\n * @deprecated Use ATTR_FAAS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;\n/**\n* The unique ID of the single function that this runtime instance executes.\n*\n* Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n*\n* @deprecated Use ATTR_CLOUD_RESOURCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;\n/**\n* The immutable version of the function being executed.\n*\n* Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n*\n* @deprecated Use ATTR_FAAS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport var SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * Note: * **AWS Lambda:** Use the (full) log stream name.\n *\n * @deprecated Use ATTR_FAAS_INSTANCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;\n/**\n * The amount of memory available to the serverless function in MiB.\n *\n * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n *\n * @deprecated Use ATTR_FAAS_MAX_MEMORY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n *\n * @deprecated Use ATTR_HOST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_ID = TMP_HOST_ID;\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @deprecated Use ATTR_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @deprecated Use ATTR_HOST_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use ATTR_HOST_ARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @deprecated Use ATTR_HOST_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;\n/**\n * VM image ID. For Cloud, this value is from the provider.\n *\n * @deprecated Use ATTR_HOST_IMAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;\n/**\n * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n *\n * @deprecated Use ATTR_HOST_IMAGE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;\n/**\n * The name of the cluster.\n *\n * @deprecated Use ATTR_K8S_CLUSTER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;\n/**\n * The name of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;\n/**\n * The UID of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;\n/**\n * The name of the namespace that the pod is running in.\n *\n * @deprecated Use ATTR_K8S_NAMESPACE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;\n/**\n * The UID of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;\n/**\n * The name of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;\n/**\n * The name of the Container in a Pod template.\n *\n * @deprecated Use ATTR_K8S_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;\n/**\n * The UID of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;\n/**\n * The name of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;\n/**\n * The UID of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;\n/**\n * The name of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;\n/**\n * The UID of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;\n/**\n * The name of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;\n/**\n * The UID of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;\n/**\n * The name of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;\n/**\n * The UID of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;\n/**\n * The name of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;\n/**\n * The UID of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;\n/**\n * The name of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;\n/**\n * The operating system type.\n *\n * @deprecated Use ATTR_OS_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @deprecated Use ATTR_OS_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;\n/**\n * Human readable operating system name.\n *\n * @deprecated Use ATTR_OS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_NAME = TMP_OS_NAME;\n/**\n * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n *\n * @deprecated Use ATTR_OS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;\n/**\n * Process identifier (PID).\n *\n * @deprecated Use ATTR_PROCESS_PID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_PATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_LINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_ARGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;\n/**\n * The username of the user that owns the process.\n *\n * @deprecated Use ATTR_PROCESS_OWNER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;\n/**\n * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION = TMP_PROCESS_RUNTIME_DESCRIPTION;\n/**\n * Logical name of the service.\n *\n * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n *\n * @deprecated Use ATTR_SERVICE_NAME.\n */\nexport var SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;\n/**\n * A namespace for `service.name`.\n *\n * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @deprecated Use ATTR_SERVICE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;\n/**\n * The string ID of the service instance.\n *\n * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n *\n * @deprecated Use ATTR_SERVICE_INSTANCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;\n/**\n * The version string of the service API or implementation.\n *\n * @deprecated Use ATTR_SERVICE_VERSION.\n */\nexport var SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_NAME.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_LANGUAGE.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;\n/**\n * The version string of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_VERSION.\n */\nexport var SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;\n/**\n * The version string of the auto instrumentation agent, if used.\n *\n * @deprecated Use ATTR_TELEMETRY_DISTRO_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;\n/**\n * The name of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;\n/**\n * The version of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @deprecated Use ATTR_WEBENGINE_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;\n/**\n * Create exported Value Map for SemanticResourceAttributes values\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification\n */\nexport var SemanticResourceAttributes = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUD_PROVIDER,\n    TMP_CLOUD_ACCOUNT_ID,\n    TMP_CLOUD_REGION,\n    TMP_CLOUD_AVAILABILITY_ZONE,\n    TMP_CLOUD_PLATFORM,\n    TMP_AWS_ECS_CONTAINER_ARN,\n    TMP_AWS_ECS_CLUSTER_ARN,\n    TMP_AWS_ECS_LAUNCHTYPE,\n    TMP_AWS_ECS_TASK_ARN,\n    TMP_AWS_ECS_TASK_FAMILY,\n    TMP_AWS_ECS_TASK_REVISION,\n    TMP_AWS_EKS_CLUSTER_ARN,\n    TMP_AWS_LOG_GROUP_NAMES,\n    TMP_AWS_LOG_GROUP_ARNS,\n    TMP_AWS_LOG_STREAM_NAMES,\n    TMP_AWS_LOG_STREAM_ARNS,\n    TMP_CONTAINER_NAME,\n    TMP_CONTAINER_ID,\n    TMP_CONTAINER_RUNTIME,\n    TMP_CONTAINER_IMAGE_NAME,\n    TMP_CONTAINER_IMAGE_TAG,\n    TMP_DEPLOYMENT_ENVIRONMENT,\n    TMP_DEVICE_ID,\n    TMP_DEVICE_MODEL_IDENTIFIER,\n    TMP_DEVICE_MODEL_NAME,\n    TMP_FAAS_NAME,\n    TMP_FAAS_ID,\n    TMP_FAAS_VERSION,\n    TMP_FAAS_INSTANCE,\n    TMP_FAAS_MAX_MEMORY,\n    TMP_HOST_ID,\n    TMP_HOST_NAME,\n    TMP_HOST_TYPE,\n    TMP_HOST_ARCH,\n    TMP_HOST_IMAGE_NAME,\n    TMP_HOST_IMAGE_ID,\n    TMP_HOST_IMAGE_VERSION,\n    TMP_K8S_CLUSTER_NAME,\n    TMP_K8S_NODE_NAME,\n    TMP_K8S_NODE_UID,\n    TMP_K8S_NAMESPACE_NAME,\n    TMP_K8S_POD_UID,\n    TMP_K8S_POD_NAME,\n    TMP_K8S_CONTAINER_NAME,\n    TMP_K8S_REPLICASET_UID,\n    TMP_K8S_REPLICASET_NAME,\n    TMP_K8S_DEPLOYMENT_UID,\n    TMP_K8S_DEPLOYMENT_NAME,\n    TMP_K8S_STATEFULSET_UID,\n    TMP_K8S_STATEFULSET_NAME,\n    TMP_K8S_DAEMONSET_UID,\n    TMP_K8S_DAEMONSET_NAME,\n    TMP_K8S_JOB_UID,\n    TMP_K8S_JOB_NAME,\n    TMP_K8S_CRONJOB_UID,\n    TMP_K8S_CRONJOB_NAME,\n    TMP_OS_TYPE,\n    TMP_OS_DESCRIPTION,\n    TMP_OS_NAME,\n    TMP_OS_VERSION,\n    TMP_PROCESS_PID,\n    TMP_PROCESS_EXECUTABLE_NAME,\n    TMP_PROCESS_EXECUTABLE_PATH,\n    TMP_PROCESS_COMMAND,\n    TMP_PROCESS_COMMAND_LINE,\n    TMP_PROCESS_COMMAND_ARGS,\n    TMP_PROCESS_OWNER,\n    TMP_PROCESS_RUNTIME_NAME,\n    TMP_PROCESS_RUNTIME_VERSION,\n    TMP_PROCESS_RUNTIME_DESCRIPTION,\n    TMP_SERVICE_NAME,\n    TMP_SERVICE_NAMESPACE,\n    TMP_SERVICE_INSTANCE_ID,\n    TMP_SERVICE_VERSION,\n    TMP_TELEMETRY_SDK_NAME,\n    TMP_TELEMETRY_SDK_LANGUAGE,\n    TMP_TELEMETRY_SDK_VERSION,\n    TMP_TELEMETRY_AUTO_VERSION,\n    TMP_WEBENGINE_NAME,\n    TMP_WEBENGINE_VERSION,\n    TMP_WEBENGINE_DESCRIPTION,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nvar TMP_CLOUDPROVIDERVALUES_AWS = 'aws';\nvar TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';\nvar TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_ALIBABA_CLOUD = TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;\n/**\n * The constant map of values for CloudProviderValues.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport var CloudProviderValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_CLOUDPROVIDERVALUES_AWS,\n    TMP_CLOUDPROVIDERVALUES_AZURE,\n    TMP_CLOUDPROVIDERVALUES_GCP,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';\nvar TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';\nvar TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';\nvar TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';\nvar TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';\nvar TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';\nvar TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = 'azure_container_instances';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';\nvar TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';\nvar TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';\nvar TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';\nvar TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';\nvar TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';\nvar TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_LAMBDA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_LAMBDA = TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_VM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES = TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_AKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var CLOUDPLATFORMVALUES_GCP_APP_ENGINE = TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;\n/**\n * The constant map of values for CloudPlatformValues.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport var CloudPlatformValues = \n/*#__PURE__*/ createConstMap([\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,\n    TMP_CLOUDPLATFORMVALUES_AWS_EC2,\n    TMP_CLOUDPLATFORMVALUES_AWS_ECS,\n    TMP_CLOUDPLATFORMVALUES_AWS_EKS,\n    TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,\n    TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,\n    TMP_CLOUDPLATFORMVALUES_AZURE_VM,\n    TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,\n    TMP_CLOUDPLATFORMVALUES_AZURE_AKS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n    TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n    TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';\nvar TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_FARGATE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var AWSECSLAUNCHTYPEVALUES_FARGATE = TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;\n/**\n * The constant map of values for AwsEcsLaunchtypeValues.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport var AwsEcsLaunchtypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_AWSECSLAUNCHTYPEVALUES_EC2,\n    TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_HOSTARCHVALUES_AMD64 = 'amd64';\nvar TMP_HOSTARCHVALUES_ARM32 = 'arm32';\nvar TMP_HOSTARCHVALUES_ARM64 = 'arm64';\nvar TMP_HOSTARCHVALUES_IA64 = 'ia64';\nvar TMP_HOSTARCHVALUES_PPC32 = 'ppc32';\nvar TMP_HOSTARCHVALUES_PPC64 = 'ppc64';\nvar TMP_HOSTARCHVALUES_X86 = 'x86';\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_AMD64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_IA64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_X86 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;\n/**\n * The constant map of values for HostArchValues.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport var HostArchValues = \n/*#__PURE__*/ createConstMap([\n    TMP_HOSTARCHVALUES_AMD64,\n    TMP_HOSTARCHVALUES_ARM32,\n    TMP_HOSTARCHVALUES_ARM64,\n    TMP_HOSTARCHVALUES_IA64,\n    TMP_HOSTARCHVALUES_PPC32,\n    TMP_HOSTARCHVALUES_PPC64,\n    TMP_HOSTARCHVALUES_X86,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for OsTypeValues enum definition\n *\n * The operating system type.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_OSTYPEVALUES_WINDOWS = 'windows';\nvar TMP_OSTYPEVALUES_LINUX = 'linux';\nvar TMP_OSTYPEVALUES_DARWIN = 'darwin';\nvar TMP_OSTYPEVALUES_FREEBSD = 'freebsd';\nvar TMP_OSTYPEVALUES_NETBSD = 'netbsd';\nvar TMP_OSTYPEVALUES_OPENBSD = 'openbsd';\nvar TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';\nvar TMP_OSTYPEVALUES_HPUX = 'hpux';\nvar TMP_OSTYPEVALUES_AIX = 'aix';\nvar TMP_OSTYPEVALUES_SOLARIS = 'solaris';\nvar TMP_OSTYPEVALUES_Z_OS = 'z_os';\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_WINDOWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_LINUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DARWIN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_FREEBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_NETBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_OPENBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DRAGONFLYBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_HPUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_AIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_SOLARIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_Z_OS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport var OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;\n/**\n * The constant map of values for OsTypeValues.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport var OsTypeValues = \n/*#__PURE__*/ createConstMap([\n    TMP_OSTYPEVALUES_WINDOWS,\n    TMP_OSTYPEVALUES_LINUX,\n    TMP_OSTYPEVALUES_DARWIN,\n    TMP_OSTYPEVALUES_FREEBSD,\n    TMP_OSTYPEVALUES_NETBSD,\n    TMP_OSTYPEVALUES_OPENBSD,\n    TMP_OSTYPEVALUES_DRAGONFLYBSD,\n    TMP_OSTYPEVALUES_HPUX,\n    TMP_OSTYPEVALUES_AIX,\n    TMP_OSTYPEVALUES_SOLARIS,\n    TMP_OSTYPEVALUES_Z_OS,\n]);\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * ---------------------------------------------------------------------------------------------------------- */\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';\nvar TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_CPP.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_CPP = TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_DOTNET = TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_ERLANG = TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_GO.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_JAVA.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_JAVA = TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_NODEJS = TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PHP.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_PHP = TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_PYTHON = TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_RUBY.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_RUBY = TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS.\n */\nexport var TELEMETRYSDKLANGUAGEVALUES_WEBJS = TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;\n/**\n * The constant map of values for TelemetrySdkLanguageValues.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport var TelemetrySdkLanguageValues = \n/*#__PURE__*/ createConstMap([\n    TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_GO,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n]);\n//# sourceMappingURL=SemanticResourceAttributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates/registry/stable/attributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n/**\n * ASP.NET Core exception middleware handling result\n *\n * @example handled\n * @example unhandled\n */\nexport var ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = 'aspnetcore.diagnostics.exception.result';\n/**\n  * Enum value \"aborted\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport var ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = \"aborted\";\n/**\n  * Enum value \"handled\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport var ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = \"handled\";\n/**\n  * Enum value \"skipped\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport var ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = \"skipped\";\n/**\n  * Enum value \"unhandled\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport var ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = \"unhandled\";\n/**\n * Full type name of the [`IExceptionHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.diagnostics.iexceptionhandler) implementation that handled the exception.\n *\n * @example Contoso.MyHandler\n */\nexport var ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = 'aspnetcore.diagnostics.handler.type';\n/**\n * Rate limiting policy name.\n *\n * @example fixed\n * @example sliding\n * @example token\n */\nexport var ATTR_ASPNETCORE_RATE_LIMITING_POLICY = 'aspnetcore.rate_limiting.policy';\n/**\n * Rate-limiting result, shows whether the lease was acquired or contains a rejection reason\n *\n * @example acquired\n * @example request_canceled\n */\nexport var ATTR_ASPNETCORE_RATE_LIMITING_RESULT = 'aspnetcore.rate_limiting.result';\n/**\n  * Enum value \"acquired\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport var ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = \"acquired\";\n/**\n  * Enum value \"endpoint_limiter\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport var ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = \"endpoint_limiter\";\n/**\n  * Enum value \"global_limiter\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport var ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = \"global_limiter\";\n/**\n  * Enum value \"request_canceled\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport var ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = \"request_canceled\";\n/**\n * Flag indicating if request was handled by the application pipeline.\n *\n * @example true\n */\nexport var ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = 'aspnetcore.request.is_unhandled';\n/**\n * A value that indicates whether the matched route is a fallback route.\n *\n * @example true\n */\nexport var ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = 'aspnetcore.routing.is_fallback';\n/**\n * Match result - success or failure\n *\n * @example success\n * @example failure\n */\nexport var ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = 'aspnetcore.routing.match_status';\n/**\n  * Enum value \"failure\" for attribute {@link ATTR_ASPNETCORE_ROUTING_MATCH_STATUS}.\n  */\nexport var ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = \"failure\";\n/**\n  * Enum value \"success\" for attribute {@link ATTR_ASPNETCORE_ROUTING_MATCH_STATUS}.\n  */\nexport var ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = \"success\";\n/**\n * Client address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n *\n * @example client.example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n *\n * @note When observed from the server side, and when communicating through an intermediary, `client.address` **SHOULD** represent the client address behind any intermediaries,  for example proxies, if it's available.\n */\nexport var ATTR_CLIENT_ADDRESS = 'client.address';\n/**\n * Client port number.\n *\n * @example 65123\n *\n * @note When observed from the server side, and when communicating through an intermediary, `client.port` **SHOULD** represent the client port behind any intermediaries,  for example proxies, if it's available.\n */\nexport var ATTR_CLIENT_PORT = 'client.port';\n/**\n * Name of the garbage collector managed heap generation.\n *\n * @example gen0\n * @example gen1\n * @example gen2\n */\nexport var ATTR_DOTNET_GC_HEAP_GENERATION = 'dotnet.gc.heap.generation';\n/**\n  * Enum value \"gen0\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_GEN0 = \"gen0\";\n/**\n  * Enum value \"gen1\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_GEN1 = \"gen1\";\n/**\n  * Enum value \"gen2\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_GEN2 = \"gen2\";\n/**\n  * Enum value \"loh\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_LOH = \"loh\";\n/**\n  * Enum value \"poh\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport var DOTNET_GC_HEAP_GENERATION_VALUE_POH = \"poh\";\n/**\n * Describes a class of error the operation ended with.\n *\n * @example timeout\n * @example java.net.UnknownHostException\n * @example server_certificate_invalid\n * @example 500\n *\n * @note The `error.type` **SHOULD** be predictable, and **SHOULD** have low cardinality.\n *\n * When `error.type` is set to a type (e.g., an exception type), its\n * canonical class name identifying the type within the artifact **SHOULD** be used.\n *\n * Instrumentations **SHOULD** document the list of errors they report.\n *\n * The cardinality of `error.type` within one instrumentation library **SHOULD** be low.\n * Telemetry consumers that aggregate data from multiple instrumentation libraries and applications\n * should be prepared for `error.type` to have high cardinality at query time when no\n * additional filters are applied.\n *\n * If the operation has completed successfully, instrumentations **SHOULD NOT** set `error.type`.\n *\n * If a specific domain defines its own set of error identifiers (such as HTTP or gRPC status codes),\n * it's **RECOMMENDED** to:\n *\n *   - Use a domain-specific attribute\n *   - Set `error.type` to capture all errors, regardless of whether they are defined within the domain-specific set or not.\n */\nexport var ATTR_ERROR_TYPE = 'error.type';\n/**\n  * Enum value \"_OTHER\" for attribute {@link ATTR_ERROR_TYPE}.\n  */\nexport var ERROR_TYPE_VALUE_OTHER = \"_OTHER\";\n/**\n * Indicates that the exception is escaping the scope of the span.\n *\n * @deprecated It's no longer recommended to record exceptions that are handled and do not escape the scope of a span.\n */\nexport var ATTR_EXCEPTION_ESCAPED = 'exception.escaped';\n/**\n * The exception message.\n *\n * @example Division by zero\n * @example Can't convert 'int' object to str implicitly\n */\nexport var ATTR_EXCEPTION_MESSAGE = 'exception.message';\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @example \"Exception in thread \"main\" java.lang.RuntimeException: Test exception\\\\n at com.example.GenerateTrace.methodB(GenerateTrace.java:13)\\\\n at com.example.GenerateTrace.methodA(GenerateTrace.java:9)\\\\n at com.example.GenerateTrace.main(GenerateTrace.java:5)\\\\n\"\n */\nexport var ATTR_EXCEPTION_STACKTRACE = 'exception.stacktrace';\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @example java.net.ConnectException\n * @example OSError\n */\nexport var ATTR_EXCEPTION_TYPE = 'exception.type';\n/**\n * HTTP request headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.\n *\n * @example http.request.header.content-type=[\"application/json\"]\n * @example http.request.header.x-forwarded-for=[\"1.2.3.4\", \"1.2.3.5\"]\n *\n * @note Instrumentations **SHOULD** require an explicit configuration of which headers are to be captured. Including all request headers can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * The `User-Agent` header is already captured in the `user_agent.original` attribute. Users **MAY** explicitly configure instrumentations to capture them even though it is not recommended.\n * The attribute value **MUST** consist of either multiple header values as an array of strings or a single-item array containing a possibly comma-concatenated string, depending on the way the HTTP library provides access to headers.\n */\nexport var ATTR_HTTP_REQUEST_HEADER = function (key) { return \"http.request.header.\".concat(key); };\n/**\n * HTTP request method.\n *\n * @example GET\n * @example POST\n * @example HEAD\n *\n * @note HTTP request method value **SHOULD** be \"known\" to the instrumentation.\n * By default, this convention defines \"known\" methods as the ones listed in [RFC9110](https://www.rfc-editor.org/rfc/rfc9110.html#name-methods)\n * and the PATCH method defined in [RFC5789](https://www.rfc-editor.org/rfc/rfc5789.html).\n *\n * If the HTTP request method is not known to instrumentation, it **MUST** set the `http.request.method` attribute to `_OTHER`.\n *\n * If the HTTP instrumentation could end up converting valid HTTP request methods to `_OTHER`, then it **MUST** provide a way to override\n * the list of known HTTP methods. If this override is done via environment variable, then the environment variable **MUST** be named\n * OTEL_INSTRUMENTATION_HTTP_KNOWN_METHODS and support a comma-separated list of case-sensitive known HTTP methods\n * (this list **MUST** be a full override of the default known method, it is not a list of known methods in addition to the defaults).\n *\n * HTTP method names are case-sensitive and `http.request.method` attribute value **MUST** match a known HTTP method name exactly.\n * Instrumentations for specific web frameworks that consider HTTP methods to be case insensitive, **SHOULD** populate a canonical equivalent.\n * Tracing instrumentations that do so, **MUST** also set `http.request.method_original` to the original value.\n */\nexport var ATTR_HTTP_REQUEST_METHOD = 'http.request.method';\n/**\n  * Enum value \"_OTHER\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_OTHER = \"_OTHER\";\n/**\n  * Enum value \"CONNECT\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_CONNECT = \"CONNECT\";\n/**\n  * Enum value \"DELETE\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_DELETE = \"DELETE\";\n/**\n  * Enum value \"GET\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_GET = \"GET\";\n/**\n  * Enum value \"HEAD\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_HEAD = \"HEAD\";\n/**\n  * Enum value \"OPTIONS\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_OPTIONS = \"OPTIONS\";\n/**\n  * Enum value \"PATCH\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_PATCH = \"PATCH\";\n/**\n  * Enum value \"POST\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_POST = \"POST\";\n/**\n  * Enum value \"PUT\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_PUT = \"PUT\";\n/**\n  * Enum value \"TRACE\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport var HTTP_REQUEST_METHOD_VALUE_TRACE = \"TRACE\";\n/**\n * Original HTTP method sent by the client in the request line.\n *\n * @example GeT\n * @example ACL\n * @example foo\n */\nexport var ATTR_HTTP_REQUEST_METHOD_ORIGINAL = 'http.request.method_original';\n/**\n * The ordinal number of request resending attempt (for any reason, including redirects).\n *\n * @example 3\n *\n * @note The resend count **SHOULD** be updated each time an HTTP request gets resent by the client, regardless of what was the cause of the resending (e.g. redirection, authorization failure, 503 Server Unavailable, network issues, or any other).\n */\nexport var ATTR_HTTP_REQUEST_RESEND_COUNT = 'http.request.resend_count';\n/**\n * HTTP response headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.\n *\n * @example http.response.header.content-type=[\"application/json\"]\n * @example http.response.header.my-custom-header=[\"abc\", \"def\"]\n *\n * @note Instrumentations **SHOULD** require an explicit configuration of which headers are to be captured. Including all response headers can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * Users **MAY** explicitly configure instrumentations to capture them even though it is not recommended.\n * The attribute value **MUST** consist of either multiple header values as an array of strings or a single-item array containing a possibly comma-concatenated string, depending on the way the HTTP library provides access to headers.\n */\nexport var ATTR_HTTP_RESPONSE_HEADER = function (key) { return \"http.response.header.\".concat(key); };\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @example 200\n */\nexport var ATTR_HTTP_RESPONSE_STATUS_CODE = 'http.response.status_code';\n/**\n * The matched route, that is, the path template in the format used by the respective server framework.\n *\n * @example /users/:userID?\n * @example {controller}/{action}/{id?}\n *\n * @note **MUST NOT** be populated when this is not supported by the HTTP server framework as the route attribute should have low-cardinality and the URI path can NOT substitute it.\n * **SHOULD** include the [application root](/docs/http/http-spans.md#http-server-definitions) if there is one.\n */\nexport var ATTR_HTTP_ROUTE = 'http.route';\n/**\n * Name of the garbage collector action.\n *\n * @example end of minor GC\n * @example end of major GC\n *\n * @note Garbage collector action is generally obtained via [GarbageCollectionNotificationInfo#getGcAction()](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.management/com/sun/management/GarbageCollectionNotificationInfo.html#getGcAction()).\n */\nexport var ATTR_JVM_GC_ACTION = 'jvm.gc.action';\n/**\n * Name of the garbage collector.\n *\n * @example G1 Young Generation\n * @example G1 Old Generation\n *\n * @note Garbage collector name is generally obtained via [GarbageCollectionNotificationInfo#getGcName()](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.management/com/sun/management/GarbageCollectionNotificationInfo.html#getGcName()).\n */\nexport var ATTR_JVM_GC_NAME = 'jvm.gc.name';\n/**\n * Name of the memory pool.\n *\n * @example G1 Old Gen\n * @example G1 Eden space\n * @example G1 Survivor Space\n *\n * @note Pool names are generally obtained via [MemoryPoolMXBean#getName()](https://docs.oracle.com/en/java/javase/11/docs/api/java.management/java/lang/management/MemoryPoolMXBean.html#getName()).\n */\nexport var ATTR_JVM_MEMORY_POOL_NAME = 'jvm.memory.pool.name';\n/**\n * The type of memory.\n *\n * @example heap\n * @example non_heap\n */\nexport var ATTR_JVM_MEMORY_TYPE = 'jvm.memory.type';\n/**\n  * Enum value \"heap\" for attribute {@link ATTR_JVM_MEMORY_TYPE}.\n  */\nexport var JVM_MEMORY_TYPE_VALUE_HEAP = \"heap\";\n/**\n  * Enum value \"non_heap\" for attribute {@link ATTR_JVM_MEMORY_TYPE}.\n  */\nexport var JVM_MEMORY_TYPE_VALUE_NON_HEAP = \"non_heap\";\n/**\n * Whether the thread is daemon or not.\n */\nexport var ATTR_JVM_THREAD_DAEMON = 'jvm.thread.daemon';\n/**\n * State of the thread.\n *\n * @example runnable\n * @example blocked\n */\nexport var ATTR_JVM_THREAD_STATE = 'jvm.thread.state';\n/**\n  * Enum value \"blocked\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_BLOCKED = \"blocked\";\n/**\n  * Enum value \"new\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_NEW = \"new\";\n/**\n  * Enum value \"runnable\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_RUNNABLE = \"runnable\";\n/**\n  * Enum value \"terminated\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_TERMINATED = \"terminated\";\n/**\n  * Enum value \"timed_waiting\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_TIMED_WAITING = \"timed_waiting\";\n/**\n  * Enum value \"waiting\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport var JVM_THREAD_STATE_VALUE_WAITING = \"waiting\";\n/**\n * Local address of the network connection - IP address or Unix domain socket name.\n *\n * @example 10.1.2.80\n * @example /tmp/my.sock\n */\nexport var ATTR_NETWORK_LOCAL_ADDRESS = 'network.local.address';\n/**\n * Local port number of the network connection.\n *\n * @example 65123\n */\nexport var ATTR_NETWORK_LOCAL_PORT = 'network.local.port';\n/**\n * Peer address of the network connection - IP address or Unix domain socket name.\n *\n * @example 10.1.2.80\n * @example /tmp/my.sock\n */\nexport var ATTR_NETWORK_PEER_ADDRESS = 'network.peer.address';\n/**\n * Peer port number of the network connection.\n *\n * @example 65123\n */\nexport var ATTR_NETWORK_PEER_PORT = 'network.peer.port';\n/**\n * [OSI application layer](https://wikipedia.org/wiki/Application_layer) or non-OSI equivalent.\n *\n * @example amqp\n * @example http\n * @example mqtt\n *\n * @note The value **SHOULD** be normalized to lowercase.\n */\nexport var ATTR_NETWORK_PROTOCOL_NAME = 'network.protocol.name';\n/**\n * The actual version of the protocol used for network communication.\n *\n * @example 1.1\n * @example 2\n *\n * @note If protocol version is subject to negotiation (for example using [ALPN](https://www.rfc-editor.org/rfc/rfc7301.html)), this attribute **SHOULD** be set to the negotiated version. If the actual protocol version is not known, this attribute **SHOULD NOT** be set.\n */\nexport var ATTR_NETWORK_PROTOCOL_VERSION = 'network.protocol.version';\n/**\n * [OSI transport layer](https://wikipedia.org/wiki/Transport_layer) or [inter-process communication method](https://wikipedia.org/wiki/Inter-process_communication).\n *\n * @example tcp\n * @example udp\n *\n * @note The value **SHOULD** be normalized to lowercase.\n *\n * Consider always setting the transport when setting a port number, since\n * a port number is ambiguous without knowing the transport. For example\n * different processes could be listening on TCP port 12345 and UDP port 12345.\n */\nexport var ATTR_NETWORK_TRANSPORT = 'network.transport';\n/**\n  * Enum value \"pipe\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_PIPE = \"pipe\";\n/**\n  * Enum value \"quic\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_QUIC = \"quic\";\n/**\n  * Enum value \"tcp\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_TCP = \"tcp\";\n/**\n  * Enum value \"udp\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_UDP = \"udp\";\n/**\n  * Enum value \"unix\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport var NETWORK_TRANSPORT_VALUE_UNIX = \"unix\";\n/**\n * [OSI network layer](https://wikipedia.org/wiki/Network_layer) or non-OSI equivalent.\n *\n * @example ipv4\n * @example ipv6\n *\n * @note The value **SHOULD** be normalized to lowercase.\n */\nexport var ATTR_NETWORK_TYPE = 'network.type';\n/**\n  * Enum value \"ipv4\" for attribute {@link ATTR_NETWORK_TYPE}.\n  */\nexport var NETWORK_TYPE_VALUE_IPV4 = \"ipv4\";\n/**\n  * Enum value \"ipv6\" for attribute {@link ATTR_NETWORK_TYPE}.\n  */\nexport var NETWORK_TYPE_VALUE_IPV6 = \"ipv6\";\n/**\n * The name of the instrumentation scope - (`InstrumentationScope.Name` in OTLP).\n *\n * @example io.opentelemetry.contrib.mongodb\n */\nexport var ATTR_OTEL_SCOPE_NAME = 'otel.scope.name';\n/**\n * The version of the instrumentation scope - (`InstrumentationScope.Version` in OTLP).\n *\n * @example 1.0.0\n */\nexport var ATTR_OTEL_SCOPE_VERSION = 'otel.scope.version';\n/**\n * Name of the code, either \"OK\" or \"ERROR\". **MUST NOT** be set if the status code is UNSET.\n */\nexport var ATTR_OTEL_STATUS_CODE = 'otel.status_code';\n/**\n  * Enum value \"ERROR\" for attribute {@link ATTR_OTEL_STATUS_CODE}.\n  */\nexport var OTEL_STATUS_CODE_VALUE_ERROR = \"ERROR\";\n/**\n  * Enum value \"OK\" for attribute {@link ATTR_OTEL_STATUS_CODE}.\n  */\nexport var OTEL_STATUS_CODE_VALUE_OK = \"OK\";\n/**\n * Description of the Status if it has a value, otherwise not set.\n *\n * @example resource not found\n */\nexport var ATTR_OTEL_STATUS_DESCRIPTION = 'otel.status_description';\n/**\n * Server domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n *\n * @example example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n *\n * @note When observed from the client side, and when communicating through an intermediary, `server.address` **SHOULD** represent the server address behind any intermediaries, for example proxies, if it's available.\n */\nexport var ATTR_SERVER_ADDRESS = 'server.address';\n/**\n * Server port number.\n *\n * @example 80\n * @example 8080\n * @example 443\n *\n * @note When observed from the client side, and when communicating through an intermediary, `server.port` **SHOULD** represent the server port behind any intermediaries, for example proxies, if it's available.\n */\nexport var ATTR_SERVER_PORT = 'server.port';\n/**\n * Logical name of the service.\n *\n * @example shoppingcart\n *\n * @note **MUST** be the same for all instances of horizontally scaled services. If the value was not specified, SDKs **MUST** fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value **MUST** be set to `unknown_service`.\n */\nexport var ATTR_SERVICE_NAME = 'service.name';\n/**\n * The version string of the service API or implementation. The format is not defined by these conventions.\n *\n * @example 2.0.0\n * @example a01dbef8a\n */\nexport var ATTR_SERVICE_VERSION = 'service.version';\n/**\n * SignalR HTTP connection closure status.\n *\n * @example app_shutdown\n * @example timeout\n */\nexport var ATTR_SIGNALR_CONNECTION_STATUS = 'signalr.connection.status';\n/**\n  * Enum value \"app_shutdown\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport var SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = \"app_shutdown\";\n/**\n  * Enum value \"normal_closure\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport var SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = \"normal_closure\";\n/**\n  * Enum value \"timeout\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport var SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = \"timeout\";\n/**\n * [SignalR transport type](https://github.com/dotnet/aspnetcore/blob/main/src/SignalR/docs/specs/TransportProtocols.md)\n *\n * @example web_sockets\n * @example long_polling\n */\nexport var ATTR_SIGNALR_TRANSPORT = 'signalr.transport';\n/**\n  * Enum value \"long_polling\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport var SIGNALR_TRANSPORT_VALUE_LONG_POLLING = \"long_polling\";\n/**\n  * Enum value \"server_sent_events\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport var SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = \"server_sent_events\";\n/**\n  * Enum value \"web_sockets\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport var SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = \"web_sockets\";\n/**\n * The language of the telemetry SDK.\n */\nexport var ATTR_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\n/**\n  * Enum value \"cpp\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_CPP = \"cpp\";\n/**\n  * Enum value \"dotnet\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = \"dotnet\";\n/**\n  * Enum value \"erlang\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = \"erlang\";\n/**\n  * Enum value \"go\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_GO = \"go\";\n/**\n  * Enum value \"java\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = \"java\";\n/**\n  * Enum value \"nodejs\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = \"nodejs\";\n/**\n  * Enum value \"php\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_PHP = \"php\";\n/**\n  * Enum value \"python\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = \"python\";\n/**\n  * Enum value \"ruby\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = \"ruby\";\n/**\n  * Enum value \"rust\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_RUST = \"rust\";\n/**\n  * Enum value \"swift\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = \"swift\";\n/**\n  * Enum value \"webjs\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport var TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = \"webjs\";\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @example opentelemetry\n *\n * @note The OpenTelemetry SDK **MUST** set the `telemetry.sdk.name` attribute to `opentelemetry`.\n * If another SDK, like a fork or a vendor-provided implementation, is used, this SDK **MUST** set the\n * `telemetry.sdk.name` attribute to the fully-qualified class or module name of this SDK's main entry point\n * or another suitable identifier depending on the language.\n * The identifier `opentelemetry` is reserved and **MUST NOT** be used in this case.\n * All custom identifiers **SHOULD** be stable across different versions of an implementation.\n */\nexport var ATTR_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\n/**\n * The version string of the telemetry SDK.\n *\n * @example 1.2.3\n */\nexport var ATTR_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\n/**\n * The [URI fragment](https://www.rfc-editor.org/rfc/rfc3986#section-3.5) component\n *\n * @example SemConv\n */\nexport var ATTR_URL_FRAGMENT = 'url.fragment';\n/**\n * Absolute URL describing a network resource according to [RFC3986](https://www.rfc-editor.org/rfc/rfc3986)\n *\n * @example https://www.foo.bar/search?q=OpenTelemetry#SemConv\n * @example //localhost\n *\n * @note For network calls, URL usually has `scheme://host[:port][path][?query][#fragment]` format, where the fragment\n * is not transmitted over HTTP, but if it is known, it **SHOULD** be included nevertheless.\n *\n * `url.full` **MUST NOT** contain credentials passed via URL in form of `https://username:password@www.example.com/`.\n * In such case username and password **SHOULD** be redacted and attribute's value **SHOULD** be `https://REDACTED:REDACTED@www.example.com/`.\n *\n * `url.full` **SHOULD** capture the absolute URL when it is available (or can be reconstructed).\n *\n * Sensitive content provided in `url.full` **SHOULD** be scrubbed when instrumentations can identify it.\n *\n *\n * Query string values for the following keys **SHOULD** be redacted by default and replaced by the\n * value `REDACTED`:\n *\n *   - [`AWSAccessKeyId`](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)\n *   - [`Signature`](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)\n *   - [`sig`](https://learn.microsoft.com/azure/storage/common/storage-sas-overview#sas-token)\n *   - [`X-Goog-Signature`](https://cloud.google.com/storage/docs/access-control/signed-urls)\n *\n * This list is subject to change over time.\n *\n * When a query string value is redacted, the query string key **SHOULD** still be preserved, e.g.\n * `https://www.example.com/path?color=blue&sig=REDACTED`.\n */\nexport var ATTR_URL_FULL = 'url.full';\n/**\n * The [URI path](https://www.rfc-editor.org/rfc/rfc3986#section-3.3) component\n *\n * @example /search\n *\n * @note Sensitive content provided in `url.path` **SHOULD** be scrubbed when instrumentations can identify it.\n */\nexport var ATTR_URL_PATH = 'url.path';\n/**\n * The [URI query](https://www.rfc-editor.org/rfc/rfc3986#section-3.4) component\n *\n * @example q=OpenTelemetry\n *\n * @note Sensitive content provided in `url.query` **SHOULD** be scrubbed when instrumentations can identify it.\n *\n *\n * Query string values for the following keys **SHOULD** be redacted by default and replaced by the value `REDACTED`:\n *\n *   - [`AWSAccessKeyId`](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)\n *   - [`Signature`](https://docs.aws.amazon.com/AmazonS3/latest/userguide/RESTAuthentication.html#RESTAuthenticationQueryStringAuth)\n *   - [`sig`](https://learn.microsoft.com/azure/storage/common/storage-sas-overview#sas-token)\n *   - [`X-Goog-Signature`](https://cloud.google.com/storage/docs/access-control/signed-urls)\n *\n * This list is subject to change over time.\n *\n * When a query string value is redacted, the query string key **SHOULD** still be preserved, e.g.\n * `q=OpenTelemetry&sig=REDACTED`.\n */\nexport var ATTR_URL_QUERY = 'url.query';\n/**\n * The [URI scheme](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) component identifying the used protocol.\n *\n * @example https\n * @example ftp\n * @example telnet\n */\nexport var ATTR_URL_SCHEME = 'url.scheme';\n/**\n * Value of the [HTTP User-Agent](https://www.rfc-editor.org/rfc/rfc9110.html#field.user-agent) header sent by the client.\n *\n * @example CERN-LineMode/2.15 libwww/2.17b3\n * @example Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1\n * @example YourApp/1.0.0 grpc-java-okhttp/1.27.2\n */\nexport var ATTR_USER_AGENT_ORIGINAL = 'user_agent.original';\n//# sourceMappingURL=stable_attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { VERSION } from '../../version';\nimport { SEMRESATTRS_TELEMETRY_SDK_NAME, SEMRESATTRS_PROCESS_RUNTIME_NAME, SEMRESATTRS_TELEMETRY_SDK_LANGUAGE, TELEMETRYSDKLANGUAGEVALUES_WEBJS, SEMRESATTRS_TELEMETRY_SDK_VERSION, } from '@opentelemetry/semantic-conventions';\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n    [SEMRESATTRS_TELEMETRY_SDK_NAME]: 'opentelemetry',\n    [SEMRESATTRS_PROCESS_RUNTIME_NAME]: 'browser',\n    [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]: TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n    [SEMRESATTRS_TELEMETRY_SDK_VERSION]: VERSION,\n};\n//# sourceMappingURL=sdk-info.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function unrefTimer(_timer) { }\n//# sourceMappingURL=timer-util.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance as performance } from '../platform';\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis) {\n    const epochSeconds = epochMillis / 1000;\n    // Decimals only.\n    const seconds = Math.trunc(epochSeconds);\n    // Round sub-nanosecond accuracy to nanosecond.\n    const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n    return [seconds, nanos];\n}\nexport function getTimeOrigin() {\n    let timeOrigin = performance.timeOrigin;\n    if (typeof timeOrigin !== 'number') {\n        const perf = performance;\n        timeOrigin = perf.timing && perf.timing.fetchStart;\n    }\n    return timeOrigin;\n}\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow) {\n    const timeOrigin = millisToHrTime(getTimeOrigin());\n    const now = millisToHrTime(typeof performanceNow === 'number' ? performanceNow : performance.now());\n    return addHrTimes(timeOrigin, now);\n}\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time) {\n    // process.hrtime\n    if (isTimeInputHrTime(time)) {\n        return time;\n    }\n    else if (typeof time === 'number') {\n        // Must be a performance.now() if it's smaller than process start time.\n        if (time < getTimeOrigin()) {\n            return hrTime(time);\n        }\n        else {\n            // epoch milliseconds or performance.timeOrigin\n            return millisToHrTime(time);\n        }\n    }\n    else if (time instanceof Date) {\n        return millisToHrTime(time.getTime());\n    }\n    else {\n        throw TypeError('Invalid input type');\n    }\n}\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(startTime, endTime) {\n    let seconds = endTime[0] - startTime[0];\n    let nanos = endTime[1] - startTime[1];\n    // overflow\n    if (nanos < 0) {\n        seconds -= 1;\n        // negate\n        nanos += SECOND_TO_NANOSECONDS;\n    }\n    return [seconds, nanos];\n}\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time) {\n    const precision = NANOSECOND_DIGITS;\n    const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n    const nanoString = tmp.substring(tmp.length - precision - 1);\n    const date = new Date(time[0] * 1000).toISOString();\n    return date.replace('000Z', nanoString);\n}\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time) {\n    return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time) {\n    return time[0] * 1e3 + time[1] / 1e6;\n}\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time) {\n    return time[0] * 1e6 + time[1] / 1e3;\n}\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value) {\n    return (Array.isArray(value) &&\n        value.length === 2 &&\n        typeof value[0] === 'number' &&\n        typeof value[1] === 'number');\n}\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value) {\n    return (isTimeInputHrTime(value) ||\n        typeof value === 'number' ||\n        value instanceof Date);\n}\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1, time2) {\n    const out = [time1[0] + time2[0], time1[1] + time2[1]];\n    // Nanoseconds\n    if (out[1] >= SECOND_TO_NANOSECONDS) {\n        out[1] -= SECOND_TO_NANOSECONDS;\n        out[0] += 1;\n    }\n    return out;\n}\n//# sourceMappingURL=time.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ExportResultCode;\n(function (ExportResultCode) {\n    ExportResultCode[ExportResultCode[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExportResultCode[ExportResultCode[\"FAILED\"] = 1] = \"FAILED\";\n})(ExportResultCode || (ExportResultCode = {}));\n//# sourceMappingURL=ExportResult.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag, } from '@opentelemetry/api';\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator {\n    _propagators;\n    _fields;\n    /**\n     * Construct a composite propagator from a list of propagators.\n     *\n     * @param [config] Configuration object for composite propagator\n     */\n    constructor(config = {}) {\n        this._propagators = config.propagators ?? [];\n        this._fields = Array.from(new Set(this._propagators\n            // older propagators may not have fields function, null check to be sure\n            .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n            .reduce((x, y) => x.concat(y), [])));\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same carrier key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to inject\n     * @param carrier Carrier into which context will be injected\n     */\n    inject(context, carrier, setter) {\n        for (const propagator of this._propagators) {\n            try {\n                propagator.inject(context, carrier, setter);\n            }\n            catch (err) {\n                diag.warn(`Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`);\n            }\n        }\n    }\n    /**\n     * Run each of the configured propagators with the given context and carrier.\n     * Propagators are run in the order they are configured, so if multiple\n     * propagators write the same context key, the propagator later in the list\n     * will \"win\".\n     *\n     * @param context Context to add values to\n     * @param carrier Carrier from which to extract context\n     */\n    extract(context, carrier, getter) {\n        return this._propagators.reduce((ctx, propagator) => {\n            try {\n                return propagator.extract(ctx, carrier, getter);\n            }\n            catch (err) {\n                diag.warn(`Failed to extract with ${propagator.constructor.name}. Err: ${err.message}`);\n            }\n            return ctx;\n        }, context);\n    }\n    fields() {\n        // return a new array so our fields cannot be modified\n        return this._fields.slice();\n    }\n}\n//# sourceMappingURL=composite.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key) {\n    return VALID_KEY_REGEX.test(key);\n}\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value) {\n    return (VALID_VALUE_BASE_REGEX.test(value) &&\n        !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value));\n}\n//# sourceMappingURL=validators.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { validateKey, validateValue } from '../internal/validators';\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState {\n    _internalState = new Map();\n    constructor(rawTraceState) {\n        if (rawTraceState)\n            this._parse(rawTraceState);\n    }\n    set(key, value) {\n        // TODO: Benchmark the different approaches(map vs list) and\n        // use the faster one.\n        const traceState = this._clone();\n        if (traceState._internalState.has(key)) {\n            traceState._internalState.delete(key);\n        }\n        traceState._internalState.set(key, value);\n        return traceState;\n    }\n    unset(key) {\n        const traceState = this._clone();\n        traceState._internalState.delete(key);\n        return traceState;\n    }\n    get(key) {\n        return this._internalState.get(key);\n    }\n    serialize() {\n        return this._keys()\n            .reduce((agg, key) => {\n            agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n            return agg;\n        }, [])\n            .join(LIST_MEMBERS_SEPARATOR);\n    }\n    _parse(rawTraceState) {\n        if (rawTraceState.length > MAX_TRACE_STATE_LEN)\n            return;\n        this._internalState = rawTraceState\n            .split(LIST_MEMBERS_SEPARATOR)\n            .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n            .reduce((agg, part) => {\n            const listMember = part.trim(); // Optional Whitespace (OWS) handling\n            const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n            if (i !== -1) {\n                const key = listMember.slice(0, i);\n                const value = listMember.slice(i + 1, part.length);\n                if (validateKey(key) && validateValue(value)) {\n                    agg.set(key, value);\n                }\n                else {\n                    // TODO: Consider to add warning log\n                }\n            }\n            return agg;\n        }, new Map());\n        // Because of the reverse() requirement, trunc must be done after map is created\n        if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n            this._internalState = new Map(Array.from(this._internalState.entries())\n                .reverse() // Use reverse same as original tracestate parse chain\n                .slice(0, MAX_TRACE_STATE_ITEMS));\n        }\n    }\n    _keys() {\n        return Array.from(this._internalState.keys()).reverse();\n    }\n    _clone() {\n        const traceState = new TraceState();\n        traceState._internalState = new Map(this._internalState);\n        return traceState;\n    }\n}\n//# sourceMappingURL=TraceState.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, trace, TraceFlags, } from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(`^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`);\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent) {\n    const match = TRACE_PARENT_REGEX.exec(traceParent);\n    if (!match)\n        return null;\n    // According to the specification the implementation should be compatible\n    // with future versions. If there are more parts, we only reject it if it's using version 00\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n    if (match[1] === '00' && match[5])\n        return null;\n    return {\n        traceId: match[2],\n        spanId: match[3],\n        traceFlags: parseInt(match[4], 16),\n    };\n}\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator {\n    inject(context, carrier, setter) {\n        const spanContext = trace.getSpanContext(context);\n        if (!spanContext ||\n            isTracingSuppressed(context) ||\n            !isSpanContextValid(spanContext))\n            return;\n        const traceParent = `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n        setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n        if (spanContext.traceState) {\n            setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n        }\n    }\n    extract(context, carrier, getter) {\n        const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n        if (!traceParentHeader)\n            return context;\n        const traceParent = Array.isArray(traceParentHeader)\n            ? traceParentHeader[0]\n            : traceParentHeader;\n        if (typeof traceParent !== 'string')\n            return context;\n        const spanContext = parseTraceParent(traceParent);\n        if (!spanContext)\n            return context;\n        spanContext.isRemote = true;\n        const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n        if (traceStateHeader) {\n            // If more than one `tracestate` header is found, we merge them into a\n            // single header.\n            const state = Array.isArray(traceStateHeader)\n                ? traceStateHeader.join(',')\n                : traceStateHeader;\n            spanContext.traceState = new TraceState(typeof state === 'string' ? state : undefined);\n        }\n        return trace.setSpanContext(context, spanContext);\n    }\n    fields() {\n        return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n    }\n}\n//# sourceMappingURL=W3CTraceContextPropagator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototypeOf = Object.getPrototypeOf;\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value) {\n    if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n        return false;\n    }\n    const proto = getPrototypeOf(value);\n    if (proto === null) {\n        return true;\n    }\n    const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n    return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor &&\n        funcToString.call(Ctor) === objectCtorString);\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n    return value != null && typeof value == 'object';\n}\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return symToStringTag && symToStringTag in Object(value)\n        ? getRawTag(value)\n        : objectToString(value);\n}\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n    const isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    let unmasked = false;\n    try {\n        value[symToStringTag] = undefined;\n        unmasked = true;\n    }\n    catch (e) {\n        // silence\n    }\n    const result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        }\n        else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n    return nativeObjectToString.call(value);\n}\n//# sourceMappingURL=lodash.merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isPlainObject } from './lodash.merge';\nconst MAX_LEVEL = 20;\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args) {\n    let result = args.shift();\n    const objects = new WeakMap();\n    while (args.length > 0) {\n        result = mergeTwoObjects(result, args.shift(), 0, objects);\n    }\n    return result;\n}\nfunction takeValue(value) {\n    if (isArray(value)) {\n        return value.slice();\n    }\n    return value;\n}\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(one, two, level = 0, objects) {\n    let result;\n    if (level > MAX_LEVEL) {\n        return undefined;\n    }\n    level++;\n    if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n        result = takeValue(two);\n    }\n    else if (isArray(one)) {\n        result = one.slice();\n        if (isArray(two)) {\n            for (let i = 0, j = two.length; i < j; i++) {\n                result.push(takeValue(two[i]));\n            }\n        }\n        else if (isObject(two)) {\n            const keys = Object.keys(two);\n            for (let i = 0, j = keys.length; i < j; i++) {\n                const key = keys[i];\n                result[key] = takeValue(two[key]);\n            }\n        }\n    }\n    else if (isObject(one)) {\n        if (isObject(two)) {\n            if (!shouldMerge(one, two)) {\n                return two;\n            }\n            result = Object.assign({}, one);\n            const keys = Object.keys(two);\n            for (let i = 0, j = keys.length; i < j; i++) {\n                const key = keys[i];\n                const twoValue = two[key];\n                if (isPrimitive(twoValue)) {\n                    if (typeof twoValue === 'undefined') {\n                        delete result[key];\n                    }\n                    else {\n                        // result[key] = takeValue(twoValue);\n                        result[key] = twoValue;\n                    }\n                }\n                else {\n                    const obj1 = result[key];\n                    const obj2 = twoValue;\n                    if (wasObjectReferenced(one, key, objects) ||\n                        wasObjectReferenced(two, key, objects)) {\n                        delete result[key];\n                    }\n                    else {\n                        if (isObject(obj1) && isObject(obj2)) {\n                            const arr1 = objects.get(obj1) || [];\n                            const arr2 = objects.get(obj2) || [];\n                            arr1.push({ obj: one, key });\n                            arr2.push({ obj: two, key });\n                            objects.set(obj1, arr1);\n                            objects.set(obj2, arr2);\n                        }\n                        result[key] = mergeTwoObjects(result[key], twoValue, level, objects);\n                    }\n                }\n            }\n        }\n        else {\n            result = two;\n        }\n    }\n    return result;\n}\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(obj, key, objects) {\n    const arr = objects.get(obj[key]) || [];\n    for (let i = 0, j = arr.length; i < j; i++) {\n        const info = arr[i];\n        if (info.key === key && info.obj === obj) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isArray(value) {\n    return Array.isArray(value);\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isObject(value) {\n    return (!isPrimitive(value) &&\n        !isArray(value) &&\n        !isFunction(value) &&\n        typeof value === 'object');\n}\nfunction isPrimitive(value) {\n    return (typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean' ||\n        typeof value === 'undefined' ||\n        value instanceof Date ||\n        value instanceof RegExp ||\n        value === null);\n}\nfunction shouldMerge(one, two) {\n    if (!isPlainObject(one) || !isPlainObject(two)) {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=merge.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url, urlToMatch) {\n    if (typeof urlToMatch === 'string') {\n        return url === urlToMatch;\n    }\n    else {\n        return !!url.match(urlToMatch);\n    }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(url, ignoredUrls) {\n    if (!ignoredUrls) {\n        return false;\n    }\n    for (const ignoreUrl of ignoredUrls) {\n        if (urlMatches(url, ignoreUrl)) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=url.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class Deferred {\n    _promise;\n    _resolve;\n    _reject;\n    constructor() {\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n    get promise() {\n        return this._promise;\n    }\n    resolve(val) {\n        this._resolve(val);\n    }\n    reject(err) {\n        this._reject(err);\n    }\n}\n//# sourceMappingURL=promise.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Deferred } from './promise';\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture {\n    _callback;\n    _that;\n    _isCalled = false;\n    _deferred = new Deferred();\n    constructor(_callback, _that) {\n        this._callback = _callback;\n        this._that = _that;\n    }\n    get isCalled() {\n        return this._isCalled;\n    }\n    get promise() {\n        return this._deferred.promise;\n    }\n    call(...args) {\n        if (!this._isCalled) {\n            this._isCalled = true;\n            try {\n                Promise.resolve(this._callback.call(this._that, ...args)).then(val => this._deferred.resolve(val), err => this._deferred.reject(err));\n            }\n            catch (err) {\n                this._deferred.reject(err);\n            }\n        }\n        return this._deferred.promise;\n    }\n}\n//# sourceMappingURL=callback.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function defaultServiceName() {\n    return 'unknown_service';\n}\n//# sourceMappingURL=default-service-name.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const isPromiseLike = (val) => {\n    return (val !== null &&\n        typeof val === 'object' &&\n        typeof val.then === 'function');\n};\nexport function identity(_) {\n    return _;\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ATTR_SERVICE_NAME, ATTR_TELEMETRY_SDK_LANGUAGE, ATTR_TELEMETRY_SDK_NAME, ATTR_TELEMETRY_SDK_VERSION, } from '@opentelemetry/semantic-conventions';\nimport { defaultServiceName } from './platform';\nimport { isPromiseLike } from './utils';\nclass ResourceImpl {\n    _rawAttributes;\n    _asyncAttributesPending = false;\n    _memoizedAttributes;\n    static FromAttributeList(attributes) {\n        const res = new ResourceImpl({});\n        res._rawAttributes = attributes;\n        res._asyncAttributesPending =\n            attributes.filter(([_, val]) => isPromiseLike(val)).length > 0;\n        return res;\n    }\n    constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    resource) {\n        const attributes = resource.attributes ?? {};\n        this._rawAttributes = Object.entries(attributes).map(([k, v]) => {\n            if (isPromiseLike(v)) {\n                // side-effect\n                this._asyncAttributesPending = true;\n            }\n            return [k, v];\n        });\n    }\n    get asyncAttributesPending() {\n        return this._asyncAttributesPending;\n    }\n    async waitForAsyncAttributes() {\n        if (!this.asyncAttributesPending) {\n            return;\n        }\n        for (let i = 0; i < this._rawAttributes.length; i++) {\n            const [k, v] = this._rawAttributes[i];\n            try {\n                this._rawAttributes[i] = [k, isPromiseLike(v) ? await v : v];\n            }\n            catch (err) {\n                diag.debug(\"a resource's async attributes promise rejected: %s\", err);\n                this._rawAttributes[i] = [k, undefined];\n            }\n        }\n        this._asyncAttributesPending = false;\n    }\n    get attributes() {\n        if (this.asyncAttributesPending) {\n            diag.error('Accessing resource attributes before async attributes settled');\n        }\n        if (this._memoizedAttributes) {\n            return this._memoizedAttributes;\n        }\n        const attrs = {};\n        for (const [k, v] of this._rawAttributes) {\n            if (isPromiseLike(v)) {\n                diag.debug(`Unsettled resource attribute ${k} skipped`);\n                continue;\n            }\n            if (v != null) {\n                attrs[k] ??= v;\n            }\n        }\n        // only memoize output if all attributes are settled\n        if (!this._asyncAttributesPending) {\n            this._memoizedAttributes = attrs;\n        }\n        return attrs;\n    }\n    getRawAttributes() {\n        return this._rawAttributes;\n    }\n    merge(resource) {\n        if (resource == null)\n            return this;\n        // Order is important\n        // Spec states incoming attributes override existing attributes\n        return ResourceImpl.FromAttributeList([\n            ...resource.getRawAttributes(),\n            ...this.getRawAttributes(),\n        ]);\n    }\n}\nexport function resourceFromAttributes(attributes) {\n    return ResourceImpl.FromAttributeList(Object.entries(attributes));\n}\nexport function resourceFromDetectedResource(detectedResource) {\n    return new ResourceImpl(detectedResource);\n}\nexport function emptyResource() {\n    return resourceFromAttributes({});\n}\nexport function defaultResource() {\n    return resourceFromAttributes({\n        [ATTR_SERVICE_NAME]: defaultServiceName(),\n        [ATTR_TELEMETRY_SDK_LANGUAGE]: SDK_INFO[ATTR_TELEMETRY_SDK_LANGUAGE],\n        [ATTR_TELEMETRY_SDK_NAME]: SDK_INFO[ATTR_TELEMETRY_SDK_NAME],\n        [ATTR_TELEMETRY_SDK_VERSION]: SDK_INFO[ATTR_TELEMETRY_SDK_VERSION],\n    });\n}\n//# sourceMappingURL=ResourceImpl.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n//# sourceMappingURL=enums.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag, SpanStatusCode, } from '@opentelemetry/api';\nimport { addHrTimes, millisToHrTime, getTimeOrigin, hrTime, hrTimeDuration, isAttributeValue, isTimeInput, isTimeInputHrTime, otperformance, sanitizeAttributes, } from '@opentelemetry/core';\nimport { SEMATTRS_EXCEPTION_MESSAGE, SEMATTRS_EXCEPTION_STACKTRACE, SEMATTRS_EXCEPTION_TYPE, } from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\n/**\n * This class represents a span.\n */\nexport class SpanImpl {\n    // Below properties are included to implement ReadableSpan for export\n    // purposes but are not intended to be written-to directly.\n    _spanContext;\n    kind;\n    parentSpanContext;\n    attributes = {};\n    links = [];\n    events = [];\n    startTime;\n    resource;\n    instrumentationScope;\n    _droppedAttributesCount = 0;\n    _droppedEventsCount = 0;\n    _droppedLinksCount = 0;\n    name;\n    status = {\n        code: SpanStatusCode.UNSET,\n    };\n    endTime = [0, 0];\n    _ended = false;\n    _duration = [-1, -1];\n    _spanProcessor;\n    _spanLimits;\n    _attributeValueLengthLimit;\n    _performanceStartTime;\n    _performanceOffset;\n    _startTimeProvided;\n    /**\n     * Constructs a new SpanImpl instance.\n     */\n    constructor(opts) {\n        const now = Date.now();\n        this._spanContext = opts.spanContext;\n        this._performanceStartTime = otperformance.now();\n        this._performanceOffset =\n            now - (this._performanceStartTime + getTimeOrigin());\n        this._startTimeProvided = opts.startTime != null;\n        this._spanLimits = opts.spanLimits;\n        this._attributeValueLengthLimit =\n            this._spanLimits.attributeValueLengthLimit || 0;\n        this._spanProcessor = opts.spanProcessor;\n        this.name = opts.name;\n        this.parentSpanContext = opts.parentSpanContext;\n        this.kind = opts.kind;\n        this.links = opts.links || [];\n        this.startTime = this._getTime(opts.startTime ?? now);\n        this.resource = opts.resource;\n        this.instrumentationScope = opts.scope;\n        if (opts.attributes != null) {\n            this.setAttributes(opts.attributes);\n        }\n        this._spanProcessor.onStart(this, opts.context);\n    }\n    spanContext() {\n        return this._spanContext;\n    }\n    setAttribute(key, value) {\n        if (value == null || this._isSpanEnded())\n            return this;\n        if (key.length === 0) {\n            diag.warn(`Invalid attribute key: ${key}`);\n            return this;\n        }\n        if (!isAttributeValue(value)) {\n            diag.warn(`Invalid attribute value set for key: ${key}`);\n            return this;\n        }\n        const { attributeCountLimit } = this._spanLimits;\n        if (attributeCountLimit !== undefined &&\n            Object.keys(this.attributes).length >= attributeCountLimit &&\n            !Object.prototype.hasOwnProperty.call(this.attributes, key)) {\n            this._droppedAttributesCount++;\n            return this;\n        }\n        this.attributes[key] = this._truncateToSize(value);\n        return this;\n    }\n    setAttributes(attributes) {\n        for (const [k, v] of Object.entries(attributes)) {\n            this.setAttribute(k, v);\n        }\n        return this;\n    }\n    /**\n     *\n     * @param name Span Name\n     * @param [attributesOrStartTime] Span attributes or start time\n     *     if type is {@type TimeInput} and 3rd param is undefined\n     * @param [timeStamp] Specified time stamp for the event\n     */\n    addEvent(name, attributesOrStartTime, timeStamp) {\n        if (this._isSpanEnded())\n            return this;\n        const { eventCountLimit } = this._spanLimits;\n        if (eventCountLimit === 0) {\n            diag.warn('No events allowed.');\n            this._droppedEventsCount++;\n            return this;\n        }\n        if (eventCountLimit !== undefined &&\n            this.events.length >= eventCountLimit) {\n            if (this._droppedEventsCount === 0) {\n                diag.debug('Dropping extra events.');\n            }\n            this.events.shift();\n            this._droppedEventsCount++;\n        }\n        if (isTimeInput(attributesOrStartTime)) {\n            if (!isTimeInput(timeStamp)) {\n                timeStamp = attributesOrStartTime;\n            }\n            attributesOrStartTime = undefined;\n        }\n        const attributes = sanitizeAttributes(attributesOrStartTime);\n        this.events.push({\n            name,\n            attributes,\n            time: this._getTime(timeStamp),\n            droppedAttributesCount: 0,\n        });\n        return this;\n    }\n    addLink(link) {\n        this.links.push(link);\n        return this;\n    }\n    addLinks(links) {\n        this.links.push(...links);\n        return this;\n    }\n    setStatus(status) {\n        if (this._isSpanEnded())\n            return this;\n        this.status = { ...status };\n        // When using try-catch, the caught \"error\" is of type `any`. When then assigning `any` to `status.message`,\n        // TypeScript will not error. While this can happen during use of any API, it is more common on Span#setStatus()\n        // as it's likely used in a catch-block. Therefore, we validate if `status.message` is actually a string, null, or\n        // undefined to avoid an incorrect type causing issues downstream.\n        if (this.status.message != null && typeof status.message !== 'string') {\n            diag.warn(`Dropping invalid status.message of type '${typeof status.message}', expected 'string'`);\n            delete this.status.message;\n        }\n        return this;\n    }\n    updateName(name) {\n        if (this._isSpanEnded())\n            return this;\n        this.name = name;\n        return this;\n    }\n    end(endTime) {\n        if (this._isSpanEnded()) {\n            diag.error(`${this.name} ${this._spanContext.traceId}-${this._spanContext.spanId} - You can only call end() on a span once.`);\n            return;\n        }\n        this._ended = true;\n        this.endTime = this._getTime(endTime);\n        this._duration = hrTimeDuration(this.startTime, this.endTime);\n        if (this._duration[0] < 0) {\n            diag.warn('Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.', this.startTime, this.endTime);\n            this.endTime = this.startTime.slice();\n            this._duration = [0, 0];\n        }\n        if (this._droppedEventsCount > 0) {\n            diag.warn(`Dropped ${this._droppedEventsCount} events because eventCountLimit reached`);\n        }\n        this._spanProcessor.onEnd(this);\n    }\n    _getTime(inp) {\n        if (typeof inp === 'number' && inp <= otperformance.now()) {\n            // must be a performance timestamp\n            // apply correction and convert to hrtime\n            return hrTime(inp + this._performanceOffset);\n        }\n        if (typeof inp === 'number') {\n            return millisToHrTime(inp);\n        }\n        if (inp instanceof Date) {\n            return millisToHrTime(inp.getTime());\n        }\n        if (isTimeInputHrTime(inp)) {\n            return inp;\n        }\n        if (this._startTimeProvided) {\n            // if user provided a time for the start manually\n            // we can't use duration to calculate event/end times\n            return millisToHrTime(Date.now());\n        }\n        const msDuration = otperformance.now() - this._performanceStartTime;\n        return addHrTimes(this.startTime, millisToHrTime(msDuration));\n    }\n    isRecording() {\n        return this._ended === false;\n    }\n    recordException(exception, time) {\n        const attributes = {};\n        if (typeof exception === 'string') {\n            attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception;\n        }\n        else if (exception) {\n            if (exception.code) {\n                attributes[SEMATTRS_EXCEPTION_TYPE] = exception.code.toString();\n            }\n            else if (exception.name) {\n                attributes[SEMATTRS_EXCEPTION_TYPE] = exception.name;\n            }\n            if (exception.message) {\n                attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception.message;\n            }\n            if (exception.stack) {\n                attributes[SEMATTRS_EXCEPTION_STACKTRACE] = exception.stack;\n            }\n        }\n        // these are minimum requirements from spec\n        if (attributes[SEMATTRS_EXCEPTION_TYPE] ||\n            attributes[SEMATTRS_EXCEPTION_MESSAGE]) {\n            this.addEvent(ExceptionEventName, attributes, time);\n        }\n        else {\n            diag.warn(`Failed to record an exception ${exception}`);\n        }\n    }\n    get duration() {\n        return this._duration;\n    }\n    get ended() {\n        return this._ended;\n    }\n    get droppedAttributesCount() {\n        return this._droppedAttributesCount;\n    }\n    get droppedEventsCount() {\n        return this._droppedEventsCount;\n    }\n    get droppedLinksCount() {\n        return this._droppedLinksCount;\n    }\n    _isSpanEnded() {\n        if (this._ended) {\n            const error = new Error(`Operation attempted on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`);\n            diag.warn(`Cannot execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`, error);\n        }\n        return this._ended;\n    }\n    // Utility function to truncate given value within size\n    // for value type of string, will truncate to given limit\n    // for type of non-string, will return same value\n    _truncateToLimitUtil(value, limit) {\n        if (value.length <= limit) {\n            return value;\n        }\n        return value.substring(0, limit);\n    }\n    /**\n     * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n     * return string with truncated to {@code attributeValueLengthLimit} characters\n     *\n     * If the given attribute value is array of strings then\n     * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n     *\n     * Otherwise return same Attribute {@code value}\n     *\n     * @param value Attribute value\n     * @returns truncated attribute value if required, otherwise same value\n     */\n    _truncateToSize(value) {\n        const limit = this._attributeValueLengthLimit;\n        // Check limit\n        if (limit <= 0) {\n            // Negative values are invalid, so do not truncate\n            diag.warn(`Attribute value limit must be positive, got ${limit}`);\n            return value;\n        }\n        // String\n        if (typeof value === 'string') {\n            return this._truncateToLimitUtil(value, limit);\n        }\n        // Array of strings\n        if (Array.isArray(value)) {\n            return value.map(val => typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val);\n        }\n        // Other types, no need to apply value length limit\n        return value;\n    }\n}\n//# sourceMappingURL=Span.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport var SamplingDecision;\n(function (SamplingDecision) {\n    /**\n     * `Span.isRecording() === false`, span will not be recorded and all events\n     * and attributes will be dropped.\n     */\n    SamplingDecision[SamplingDecision[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n    /**\n     * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n     * MUST NOT be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD\"] = 1] = \"RECORD\";\n    /**\n     * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n     * MUST be set.\n     */\n    SamplingDecision[SamplingDecision[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n})(SamplingDecision || (SamplingDecision = {}));\n//# sourceMappingURL=Sampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples no traces. */\nexport class AlwaysOffSampler {\n    shouldSample() {\n        return {\n            decision: SamplingDecision.NOT_RECORD,\n        };\n    }\n    toString() {\n        return 'AlwaysOffSampler';\n    }\n}\n//# sourceMappingURL=AlwaysOffSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples all traces. */\nexport class AlwaysOnSampler {\n    shouldSample() {\n        return {\n            decision: SamplingDecision.RECORD_AND_SAMPLED,\n        };\n    }\n    toString() {\n        return 'AlwaysOnSampler';\n    }\n}\n//# sourceMappingURL=AlwaysOnSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isSpanContextValid, TraceFlags, trace, } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler {\n    _root;\n    _remoteParentSampled;\n    _remoteParentNotSampled;\n    _localParentSampled;\n    _localParentNotSampled;\n    constructor(config) {\n        this._root = config.root;\n        if (!this._root) {\n            globalErrorHandler(new Error('ParentBasedSampler must have a root sampler configured'));\n            this._root = new AlwaysOnSampler();\n        }\n        this._remoteParentSampled =\n            config.remoteParentSampled ?? new AlwaysOnSampler();\n        this._remoteParentNotSampled =\n            config.remoteParentNotSampled ?? new AlwaysOffSampler();\n        this._localParentSampled =\n            config.localParentSampled ?? new AlwaysOnSampler();\n        this._localParentNotSampled =\n            config.localParentNotSampled ?? new AlwaysOffSampler();\n    }\n    shouldSample(context, traceId, spanName, spanKind, attributes, links) {\n        const parentContext = trace.getSpanContext(context);\n        if (!parentContext || !isSpanContextValid(parentContext)) {\n            return this._root.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.isRemote) {\n            if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n                return this._remoteParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n            }\n            return this._remoteParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n            return this._localParentSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n        }\n        return this._localParentNotSampled.shouldSample(context, traceId, spanName, spanKind, attributes, links);\n    }\n    toString() {\n        return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n    }\n}\n//# sourceMappingURL=ParentBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { SamplingDecision } from '../Sampler';\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nexport class TraceIdRatioBasedSampler {\n    _ratio;\n    _upperBound;\n    constructor(_ratio = 0) {\n        this._ratio = _ratio;\n        this._ratio = this._normalize(_ratio);\n        this._upperBound = Math.floor(this._ratio * 0xffffffff);\n    }\n    shouldSample(context, traceId) {\n        return {\n            decision: isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n                ? SamplingDecision.RECORD_AND_SAMPLED\n                : SamplingDecision.NOT_RECORD,\n        };\n    }\n    toString() {\n        return `TraceIdRatioBased{${this._ratio}}`;\n    }\n    _normalize(ratio) {\n        if (typeof ratio !== 'number' || isNaN(ratio))\n            return 0;\n        return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n    }\n    _accumulate(traceId) {\n        let accumulation = 0;\n        for (let i = 0; i < traceId.length / 8; i++) {\n            const pos = i * 8;\n            const part = parseInt(traceId.slice(pos, pos + 8), 16);\n            accumulation = (accumulation ^ part) >>> 0;\n        }\n        return accumulation;\n    }\n}\n//# sourceMappingURL=TraceIdRatioBasedSampler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { getNumberFromEnv, getStringFromEnv } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\nconst DEFAULT_RATIO = 1;\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n    return {\n        sampler: buildSamplerFromEnv(),\n        forceFlushTimeoutMillis: 30000,\n        generalLimits: {\n            attributeValueLengthLimit: getNumberFromEnv('OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT') ?? Infinity,\n            attributeCountLimit: getNumberFromEnv('OTEL_ATTRIBUTE_COUNT_LIMIT') ?? 128,\n        },\n        spanLimits: {\n            attributeValueLengthLimit: getNumberFromEnv('OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT') ?? Infinity,\n            attributeCountLimit: getNumberFromEnv('OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT') ?? 128,\n            linkCountLimit: getNumberFromEnv('OTEL_SPAN_LINK_COUNT_LIMIT') ?? 128,\n            eventCountLimit: getNumberFromEnv('OTEL_SPAN_EVENT_COUNT_LIMIT') ?? 128,\n            attributePerEventCountLimit: getNumberFromEnv('OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT') ?? 128,\n            attributePerLinkCountLimit: getNumberFromEnv('OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT') ?? 128,\n        },\n    };\n}\n/**\n * Based on environment, builds a sampler, complies with specification.\n */\nexport function buildSamplerFromEnv() {\n    const sampler = getStringFromEnv('OTEL_TRACES_SAMPLER') ??\n        \"parentbased_always_on\" /* TracesSamplerValues.ParentBasedAlwaysOn */;\n    switch (sampler) {\n        case \"always_on\" /* TracesSamplerValues.AlwaysOn */:\n            return new AlwaysOnSampler();\n        case \"always_off\" /* TracesSamplerValues.AlwaysOff */:\n            return new AlwaysOffSampler();\n        case \"parentbased_always_on\" /* TracesSamplerValues.ParentBasedAlwaysOn */:\n            return new ParentBasedSampler({\n                root: new AlwaysOnSampler(),\n            });\n        case \"parentbased_always_off\" /* TracesSamplerValues.ParentBasedAlwaysOff */:\n            return new ParentBasedSampler({\n                root: new AlwaysOffSampler(),\n            });\n        case \"traceidratio\" /* TracesSamplerValues.TraceIdRatio */:\n            return new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv());\n        case \"parentbased_traceidratio\" /* TracesSamplerValues.ParentBasedTraceIdRatio */:\n            return new ParentBasedSampler({\n                root: new TraceIdRatioBasedSampler(getSamplerProbabilityFromEnv()),\n            });\n        default:\n            diag.error(`OTEL_TRACES_SAMPLER value \"${sampler}\" invalid, defaulting to \"${\"parentbased_always_on\" /* TracesSamplerValues.ParentBasedAlwaysOn */}\".`);\n            return new ParentBasedSampler({\n                root: new AlwaysOnSampler(),\n            });\n    }\n}\nfunction getSamplerProbabilityFromEnv() {\n    const probability = getNumberFromEnv('OTEL_TRACES_SAMPLER_ARG');\n    if (probability == null) {\n        diag.error(`OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`);\n        return DEFAULT_RATIO;\n    }\n    if (probability < 0 || probability > 1) {\n        diag.error(`OTEL_TRACES_SAMPLER_ARG=${probability} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`);\n        return DEFAULT_RATIO;\n    }\n    return probability;\n}\n//# sourceMappingURL=config.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { getNumberFromEnv } from '@opentelemetry/core';\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig) {\n    const perInstanceDefaults = {\n        sampler: buildSamplerFromEnv(),\n    };\n    const DEFAULT_CONFIG = loadDefaultConfig();\n    const target = Object.assign({}, DEFAULT_CONFIG, perInstanceDefaults, userConfig);\n    target.generalLimits = Object.assign({}, DEFAULT_CONFIG.generalLimits, userConfig.generalLimits || {});\n    target.spanLimits = Object.assign({}, DEFAULT_CONFIG.spanLimits, userConfig.spanLimits || {});\n    return target;\n}\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig) {\n    const spanLimits = Object.assign({}, userConfig.spanLimits);\n    /**\n     * Reassign span attribute count limit to use first non null value defined by user or use default value\n     */\n    spanLimits.attributeCountLimit =\n        userConfig.spanLimits?.attributeCountLimit ??\n            userConfig.generalLimits?.attributeCountLimit ??\n            getNumberFromEnv('OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT') ??\n            getNumberFromEnv('OTEL_ATTRIBUTE_COUNT_LIMIT') ??\n            DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n    /**\n     * Reassign span attribute value length limit to use first non null value defined by user or use default value\n     */\n    spanLimits.attributeValueLengthLimit =\n        userConfig.spanLimits?.attributeValueLengthLimit ??\n            userConfig.generalLimits?.attributeValueLengthLimit ??\n            getNumberFromEnv('OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT') ??\n            getNumberFromEnv('OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT') ??\n            DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n    return Object.assign({}, userConfig, { spanLimits });\n}\n//# sourceMappingURL=utility.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, diag, TraceFlags } from '@opentelemetry/api';\nimport { BindOnceFuture, ExportResultCode, getNumberFromEnv, globalErrorHandler, suppressTracing, unrefTimer, } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nexport class BatchSpanProcessorBase {\n    _exporter;\n    _maxExportBatchSize;\n    _maxQueueSize;\n    _scheduledDelayMillis;\n    _exportTimeoutMillis;\n    _isExporting = false;\n    _finishedSpans = [];\n    _timer;\n    _shutdownOnce;\n    _droppedSpansCount = 0;\n    constructor(_exporter, config) {\n        this._exporter = _exporter;\n        this._maxExportBatchSize =\n            typeof config?.maxExportBatchSize === 'number'\n                ? config.maxExportBatchSize\n                : (getNumberFromEnv('OTEL_BSP_MAX_EXPORT_BATCH_SIZE') ?? 512);\n        this._maxQueueSize =\n            typeof config?.maxQueueSize === 'number'\n                ? config.maxQueueSize\n                : (getNumberFromEnv('OTEL_BSP_MAX_QUEUE_SIZE') ?? 2048);\n        this._scheduledDelayMillis =\n            typeof config?.scheduledDelayMillis === 'number'\n                ? config.scheduledDelayMillis\n                : (getNumberFromEnv('OTEL_BSP_SCHEDULE_DELAY') ?? 5000);\n        this._exportTimeoutMillis =\n            typeof config?.exportTimeoutMillis === 'number'\n                ? config.exportTimeoutMillis\n                : (getNumberFromEnv('OTEL_BSP_EXPORT_TIMEOUT') ?? 30000);\n        this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n        if (this._maxExportBatchSize > this._maxQueueSize) {\n            diag.warn('BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize');\n            this._maxExportBatchSize = this._maxQueueSize;\n        }\n    }\n    forceFlush() {\n        if (this._shutdownOnce.isCalled) {\n            return this._shutdownOnce.promise;\n        }\n        return this._flushAll();\n    }\n    // does nothing.\n    onStart(_span, _parentContext) { }\n    onEnd(span) {\n        if (this._shutdownOnce.isCalled) {\n            return;\n        }\n        if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n            return;\n        }\n        this._addToBuffer(span);\n    }\n    shutdown() {\n        return this._shutdownOnce.call();\n    }\n    _shutdown() {\n        return Promise.resolve()\n            .then(() => {\n            return this.onShutdown();\n        })\n            .then(() => {\n            return this._flushAll();\n        })\n            .then(() => {\n            return this._exporter.shutdown();\n        });\n    }\n    /** Add a span in the buffer. */\n    _addToBuffer(span) {\n        if (this._finishedSpans.length >= this._maxQueueSize) {\n            // limit reached, drop span\n            if (this._droppedSpansCount === 0) {\n                diag.debug('maxQueueSize reached, dropping spans');\n            }\n            this._droppedSpansCount++;\n            return;\n        }\n        if (this._droppedSpansCount > 0) {\n            // some spans were dropped, log once with count of spans dropped\n            diag.warn(`Dropped ${this._droppedSpansCount} spans because maxQueueSize reached`);\n            this._droppedSpansCount = 0;\n        }\n        this._finishedSpans.push(span);\n        this._maybeStartTimer();\n    }\n    /**\n     * Send all spans to the exporter respecting the batch size limit\n     * This function is used only on forceFlush or shutdown,\n     * for all other cases _flush should be used\n     * */\n    _flushAll() {\n        return new Promise((resolve, reject) => {\n            const promises = [];\n            // calculate number of batches\n            const count = Math.ceil(this._finishedSpans.length / this._maxExportBatchSize);\n            for (let i = 0, j = count; i < j; i++) {\n                promises.push(this._flushOneBatch());\n            }\n            Promise.all(promises)\n                .then(() => {\n                resolve();\n            })\n                .catch(reject);\n        });\n    }\n    _flushOneBatch() {\n        this._clearTimer();\n        if (this._finishedSpans.length === 0) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            const timer = setTimeout(() => {\n                // don't wait anymore for export, this way the next batch can start\n                reject(new Error('Timeout'));\n            }, this._exportTimeoutMillis);\n            // prevent downstream exporter calls from generating spans\n            context.with(suppressTracing(context.active()), () => {\n                // Reset the finished spans buffer here because the next invocations of the _flush method\n                // could pass the same finished spans to the exporter if the buffer is cleared\n                // outside the execution of this callback.\n                let spans;\n                if (this._finishedSpans.length <= this._maxExportBatchSize) {\n                    spans = this._finishedSpans;\n                    this._finishedSpans = [];\n                }\n                else {\n                    spans = this._finishedSpans.splice(0, this._maxExportBatchSize);\n                }\n                const doExport = () => this._exporter.export(spans, result => {\n                    clearTimeout(timer);\n                    if (result.code === ExportResultCode.SUCCESS) {\n                        resolve();\n                    }\n                    else {\n                        reject(result.error ??\n                            new Error('BatchSpanProcessor: span export failed'));\n                    }\n                });\n                let pendingResources = null;\n                for (let i = 0, len = spans.length; i < len; i++) {\n                    const span = spans[i];\n                    if (span.resource.asyncAttributesPending &&\n                        span.resource.waitForAsyncAttributes) {\n                        pendingResources ??= [];\n                        pendingResources.push(span.resource.waitForAsyncAttributes());\n                    }\n                }\n                // Avoid scheduling a promise to make the behavior more predictable and easier to test\n                if (pendingResources === null) {\n                    doExport();\n                }\n                else {\n                    Promise.all(pendingResources).then(doExport, err => {\n                        globalErrorHandler(err);\n                        reject(err);\n                    });\n                }\n            });\n        });\n    }\n    _maybeStartTimer() {\n        if (this._isExporting)\n            return;\n        const flush = () => {\n            this._isExporting = true;\n            this._flushOneBatch()\n                .finally(() => {\n                this._isExporting = false;\n                if (this._finishedSpans.length > 0) {\n                    this._clearTimer();\n                    this._maybeStartTimer();\n                }\n            })\n                .catch(e => {\n                this._isExporting = false;\n                globalErrorHandler(e);\n            });\n        };\n        // we only wait if the queue doesn't have enough elements yet\n        if (this._finishedSpans.length >= this._maxExportBatchSize) {\n            return flush();\n        }\n        if (this._timer !== undefined)\n            return;\n        this._timer = setTimeout(() => flush(), this._scheduledDelayMillis);\n        unrefTimer(this._timer);\n    }\n    _clearTimer() {\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n    }\n}\n//# sourceMappingURL=BatchSpanProcessorBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { globalErrorHandler } from '@opentelemetry/core';\nexport class BatchSpanProcessor extends BatchSpanProcessorBase {\n    _visibilityChangeListener;\n    _pageHideListener;\n    constructor(_exporter, config) {\n        super(_exporter, config);\n        this.onInit(config);\n    }\n    onInit(config) {\n        if (config?.disableAutoFlushOnDocumentHide !== true &&\n            typeof document !== 'undefined') {\n            this._visibilityChangeListener = () => {\n                if (document.visibilityState === 'hidden') {\n                    this.forceFlush().catch(error => {\n                        globalErrorHandler(error);\n                    });\n                }\n            };\n            this._pageHideListener = () => {\n                this.forceFlush().catch(error => {\n                    globalErrorHandler(error);\n                });\n            };\n            document.addEventListener('visibilitychange', this._visibilityChangeListener);\n            // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n            document.addEventListener('pagehide', this._pageHideListener);\n        }\n    }\n    onShutdown() {\n        if (typeof document !== 'undefined') {\n            if (this._visibilityChangeListener) {\n                document.removeEventListener('visibilitychange', this._visibilityChangeListener);\n            }\n            if (this._pageHideListener) {\n                document.removeEventListener('pagehide', this._pageHideListener);\n            }\n        }\n    }\n}\n//# sourceMappingURL=BatchSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\nexport class RandomIdGenerator {\n    /**\n     * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n     * characters corresponding to 128 bits.\n     */\n    generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n    /**\n     * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n     * characters corresponding to 64 bits.\n     */\n    generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes) {\n    return function generateId() {\n        for (let i = 0; i < bytes * 2; i++) {\n            SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n            // valid hex characters in the range 48-57 and 97-102\n            if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n                SHARED_CHAR_CODES_ARRAY[i] += 39;\n            }\n        }\n        return String.fromCharCode.apply(null, SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2));\n    };\n}\n//# sourceMappingURL=RandomIdGenerator.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { sanitizeAttributes, isTracingSuppressed, } from '@opentelemetry/core';\nimport { SpanImpl } from './Span';\nimport { mergeConfig } from './utility';\nimport { RandomIdGenerator } from './platform';\n/**\n * This class represents a basic tracer.\n */\nexport class Tracer {\n    _sampler;\n    _generalLimits;\n    _spanLimits;\n    _idGenerator;\n    instrumentationScope;\n    _resource;\n    _spanProcessor;\n    /**\n     * Constructs a new Tracer instance.\n     */\n    constructor(instrumentationScope, config, resource, spanProcessor) {\n        const localConfig = mergeConfig(config);\n        this._sampler = localConfig.sampler;\n        this._generalLimits = localConfig.generalLimits;\n        this._spanLimits = localConfig.spanLimits;\n        this._idGenerator = config.idGenerator || new RandomIdGenerator();\n        this._resource = resource;\n        this._spanProcessor = spanProcessor;\n        this.instrumentationScope = instrumentationScope;\n    }\n    /**\n     * Starts a new Span or returns the default NoopSpan based on the sampling\n     * decision.\n     */\n    startSpan(name, options = {}, context = api.context.active()) {\n        // remove span from context in case a root span is requested via options\n        if (options.root) {\n            context = api.trace.deleteSpan(context);\n        }\n        const parentSpan = api.trace.getSpan(context);\n        if (isTracingSuppressed(context)) {\n            api.diag.debug('Instrumentation suppressed, returning Noop Span');\n            const nonRecordingSpan = api.trace.wrapSpanContext(api.INVALID_SPAN_CONTEXT);\n            return nonRecordingSpan;\n        }\n        const parentSpanContext = parentSpan?.spanContext();\n        const spanId = this._idGenerator.generateSpanId();\n        let validParentSpanContext;\n        let traceId;\n        let traceState;\n        if (!parentSpanContext ||\n            !api.trace.isSpanContextValid(parentSpanContext)) {\n            // New root span.\n            traceId = this._idGenerator.generateTraceId();\n        }\n        else {\n            // New child span.\n            traceId = parentSpanContext.traceId;\n            traceState = parentSpanContext.traceState;\n            validParentSpanContext = parentSpanContext;\n        }\n        const spanKind = options.kind ?? api.SpanKind.INTERNAL;\n        const links = (options.links ?? []).map(link => {\n            return {\n                context: link.context,\n                attributes: sanitizeAttributes(link.attributes),\n            };\n        });\n        const attributes = sanitizeAttributes(options.attributes);\n        // make sampling decision\n        const samplingResult = this._sampler.shouldSample(context, traceId, name, spanKind, attributes, links);\n        traceState = samplingResult.traceState ?? traceState;\n        const traceFlags = samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n            ? api.TraceFlags.SAMPLED\n            : api.TraceFlags.NONE;\n        const spanContext = { traceId, spanId, traceFlags, traceState };\n        if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n            api.diag.debug('Recording is off, propagating context in a non-recording span');\n            const nonRecordingSpan = api.trace.wrapSpanContext(spanContext);\n            return nonRecordingSpan;\n        }\n        // Set initial span attributes. The attributes object may have been mutated\n        // by the sampler, so we sanitize the merged attributes before setting them.\n        const initAttributes = sanitizeAttributes(Object.assign(attributes, samplingResult.attributes));\n        const span = new SpanImpl({\n            resource: this._resource,\n            scope: this.instrumentationScope,\n            context,\n            spanContext,\n            name,\n            kind: spanKind,\n            links,\n            parentSpanContext: validParentSpanContext,\n            attributes: initAttributes,\n            startTime: options.startTime,\n            spanProcessor: this._spanProcessor,\n            spanLimits: this._spanLimits,\n        });\n        return span;\n    }\n    startActiveSpan(name, arg2, arg3, arg4) {\n        let opts;\n        let ctx;\n        let fn;\n        if (arguments.length < 2) {\n            return;\n        }\n        else if (arguments.length === 2) {\n            fn = arg2;\n        }\n        else if (arguments.length === 3) {\n            opts = arg2;\n            fn = arg3;\n        }\n        else {\n            opts = arg2;\n            ctx = arg3;\n            fn = arg4;\n        }\n        const parentContext = ctx ?? api.context.active();\n        const span = this.startSpan(name, opts, parentContext);\n        const contextWithSpanSet = api.trace.setSpan(parentContext, span);\n        return api.context.with(contextWithSpanSet, fn, undefined, span);\n    }\n    /** Returns the active {@link GeneralLimits}. */\n    getGeneralLimits() {\n        return this._generalLimits;\n    }\n    /** Returns the active {@link SpanLimits}. */\n    getSpanLimits() {\n        return this._spanLimits;\n    }\n}\n//# sourceMappingURL=Tracer.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { globalErrorHandler } from '@opentelemetry/core';\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nexport class MultiSpanProcessor {\n    _spanProcessors;\n    constructor(_spanProcessors) {\n        this._spanProcessors = _spanProcessors;\n    }\n    forceFlush() {\n        const promises = [];\n        for (const spanProcessor of this._spanProcessors) {\n            promises.push(spanProcessor.forceFlush());\n        }\n        return new Promise(resolve => {\n            Promise.all(promises)\n                .then(() => {\n                resolve();\n            })\n                .catch(error => {\n                globalErrorHandler(error || new Error('MultiSpanProcessor: forceFlush failed'));\n                resolve();\n            });\n        });\n    }\n    onStart(span, context) {\n        for (const spanProcessor of this._spanProcessors) {\n            spanProcessor.onStart(span, context);\n        }\n    }\n    onEnd(span) {\n        for (const spanProcessor of this._spanProcessors) {\n            spanProcessor.onEnd(span);\n        }\n    }\n    shutdown() {\n        const promises = [];\n        for (const spanProcessor of this._spanProcessors) {\n            promises.push(spanProcessor.shutdown());\n        }\n        return new Promise((resolve, reject) => {\n            Promise.all(promises).then(() => {\n                resolve();\n            }, reject);\n        });\n    }\n}\n//# sourceMappingURL=MultiSpanProcessor.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { merge } from '@opentelemetry/core';\nimport { defaultResource } from '@opentelemetry/resources';\nimport { Tracer } from './Tracer';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { reconfigureLimits } from './utility';\nexport var ForceFlushState;\n(function (ForceFlushState) {\n    ForceFlushState[ForceFlushState[\"resolved\"] = 0] = \"resolved\";\n    ForceFlushState[ForceFlushState[\"timeout\"] = 1] = \"timeout\";\n    ForceFlushState[ForceFlushState[\"error\"] = 2] = \"error\";\n    ForceFlushState[ForceFlushState[\"unresolved\"] = 3] = \"unresolved\";\n})(ForceFlushState || (ForceFlushState = {}));\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nexport class BasicTracerProvider {\n    _config;\n    _tracers = new Map();\n    _resource;\n    _activeSpanProcessor;\n    constructor(config = {}) {\n        const mergedConfig = merge({}, loadDefaultConfig(), reconfigureLimits(config));\n        this._resource = mergedConfig.resource ?? defaultResource();\n        this._config = Object.assign({}, mergedConfig, {\n            resource: this._resource,\n        });\n        const spanProcessors = [];\n        if (config.spanProcessors?.length) {\n            spanProcessors.push(...config.spanProcessors);\n        }\n        this._activeSpanProcessor = new MultiSpanProcessor(spanProcessors);\n    }\n    getTracer(name, version, options) {\n        const key = `${name}@${version || ''}:${options?.schemaUrl || ''}`;\n        if (!this._tracers.has(key)) {\n            this._tracers.set(key, new Tracer({ name, version, schemaUrl: options?.schemaUrl }, this._config, this._resource, this._activeSpanProcessor));\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tracers.get(key);\n    }\n    forceFlush() {\n        const timeout = this._config.forceFlushTimeoutMillis;\n        const promises = this._activeSpanProcessor['_spanProcessors'].map((spanProcessor) => {\n            return new Promise(resolve => {\n                let state;\n                const timeoutInterval = setTimeout(() => {\n                    resolve(new Error(`Span processor did not completed within timeout period of ${timeout} ms`));\n                    state = ForceFlushState.timeout;\n                }, timeout);\n                spanProcessor\n                    .forceFlush()\n                    .then(() => {\n                    clearTimeout(timeoutInterval);\n                    if (state !== ForceFlushState.timeout) {\n                        state = ForceFlushState.resolved;\n                        resolve(state);\n                    }\n                })\n                    .catch(error => {\n                    clearTimeout(timeoutInterval);\n                    state = ForceFlushState.error;\n                    resolve(error);\n                });\n            });\n        });\n        return new Promise((resolve, reject) => {\n            Promise.all(promises)\n                .then(results => {\n                const errors = results.filter(result => result !== ForceFlushState.resolved);\n                if (errors.length > 0) {\n                    reject(errors);\n                }\n                else {\n                    resolve();\n                }\n            })\n                .catch(error => reject([error]));\n        });\n    }\n    shutdown() {\n        return this._activeSpanProcessor.shutdown();\n    }\n}\n//# sourceMappingURL=BasicTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ROOT_CONTEXT } from '@opentelemetry/api';\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nexport class StackContextManager {\n    /**\n     * whether the context manager is enabled or not\n     */\n    _enabled = false;\n    /**\n     * Keeps the reference to current context\n     */\n    _currentContext = ROOT_CONTEXT;\n    /**\n     *\n     * @param context\n     * @param target Function to be executed within the context\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _bindFunction(context = ROOT_CONTEXT, target) {\n        const manager = this;\n        const contextWrapper = function (...args) {\n            return manager.with(context, () => target.apply(this, args));\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    }\n    /**\n     * Returns the active context\n     */\n    active() {\n        return this._currentContext;\n    }\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param context A context (span) to be bind to target\n     * @param target a function or event emitter. When target or one of its callbacks is called,\n     *  the provided context will be used as the active context for the duration of the call.\n     */\n    bind(context, target) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(context, target);\n        }\n        return target;\n    }\n    /**\n     * Disable the context manager (clears the current context)\n     */\n    disable() {\n        this._currentContext = ROOT_CONTEXT;\n        this._enabled = false;\n        return this;\n    }\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    enable() {\n        if (this._enabled) {\n            return this;\n        }\n        this._enabled = true;\n        this._currentContext = ROOT_CONTEXT;\n        return this;\n    }\n    /**\n     * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n     * The context will be set as active\n     * @param context\n     * @param fn Callback function\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    with(context, fn, thisArg, ...args) {\n        const previousContext = this._currentContext;\n        this._currentContext = context || ROOT_CONTEXT;\n        try {\n            return fn.call(thisArg, ...args);\n        }\n        finally {\n            this._currentContext = previousContext;\n        }\n    }\n}\n//# sourceMappingURL=StackContextManager.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BasicTracerProvider, } from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\nimport { trace, context, propagation, } from '@opentelemetry/api';\nimport { CompositePropagator, W3CBaggagePropagator, W3CTraceContextPropagator, } from '@opentelemetry/core';\nfunction setupContextManager(contextManager) {\n    // null means 'do not register'\n    if (contextManager === null) {\n        return;\n    }\n    // undefined means 'register default'\n    if (contextManager === undefined) {\n        const defaultContextManager = new StackContextManager();\n        defaultContextManager.enable();\n        context.setGlobalContextManager(defaultContextManager);\n        return;\n    }\n    contextManager.enable();\n    context.setGlobalContextManager(contextManager);\n}\nfunction setupPropagator(propagator) {\n    // null means 'do not register'\n    if (propagator === null) {\n        return;\n    }\n    // undefined means 'register default'\n    if (propagator === undefined) {\n        propagation.setGlobalPropagator(new CompositePropagator({\n            propagators: [\n                new W3CTraceContextPropagator(),\n                new W3CBaggagePropagator(),\n            ],\n        }));\n        return;\n    }\n    propagation.setGlobalPropagator(propagator);\n}\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nexport class WebTracerProvider extends BasicTracerProvider {\n    /**\n     * Constructs a new Tracer instance.\n     * @param config Web Tracer config\n     */\n    constructor(config = {}) {\n        super(config);\n    }\n    /**\n     * Register this TracerProvider for use with the OpenTelemetry API.\n     * Undefined values may be replaced with defaults, and\n     * null values will be skipped.\n     *\n     * @param config Configuration object for SDK registration\n     */\n    register(config = {}) {\n        trace.setGlobalTracerProvider(this);\n        setupPropagator(config.propagator);\n        setupContextManager(config.contextManager);\n    }\n}\n//# sourceMappingURL=WebTracerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var PerformanceTimingNames;\n(function (PerformanceTimingNames) {\n    PerformanceTimingNames[\"CONNECT_END\"] = \"connectEnd\";\n    PerformanceTimingNames[\"CONNECT_START\"] = \"connectStart\";\n    PerformanceTimingNames[\"DECODED_BODY_SIZE\"] = \"decodedBodySize\";\n    PerformanceTimingNames[\"DOM_COMPLETE\"] = \"domComplete\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_END\"] = \"domContentLoadedEventEnd\";\n    PerformanceTimingNames[\"DOM_CONTENT_LOADED_EVENT_START\"] = \"domContentLoadedEventStart\";\n    PerformanceTimingNames[\"DOM_INTERACTIVE\"] = \"domInteractive\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_END\"] = \"domainLookupEnd\";\n    PerformanceTimingNames[\"DOMAIN_LOOKUP_START\"] = \"domainLookupStart\";\n    PerformanceTimingNames[\"ENCODED_BODY_SIZE\"] = \"encodedBodySize\";\n    PerformanceTimingNames[\"FETCH_START\"] = \"fetchStart\";\n    PerformanceTimingNames[\"LOAD_EVENT_END\"] = \"loadEventEnd\";\n    PerformanceTimingNames[\"LOAD_EVENT_START\"] = \"loadEventStart\";\n    PerformanceTimingNames[\"NAVIGATION_START\"] = \"navigationStart\";\n    PerformanceTimingNames[\"REDIRECT_END\"] = \"redirectEnd\";\n    PerformanceTimingNames[\"REDIRECT_START\"] = \"redirectStart\";\n    PerformanceTimingNames[\"REQUEST_START\"] = \"requestStart\";\n    PerformanceTimingNames[\"RESPONSE_END\"] = \"responseEnd\";\n    PerformanceTimingNames[\"RESPONSE_START\"] = \"responseStart\";\n    PerformanceTimingNames[\"SECURE_CONNECTION_START\"] = \"secureConnectionStart\";\n    PerformanceTimingNames[\"START_TIME\"] = \"startTime\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_END\"] = \"unloadEventEnd\";\n    PerformanceTimingNames[\"UNLOAD_EVENT_START\"] = \"unloadEventStart\";\n})(PerformanceTimingNames || (PerformanceTimingNames = {}));\n//# sourceMappingURL=PerformanceTimingNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport { hrTimeToNanoseconds, timeInputToHrTime, urlMatches, } from '@opentelemetry/core';\nimport { SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH, SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, } from '@opentelemetry/semantic-conventions';\n// Used to normalize relative URLs\nlet urlNormalizingAnchor;\nfunction getUrlNormalizingAnchor() {\n    if (!urlNormalizingAnchor) {\n        urlNormalizingAnchor = document.createElement('a');\n    }\n    return urlNormalizingAnchor;\n}\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\nexport function hasKey(obj, key) {\n    return key in obj;\n}\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n * @param ignoreZeros\n */\nexport function addSpanNetworkEvent(span, performanceName, entries, ignoreZeros = true) {\n    if (hasKey(entries, performanceName) &&\n        typeof entries[performanceName] === 'number' &&\n        !(ignoreZeros && entries[performanceName] === 0)) {\n        return span.addEvent(performanceName, entries[performanceName]);\n    }\n    return undefined;\n}\n/**\n * Helper function for adding network events and content length attributes\n * @param span\n * @param resource\n * @param ignoreNetworkEvents\n * @param ignoreZeros\n */\nexport function addSpanNetworkEvents(span, resource, ignoreNetworkEvents = false, ignoreZeros) {\n    if (ignoreZeros === undefined) {\n        ignoreZeros = resource[PTN.START_TIME] !== 0;\n    }\n    if (!ignoreNetworkEvents) {\n        addSpanNetworkEvent(span, PTN.FETCH_START, resource, ignoreZeros);\n        addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource, ignoreZeros);\n        addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource, ignoreZeros);\n        addSpanNetworkEvent(span, PTN.CONNECT_START, resource, ignoreZeros);\n        addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource, ignoreZeros);\n        addSpanNetworkEvent(span, PTN.CONNECT_END, resource, ignoreZeros);\n        addSpanNetworkEvent(span, PTN.REQUEST_START, resource, ignoreZeros);\n        addSpanNetworkEvent(span, PTN.RESPONSE_START, resource, ignoreZeros);\n        addSpanNetworkEvent(span, PTN.RESPONSE_END, resource, ignoreZeros);\n    }\n    const encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n    if (encodedLength !== undefined) {\n        span.setAttribute(SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n    }\n    const decodedLength = resource[PTN.DECODED_BODY_SIZE];\n    // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n    if (decodedLength !== undefined && encodedLength !== decodedLength) {\n        span.setAttribute(SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED, decodedLength);\n    }\n}\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(filteredResources) {\n    return filteredResources.slice().sort((a, b) => {\n        const valueA = a[PTN.FETCH_START];\n        const valueB = b[PTN.FETCH_START];\n        if (valueA > valueB) {\n            return 1;\n        }\n        else if (valueA < valueB) {\n            return -1;\n        }\n        return 0;\n    });\n}\n/** Returns the origin if present (if in browser context). */\nfunction getOrigin() {\n    return typeof location !== 'undefined' ? location.origin : undefined;\n}\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources = new WeakSet(), initiatorType) {\n    // de-relativize the URL before usage (does no harm to absolute URLs)\n    const parsedSpanUrl = parseUrl(spanUrl);\n    spanUrl = parsedSpanUrl.toString();\n    const filteredResources = filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType);\n    if (filteredResources.length === 0) {\n        return {\n            mainRequest: undefined,\n        };\n    }\n    if (filteredResources.length === 1) {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n    const sorted = sortResources(filteredResources);\n    if (parsedSpanUrl.origin !== getOrigin() && sorted.length > 1) {\n        let corsPreFlightRequest = sorted[0];\n        let mainRequest = findMainRequest(sorted, corsPreFlightRequest[PTN.RESPONSE_END], endTimeHR);\n        const responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n        const fetchStart = mainRequest[PTN.FETCH_START];\n        // no corsPreFlightRequest\n        if (fetchStart < responseEnd) {\n            mainRequest = corsPreFlightRequest;\n            corsPreFlightRequest = undefined;\n        }\n        return {\n            corsPreFlightRequest,\n            mainRequest,\n        };\n    }\n    else {\n        return {\n            mainRequest: filteredResources[0],\n        };\n    }\n}\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(resources, corsPreFlightRequestEndTime, spanEndTimeHR) {\n    const spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n    const minTime = hrTimeToNanoseconds(timeInputToHrTime(corsPreFlightRequestEndTime));\n    let mainRequest = resources[1];\n    let bestGap;\n    const length = resources.length;\n    for (let i = 1; i < length; i++) {\n        const resource = resources[i];\n        const resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        const resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        const currentGap = spanEndTime - resourceEndTime;\n        if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n            bestGap = currentGap;\n            mainRequest = resource;\n        }\n    }\n    return mainRequest;\n}\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(spanUrl, startTimeHR, endTimeHR, resources, ignoredResources, initiatorType) {\n    const startTime = hrTimeToNanoseconds(startTimeHR);\n    const endTime = hrTimeToNanoseconds(endTimeHR);\n    let filteredResources = resources.filter(resource => {\n        const resourceStartTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.FETCH_START]));\n        const resourceEndTime = hrTimeToNanoseconds(timeInputToHrTime(resource[PTN.RESPONSE_END]));\n        return (resource.initiatorType.toLowerCase() ===\n            (initiatorType || 'xmlhttprequest') &&\n            resource.name === spanUrl &&\n            resourceStartTime >= startTime &&\n            resourceEndTime <= endTime);\n    });\n    if (filteredResources.length > 0) {\n        filteredResources = filteredResources.filter(resource => {\n            return !ignoredResources.has(resource);\n        });\n    }\n    return filteredResources;\n}\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url) {\n    if (typeof URL === 'function') {\n        return new URL(url, typeof document !== 'undefined'\n            ? document.baseURI\n            : typeof location !== 'undefined' // Some JS runtimes (e.g. Deno) don't define this\n                ? location.href\n                : undefined);\n    }\n    const element = getUrlNormalizingAnchor();\n    element.href = url;\n    return element;\n}\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url) {\n    const urlLike = parseUrl(url);\n    return urlLike.href;\n}\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target, optimised) {\n    if (target.nodeType === Node.DOCUMENT_NODE) {\n        return '/';\n    }\n    const targetValue = getNodeValue(target, optimised);\n    if (optimised && targetValue.indexOf('@id') > 0) {\n        return targetValue;\n    }\n    let xpath = '';\n    if (target.parentNode) {\n        xpath += getElementXPath(target.parentNode, false);\n    }\n    xpath += targetValue;\n    return xpath;\n}\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target) {\n    if (!target.parentNode) {\n        return 0;\n    }\n    const allowedTypes = [target.nodeType];\n    if (target.nodeType === Node.CDATA_SECTION_NODE) {\n        allowedTypes.push(Node.TEXT_NODE);\n    }\n    let elements = Array.from(target.parentNode.childNodes);\n    elements = elements.filter((element) => {\n        const localName = element.localName;\n        return (allowedTypes.indexOf(element.nodeType) >= 0 &&\n            localName === target.localName);\n    });\n    if (elements.length >= 1) {\n        return elements.indexOf(target) + 1; // xpath starts from 1\n    }\n    // if there are no other similar child xpath doesn't need index\n    return 0;\n}\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target, optimised) {\n    const nodeType = target.nodeType;\n    const index = getNodeIndex(target);\n    let nodeValue = '';\n    if (nodeType === Node.ELEMENT_NODE) {\n        const id = target.getAttribute('id');\n        if (optimised && id) {\n            return `//*[@id=\"${id}\"]`;\n        }\n        nodeValue = target.localName;\n    }\n    else if (nodeType === Node.TEXT_NODE ||\n        nodeType === Node.CDATA_SECTION_NODE) {\n        nodeValue = 'text()';\n    }\n    else if (nodeType === Node.COMMENT_NODE) {\n        nodeValue = 'comment()';\n    }\n    else {\n        return '';\n    }\n    // if index is 1 it can be omitted in xpath\n    if (nodeValue && index > 1) {\n        return `/${nodeValue}[${index}]`;\n    }\n    return `/${nodeValue}`;\n}\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(spanUrl, propagateTraceHeaderCorsUrls) {\n    let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n    if (typeof propagateTraceHeaderUrls === 'string' ||\n        propagateTraceHeaderUrls instanceof RegExp) {\n        propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n    }\n    const parsedSpanUrl = parseUrl(spanUrl);\n    if (parsedSpanUrl.origin === getOrigin()) {\n        return true;\n    }\n    else {\n        return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl => urlMatches(spanUrl, propagateTraceHeaderUrl));\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * check if an object has `addEventListener` and `removeEventListener` functions.\n * Generally only called with a `TargetWithEvents` but may be called with an `unknown` value.\n * @param obj - The object to check.\n */\nexport function isListenerObject(obj) {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        'addEventListener' in obj &&\n        typeof obj.addEventListener === 'function' &&\n        'removeEventListener' in obj &&\n        typeof obj.removeEventListener === 'function');\n}\n//# sourceMappingURL=util.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/// <reference types=\"zone.js\" />\nimport { ROOT_CONTEXT } from '@opentelemetry/api';\nimport { isListenerObject } from './util';\n/* Key name to be used to save a context reference in Zone */\nconst ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\n/**\n * ZoneContextManager\n * This module provides an easy functionality for tracing action between asynchronous operations in web.\n * It was not possible with standard [StackContextManager]{@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-web/src/StackContextManager.ts}.\n * It heavily depends on [zone.js]{@link https://www.npmjs.com/package/zone.js}.\n * It stores the information about context in zone. Each Context will have always new Zone;\n * It also supports binding a certain Span to a target that has \"addEventListener\" and \"removeEventListener\".\n * When this happens a new zone is being created and the provided Span is being assigned to this zone.\n */\nexport class ZoneContextManager {\n    /**\n     * whether the context manager is enabled or not\n     */\n    _enabled = false;\n    /**\n     * Helps to create a unique name for the zones - part of zone name\n     */\n    _zoneCounter = 0;\n    /**\n     * Returns the active context from certain zone name\n     * @param activeZone\n     */\n    _activeContextFromZone(activeZone) {\n        return (activeZone && activeZone.get(ZONE_CONTEXT_KEY)) || ROOT_CONTEXT;\n    }\n    /**\n     * @param context A context (span) to be executed within target function\n     * @param target Function to be executed within the context\n     */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    _bindFunction(context, target) {\n        const manager = this;\n        const contextWrapper = function (...args) {\n            return manager.with(context, () => target.apply(this, args));\n        };\n        Object.defineProperty(contextWrapper, 'length', {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: target.length,\n        });\n        return contextWrapper;\n    }\n    /**\n     * @param context A context (span) to be bind to target\n     * @param obj target object on which the listeners will be patched\n     */\n    _bindListener(context, obj) {\n        const target = obj;\n        if (target.__ot_listeners !== undefined) {\n            return obj;\n        }\n        target.__ot_listeners = {};\n        if (typeof target.addEventListener === 'function') {\n            target.addEventListener = this._patchAddEventListener(target, target.addEventListener, context);\n        }\n        if (typeof target.removeEventListener === 'function') {\n            target.removeEventListener = this._patchRemoveEventListener(target, target.removeEventListener);\n        }\n        return obj;\n    }\n    /**\n     * Creates a new unique zone name\n     */\n    _createZoneName() {\n        this._zoneCounter++;\n        const random = Math.random();\n        return `${this._zoneCounter}-${random}`;\n    }\n    /**\n     * Creates a new zone\n     * @param zoneName zone name\n     * @param context A context (span) to be bind with Zone\n     */\n    _createZone(zoneName, context) {\n        return Zone.current.fork({\n            name: zoneName,\n            properties: {\n                [ZONE_CONTEXT_KEY]: context,\n            },\n        });\n    }\n    /**\n     * Returns the active zone\n     */\n    _getActiveZone() {\n        return Zone.current;\n    }\n    /**\n     * Patches addEventListener method\n     * @param target any target that has \"addEventListener\" method\n     * @param original reference to the patched method\n     * @param [context] context to be bind to the listener\n     */\n    _patchAddEventListener(target, original, context) {\n        const contextManager = this;\n        return function (event, listener, opts) {\n            if (target.__ot_listeners === undefined) {\n                target.__ot_listeners = {};\n            }\n            let listeners = target.__ot_listeners[event];\n            if (listeners === undefined) {\n                listeners = new WeakMap();\n                target.__ot_listeners[event] = listeners;\n            }\n            const patchedListener = contextManager.bind(context, listener);\n            // store a weak reference of the user listener to ours\n            listeners.set(listener, patchedListener);\n            return original.call(this, event, patchedListener, opts);\n        };\n    }\n    /**\n     * Patches removeEventListener method\n     * @param target any target that has \"removeEventListener\" method\n     * @param original reference to the patched method\n     */\n    _patchRemoveEventListener(target, original) {\n        return function (event, listener) {\n            if (target.__ot_listeners === undefined ||\n                target.__ot_listeners[event] === undefined) {\n                return original.call(this, event, listener);\n            }\n            const events = target.__ot_listeners[event];\n            const patchedListener = events.get(listener);\n            events.delete(listener);\n            return original.call(this, event, patchedListener || listener);\n        };\n    }\n    /**\n     * Returns the active context\n     */\n    active() {\n        if (!this._enabled) {\n            return ROOT_CONTEXT;\n        }\n        const activeZone = this._getActiveZone();\n        const active = this._activeContextFromZone(activeZone);\n        if (active) {\n            return active;\n        }\n        return ROOT_CONTEXT;\n    }\n    /**\n     * Binds a the certain context or the active one to the target function and then returns the target\n     * @param context A context (span) to be bind to target\n     * @param target a function or event emitter. When target or one of its callbacks is called,\n     *  the provided context will be used as the active context for the duration of the call.\n     */\n    bind(context, target) {\n        // if no specific context to propagate is given, we use the current one\n        if (context === undefined) {\n            context = this.active();\n        }\n        if (typeof target === 'function') {\n            return this._bindFunction(context, target);\n        }\n        else if (isListenerObject(target)) {\n            this._bindListener(context, target);\n        }\n        return target;\n    }\n    /**\n     * Disable the context manager (clears all the contexts)\n     */\n    disable() {\n        this._enabled = false;\n        return this;\n    }\n    /**\n     * Enables the context manager and creates a default(root) context\n     */\n    enable() {\n        this._enabled = true;\n        return this;\n    }\n    /**\n     * Calls the callback function [fn] with the provided [context].\n     *     If [context] is undefined then it will use the active context.\n     *     The context will be set as active\n     * @param context A context (span) to be called with provided callback\n     * @param fn Callback function\n     * @param thisArg optional receiver to be used for calling fn\n     * @param args optional arguments forwarded to fn\n     */\n    with(context, fn, thisArg, ...args) {\n        const zoneName = this._createZoneName();\n        const newZone = this._createZone(zoneName, context);\n        return newZone.run(fn, thisArg, args);\n    }\n}\n//# sourceMappingURL=ZoneContextManager.js.map","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            const zoneTask = task;\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            const { type, data: { isPeriodic = false, isRefreshable = false } = {} } = task;\n            if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && zoneTask._transitionTo(running, scheduled);\n            const previousTask = _currentTask;\n            _currentTask = zoneTask;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                const state = task.state;\n                if (state !== notScheduled && state !== unknown) {\n                    if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                        reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                    }\n                    else {\n                        const zoneDelegates = zoneTask._zoneDelegates;\n                        this._updateTaskCount(zoneTask, -1);\n                        reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                        if (isRefreshable) {\n                            zoneTask._zoneDelegates = zoneDelegates;\n                        }\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = -1;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (\n        // https://github.com/angular/angular/issues/47579\n        // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n        // This is the only specific case we should check for. The spec defines that the\n        // `returnValue` attribute represents the message to show the user. When the event\n        // is created, this attribute must be set to the empty string.\n        event.type === 'beforeunload' &&\n            // To prevent any breaking changes resulting from this change, given that\n            // it was already causing a significant number of failures in G3, we have hidden\n            // that behavior behind a global configuration flag. Consumers can enable this\n            // flag explicitly if they want the `beforeunload` event to be handled as defined\n            // in the specification.\n            _global[enableBeforeunloadSymbol] &&\n            // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n            // `typeof result` is a string.\n            typeof result === 'string') {\n            event.returnValue = result;\n        }\n        else if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// Note that passive event listeners are now supported by most modern browsers,\n// including Chrome, Firefox, Safari, and Edge. There's a pending change that\n// would remove support for legacy browsers by zone.js. Removing `passiveSupported`\n// from the codebase will reduce the final code size for existing apps that still use zone.js.\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n        // eliminating the need to create a new object solely for passing data.\n        // WARNING: This object has a static lifetime, meaning it is not created\n        // each time `addEventListener` is called. It is instantiated only once\n        // and captured by reference inside the `addEventListener` and\n        // `removeEventListener` functions. Do not add any new properties to this\n        // object, as doing so would necessitate maintaining the information\n        // between `addEventListener` calls.\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        /**\n         * In the context of events and listeners, this function will be\n         * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n         * Cancelling a task is primarily used to remove event listeners from\n         * the task target.\n         */\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (task.removeAbortListener) {\n                                task.removeAbortListener();\n                                task.removeAbortListener = null;\n                            }\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        function copyEventListenerOptions(options) {\n            if (typeof options === 'object' && options !== null) {\n                // We need to destructure the target `options` object since it may\n                // be frozen or sealed (possibly provided implicitly by a third-party\n                // library), or its properties may be readonly.\n                const newOptions = { ...options };\n                // The `signal` option was recently introduced, which caused regressions in\n                // third-party scenarios where `AbortController` was directly provided to\n                // `addEventListener` as options. For instance, in cases like\n                // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                // which is valid because `AbortController` includes a `signal` getter, spreading\n                // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                // isn't feasible since `AbortController` is a built-in object type, and attempting\n                // to create a new object directly with it as the prototype might result in\n                // unexpected behavior.\n                if (options.signal) {\n                    newOptions.signal = options.signal;\n                }\n                return newOptions;\n            }\n            return options;\n        }\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // In the code below, `options` should no longer be reassigned; instead, it\n                // should only be mutated. This is because we pass that object to the native\n                // `addEventListener`.\n                // It's generally recommended to use the same object reference for options.\n                // This ensures consistency and avoids potential issues.\n                taskData.options = options;\n                if (once) {\n                    // When using `addEventListener` with the `once` option, we don't pass\n                    // the `once` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `once` setting and handle it ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // When using `addEventListener` with the `signal` option, we don't pass\n                    // the `signal` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `signal` setting and handle it ourselves.\n                    taskData.options.signal = undefined;\n                }\n                // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                // is updated before scheduling the task, as `customScheduleGlobal` uses\n                // `taskData.options` to pass it to the native `addEventListener`.\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    taskData.options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            // `existingTasks` may not exist if the `addEventListener` was called before\n            // it was patched by zone.js. Please refer to the attached issue for\n            // clarification, particularly after the `if` condition, before calling\n            // the native `removeEventListener`.\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // In all other conditions, when `addEventListener` is called after being\n                        // patched by zone.js, we would always find an event task on the `EventTarget`.\n                        // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                        // which ultimately removes an event listener and cleans up the abort listener\n                        // (if an `AbortSignal` was provided when scheduling a task).\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // https://github.com/angular/zone.js/issues/930\n            // We may encounter a situation where the `addEventListener` was\n            // called on the event target before zone.js is loaded, resulting\n            // in no task being stored on the event target due to its invocation\n            // of the native implementation. In this scenario, we simply need to\n            // invoke the native `removeEventListener`.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        const handleOrId = setNative.apply(window, data.args);\n        // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n        // to this so that we do not cause potentally leaks when using `setTimeout`\n        // since this can be periodic when using `.refresh`.\n        if (isNumber(handleOrId)) {\n            data.handleId = handleOrId;\n        }\n        else {\n            data.handle = handleOrId;\n            // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n            data.isRefreshable = isFunction(handleOrId.refresh);\n        }\n        return task;\n    }\n    function clearTask(task) {\n        const { handle, handleId } = task.data;\n        return clearNative.call(window, handle ?? handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (isFunction(args[0])) {\n            const options = {\n                isRefreshable: false,\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    const { handle, handleId, isPeriodic, isRefreshable } = options;\n                    if (!isPeriodic && !isRefreshable) {\n                        if (handleId) {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[handleId];\n                        }\n                        else if (handle) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            handle[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const { handleId, handle, isRefreshable, isPeriodic } = task.data;\n            if (handleId) {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handleId] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n                if (isRefreshable && !isPeriodic) {\n                    const originalRefresh = handle.refresh;\n                    handle.refresh = function () {\n                        const { zone, state } = task;\n                        if (state === 'notScheduled') {\n                            task._state = 'scheduled';\n                            zone._updateTaskCount(task, 1);\n                        }\n                        else if (state === 'running') {\n                            task._state = 'scheduling';\n                        }\n                        return originalRefresh.call(this);\n                    };\n                }\n            }\n            return handle ?? handleId ?? task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (isNumber(id)) {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n            delete tasksByHandleId[id];\n        }\n        else {\n            // nodejs env ?? other environments.\n            task = id?.[taskSymbol];\n            if (task) {\n                id[taskSymbol] = null;\n            }\n            else {\n                task = id;\n            }\n        }\n        if (task?.type) {\n            if (task.cancelFn) {\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class NoopLogger {\n    emit(_logRecord) { }\n}\nexport const NOOP_LOGGER = new NoopLogger();\n//# sourceMappingURL=NoopLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NoopLogger } from './NoopLogger';\nexport class NoopLoggerProvider {\n    getLogger(_name, _version, _options) {\n        return new NoopLogger();\n    }\n}\nexport const NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n//# sourceMappingURL=NoopLoggerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_LOGGER } from './NoopLogger';\nexport class ProxyLogger {\n    constructor(_provider, name, version, options) {\n        this._provider = _provider;\n        this.name = name;\n        this.version = version;\n        this.options = options;\n    }\n    /**\n     * Emit a log record. This method should only be used by log appenders.\n     *\n     * @param logRecord\n     */\n    emit(logRecord) {\n        this._getLogger().emit(logRecord);\n    }\n    /**\n     * Try to get a logger from the proxy logger provider.\n     * If the proxy logger provider has no delegate, return a noop logger.\n     */\n    _getLogger() {\n        if (this._delegate) {\n            return this._delegate;\n        }\n        const logger = this._provider.getDelegateLogger(this.name, this.version, this.options);\n        if (!logger) {\n            return NOOP_LOGGER;\n        }\n        this._delegate = logger;\n        return this._delegate;\n    }\n}\n//# sourceMappingURL=ProxyLogger.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { NOOP_LOGGER_PROVIDER } from './NoopLoggerProvider';\nimport { ProxyLogger } from './ProxyLogger';\nexport class ProxyLoggerProvider {\n    getLogger(name, version, options) {\n        var _a;\n        return ((_a = this.getDelegateLogger(name, version, options)) !== null && _a !== void 0 ? _a : new ProxyLogger(this, name, version, options));\n    }\n    getDelegate() {\n        var _a;\n        return (_a = this._delegate) !== null && _a !== void 0 ? _a : NOOP_LOGGER_PROVIDER;\n    }\n    /**\n     * Set the delegate logger provider\n     */\n    setDelegate(delegate) {\n        this._delegate = delegate;\n    }\n    getDelegateLogger(name, version, options) {\n        var _a;\n        return (_a = this._delegate) === null || _a === void 0 ? void 0 : _a.getLogger(name, version, options);\n    }\n}\n//# sourceMappingURL=ProxyLoggerProvider.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis = typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n        ? self\n        : typeof window === 'object'\n            ? window\n            : typeof global === 'object'\n                ? global\n                : {};\n//# sourceMappingURL=globalThis.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { _globalThis } from '../platform';\nexport const GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\nexport const _global = _globalThis;\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter(requiredVersion, instance, fallback) {\n    return (version) => version === requiredVersion ? instance : fallback;\n}\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n//# sourceMappingURL=global-utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { API_BACKWARDS_COMPATIBILITY_VERSION, GLOBAL_LOGS_API_KEY, _global, makeGetter, } from '../internal/global-utils';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { ProxyLoggerProvider } from '../ProxyLoggerProvider';\nexport class LogsAPI {\n    constructor() {\n        this._proxyLoggerProvider = new ProxyLoggerProvider();\n    }\n    static getInstance() {\n        if (!this._instance) {\n            this._instance = new LogsAPI();\n        }\n        return this._instance;\n    }\n    setGlobalLoggerProvider(provider) {\n        if (_global[GLOBAL_LOGS_API_KEY]) {\n            return this.getLoggerProvider();\n        }\n        _global[GLOBAL_LOGS_API_KEY] = makeGetter(API_BACKWARDS_COMPATIBILITY_VERSION, provider, NOOP_LOGGER_PROVIDER);\n        this._proxyLoggerProvider.setDelegate(provider);\n        return provider;\n    }\n    /**\n     * Returns the global logger provider.\n     *\n     * @returns LoggerProvider\n     */\n    getLoggerProvider() {\n        var _a, _b;\n        return ((_b = (_a = _global[GLOBAL_LOGS_API_KEY]) === null || _a === void 0 ? void 0 : _a.call(_global, API_BACKWARDS_COMPATIBILITY_VERSION)) !== null && _b !== void 0 ? _b : this._proxyLoggerProvider);\n    }\n    /**\n     * Returns a logger from the global logger provider.\n     *\n     * @returns Logger\n     */\n    getLogger(name, version, options) {\n        return this.getLoggerProvider().getLogger(name, version, options);\n    }\n    /** Remove the global logger provider */\n    disable() {\n        delete _global[GLOBAL_LOGS_API_KEY];\n        this._proxyLoggerProvider = new ProxyLoggerProvider();\n    }\n}\n//# sourceMappingURL=logs.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport { SeverityNumber, } from './types/LogRecord';\nexport { NOOP_LOGGER, NoopLogger } from './NoopLogger';\nexport { NOOP_LOGGER_PROVIDER, NoopLoggerProvider } from './NoopLoggerProvider';\nexport { ProxyLogger } from './ProxyLogger';\nexport { ProxyLoggerProvider } from './ProxyLoggerProvider';\nimport { LogsAPI } from './api/logs';\nexport const logs = LogsAPI.getInstance();\n//# sourceMappingURL=index.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(instrumentations, tracerProvider, meterProvider, loggerProvider) {\n    for (let i = 0, j = instrumentations.length; i < j; i++) {\n        const instrumentation = instrumentations[i];\n        if (tracerProvider) {\n            instrumentation.setTracerProvider(tracerProvider);\n        }\n        if (meterProvider) {\n            instrumentation.setMeterProvider(meterProvider);\n        }\n        if (loggerProvider && instrumentation.setLoggerProvider) {\n            instrumentation.setLoggerProvider(loggerProvider);\n        }\n        // instrumentations have been already enabled during creation\n        // so enable only if user prevented that by setting enabled to false\n        // this is to prevent double enabling but when calling register all\n        // instrumentations should be now enabled\n        if (!instrumentation.getConfig().enabled) {\n            instrumentation.enable();\n        }\n    }\n}\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(instrumentations) {\n    instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n//# sourceMappingURL=autoLoaderUtils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { trace, metrics } from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport { disableInstrumentations, enableInstrumentations, } from './autoLoaderUtils';\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(options) {\n    const tracerProvider = options.tracerProvider || trace.getTracerProvider();\n    const meterProvider = options.meterProvider || metrics.getMeterProvider();\n    const loggerProvider = options.loggerProvider || logs.getLoggerProvider();\n    const instrumentations = options.instrumentations?.flat() ?? [];\n    enableInstrumentations(instrumentations, tracerProvider, meterProvider, loggerProvider);\n    return () => {\n        disableInstrumentations(instrumentations);\n    };\n}\n//# sourceMappingURL=autoLoader.js.map","'use strict'\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag, metrics, trace, } from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport * as shimmer from 'shimmer';\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nexport class InstrumentationAbstract {\n    instrumentationName;\n    instrumentationVersion;\n    _config = {};\n    _tracer;\n    _meter;\n    _logger;\n    _diag;\n    constructor(instrumentationName, instrumentationVersion, config) {\n        this.instrumentationName = instrumentationName;\n        this.instrumentationVersion = instrumentationVersion;\n        this.setConfig(config);\n        this._diag = diag.createComponentLogger({\n            namespace: instrumentationName,\n        });\n        this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n        this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n        this._logger = logs.getLogger(instrumentationName, instrumentationVersion);\n        this._updateMetricInstruments();\n    }\n    /* Api to wrap instrumented method */\n    _wrap = shimmer.wrap;\n    /* Api to unwrap instrumented methods */\n    _unwrap = shimmer.unwrap;\n    /* Api to mass wrap instrumented method */\n    _massWrap = shimmer.massWrap;\n    /* Api to mass unwrap instrumented methods */\n    _massUnwrap = shimmer.massUnwrap;\n    /* Returns meter */\n    get meter() {\n        return this._meter;\n    }\n    /**\n     * Sets MeterProvider to this plugin\n     * @param meterProvider\n     */\n    setMeterProvider(meterProvider) {\n        this._meter = meterProvider.getMeter(this.instrumentationName, this.instrumentationVersion);\n        this._updateMetricInstruments();\n    }\n    /* Returns logger */\n    get logger() {\n        return this._logger;\n    }\n    /**\n     * Sets LoggerProvider to this plugin\n     * @param loggerProvider\n     */\n    setLoggerProvider(loggerProvider) {\n        this._logger = loggerProvider.getLogger(this.instrumentationName, this.instrumentationVersion);\n    }\n    /**\n     * @experimental\n     *\n     * Get module definitions defined by {@link init}.\n     * This can be used for experimental compile-time instrumentation.\n     *\n     * @returns an array of {@link InstrumentationModuleDefinition}\n     */\n    getModuleDefinitions() {\n        const initResult = this.init() ?? [];\n        if (!Array.isArray(initResult)) {\n            return [initResult];\n        }\n        return initResult;\n    }\n    /**\n     * Sets the new metric instruments with the current Meter.\n     */\n    _updateMetricInstruments() {\n        return;\n    }\n    /* Returns InstrumentationConfig */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Sets InstrumentationConfig to this plugin\n     * @param config\n     */\n    setConfig(config) {\n        // copy config first level properties to ensure they are immutable.\n        // nested properties are not copied, thus are mutable from the outside.\n        this._config = {\n            enabled: true,\n            ...config,\n        };\n    }\n    /**\n     * Sets TraceProvider to this plugin\n     * @param tracerProvider\n     */\n    setTracerProvider(tracerProvider) {\n        this._tracer = tracerProvider.getTracer(this.instrumentationName, this.instrumentationVersion);\n    }\n    /* Returns tracer */\n    get tracer() {\n        return this._tracer;\n    }\n    /**\n     * Execute span customization hook, if configured, and log any errors.\n     * Any semantics of the trigger and info are defined by the specific instrumentation.\n     * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n     * @param triggerName The name of the trigger for executing the hook for logging purposes\n     * @param span The span to which the hook should be applied\n     * @param info The info object to be passed to the hook, with useful data the hook may use\n     */\n    _runSpanCustomizationHook(hookHandler, triggerName, span, info) {\n        if (!hookHandler) {\n            return;\n        }\n        try {\n            hookHandler(span, info);\n        }\n        catch (e) {\n            this._diag.error(`Error running span customization hook due to exception in handler`, { triggerName }, e);\n        }\n    }\n}\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { InstrumentationAbstract } from '../../instrumentation';\n/**\n * Base abstract class for instrumenting web plugins\n */\nexport class InstrumentationBase extends InstrumentationAbstract {\n    constructor(instrumentationName, instrumentationVersion, config) {\n        super(instrumentationName, instrumentationVersion, config);\n        if (this._config.enabled) {\n            this.enable();\n        }\n    }\n}\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport async function safeExecuteInTheMiddleAsync(execute, onFinish, preventThrowingError) {\n    let error;\n    let result;\n    try {\n        result = await execute();\n    }\n    catch (e) {\n        error = e;\n    }\n    finally {\n        onFinish(error, result);\n        if (error && !preventThrowingError) {\n            // eslint-disable-next-line no-unsafe-finally\n            throw error;\n        }\n        // eslint-disable-next-line no-unsafe-finally\n        return result;\n    }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func) {\n    return (typeof func === 'function' &&\n        typeof func.__original === 'function' &&\n        typeof func.__unwrap === 'function' &&\n        func.__wrapped === true);\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class OTLPExporterBase {\n    _delegate;\n    constructor(_delegate) {\n        this._delegate = _delegate;\n    }\n    /**\n     * Export items.\n     * @param items\n     * @param resultCallback\n     */\n    export(items, resultCallback) {\n        this._delegate.export(items, resultCallback);\n    }\n    forceFlush() {\n        return this._delegate.forceFlush();\n    }\n    shutdown() {\n        return this._delegate.shutdown();\n    }\n}\n//# sourceMappingURL=OTLPExporterBase.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Interface for handling error\n */\nexport class OTLPExporterError extends Error {\n    code;\n    name = 'OTLPExporterError';\n    data;\n    constructor(message, code, data) {\n        super(message);\n        this.data = data;\n        this.code = code;\n    }\n}\n//# sourceMappingURL=types.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function validateTimeoutMillis(timeoutMillis) {\n    if (Number.isFinite(timeoutMillis) && timeoutMillis > 0) {\n        return timeoutMillis;\n    }\n    throw new Error(`Configuration: timeoutMillis is invalid, expected number greater than 0 (actual: '${timeoutMillis}')`);\n}\nexport function wrapStaticHeadersInFunction(headers) {\n    if (headers == null) {\n        return undefined;\n    }\n    return () => headers;\n}\n/**\n * @param userProvidedConfiguration  Configuration options provided by the user in code.\n * @param fallbackConfiguration Fallback to use when the {@link userProvidedConfiguration} does not specify an option.\n * @param defaultConfiguration The defaults as defined by the exporter specification\n */\nexport function mergeOtlpSharedConfigurationWithDefaults(userProvidedConfiguration, fallbackConfiguration, defaultConfiguration) {\n    return {\n        timeoutMillis: validateTimeoutMillis(userProvidedConfiguration.timeoutMillis ??\n            fallbackConfiguration.timeoutMillis ??\n            defaultConfiguration.timeoutMillis),\n        concurrencyLimit: userProvidedConfiguration.concurrencyLimit ??\n            fallbackConfiguration.concurrencyLimit ??\n            defaultConfiguration.concurrencyLimit,\n        compression: userProvidedConfiguration.compression ??\n            fallbackConfiguration.compression ??\n            defaultConfiguration.compression,\n    };\n}\nexport function getSharedConfigurationDefaults() {\n    return {\n        timeoutMillis: 10000,\n        concurrencyLimit: 30,\n        compression: 'none',\n    };\n}\n//# sourceMappingURL=shared-configuration.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass BoundedQueueExportPromiseHandler {\n    _concurrencyLimit;\n    _sendingPromises = [];\n    /**\n     * @param concurrencyLimit maximum promises allowed in a queue at the same time.\n     */\n    constructor(concurrencyLimit) {\n        this._concurrencyLimit = concurrencyLimit;\n    }\n    pushPromise(promise) {\n        if (this.hasReachedLimit()) {\n            throw new Error('Concurrency Limit reached');\n        }\n        this._sendingPromises.push(promise);\n        const popPromise = () => {\n            const index = this._sendingPromises.indexOf(promise);\n            this._sendingPromises.splice(index, 1);\n        };\n        promise.then(popPromise, popPromise);\n    }\n    hasReachedLimit() {\n        return this._sendingPromises.length >= this._concurrencyLimit;\n    }\n    async awaitAll() {\n        await Promise.all(this._sendingPromises);\n    }\n}\n/**\n * Promise queue for keeping track of export promises. Finished promises will be auto-dequeued.\n * Allows for awaiting all promises in the queue.\n */\nexport function createBoundedQueueExportPromiseHandler(options) {\n    return new BoundedQueueExportPromiseHandler(options.concurrencyLimit);\n}\n//# sourceMappingURL=bounded-queue-export-promise-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nfunction isPartialSuccessResponse(response) {\n    return Object.prototype.hasOwnProperty.call(response, 'partialSuccess');\n}\n/**\n * Default response handler that logs a partial success to the console.\n */\nexport function createLoggingPartialSuccessResponseHandler() {\n    return {\n        handleResponse(response) {\n            // Partial success MUST never be an empty object according the specification\n            // see https://opentelemetry.io/docs/specs/otlp/#partial-success\n            if (response == null ||\n                !isPartialSuccessResponse(response) ||\n                response.partialSuccess == null ||\n                Object.keys(response.partialSuccess).length === 0) {\n                return;\n            }\n            diag.warn('Received Partial Success response:', JSON.stringify(response.partialSuccess));\n        },\n    };\n}\n//# sourceMappingURL=logging-response-handler.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\nimport { OTLPExporterError } from './types';\nimport { createLoggingPartialSuccessResponseHandler } from './logging-response-handler';\nimport { diag } from '@opentelemetry/api';\nclass OTLPExportDelegate {\n    _transport;\n    _serializer;\n    _responseHandler;\n    _promiseQueue;\n    _timeout;\n    _diagLogger;\n    constructor(_transport, _serializer, _responseHandler, _promiseQueue, _timeout) {\n        this._transport = _transport;\n        this._serializer = _serializer;\n        this._responseHandler = _responseHandler;\n        this._promiseQueue = _promiseQueue;\n        this._timeout = _timeout;\n        this._diagLogger = diag.createComponentLogger({\n            namespace: 'OTLPExportDelegate',\n        });\n    }\n    export(internalRepresentation, resultCallback) {\n        this._diagLogger.debug('items to be sent', internalRepresentation);\n        // don't do any work if too many exports are in progress.\n        if (this._promiseQueue.hasReachedLimit()) {\n            resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Concurrent export limit reached'),\n            });\n            return;\n        }\n        const serializedRequest = this._serializer.serializeRequest(internalRepresentation);\n        if (serializedRequest == null) {\n            resultCallback({\n                code: ExportResultCode.FAILED,\n                error: new Error('Nothing to send'),\n            });\n            return;\n        }\n        this._promiseQueue.pushPromise(this._transport.send(serializedRequest, this._timeout).then(response => {\n            if (response.status === 'success') {\n                if (response.data != null) {\n                    try {\n                        this._responseHandler.handleResponse(this._serializer.deserializeResponse(response.data));\n                    }\n                    catch (e) {\n                        this._diagLogger.warn('Export succeeded but could not deserialize response - is the response specification compliant?', e, response.data);\n                    }\n                }\n                // No matter the response, we can consider the export still successful.\n                resultCallback({\n                    code: ExportResultCode.SUCCESS,\n                });\n                return;\n            }\n            else if (response.status === 'failure' && response.error) {\n                resultCallback({\n                    code: ExportResultCode.FAILED,\n                    error: response.error,\n                });\n                return;\n            }\n            else if (response.status === 'retryable') {\n                resultCallback({\n                    code: ExportResultCode.FAILED,\n                    error: new OTLPExporterError('Export failed with retryable status'),\n                });\n            }\n            else {\n                resultCallback({\n                    code: ExportResultCode.FAILED,\n                    error: new OTLPExporterError('Export failed with unknown error'),\n                });\n            }\n        }, reason => resultCallback({\n            code: ExportResultCode.FAILED,\n            error: reason,\n        })));\n    }\n    forceFlush() {\n        return this._promiseQueue.awaitAll();\n    }\n    async shutdown() {\n        this._diagLogger.debug('shutdown started');\n        await this.forceFlush();\n        this._transport.shutdown();\n    }\n}\n/**\n * Creates a generic delegate for OTLP exports which only contains parts of the OTLP export that are shared across all\n * signals.\n */\nexport function createOtlpExportDelegate(components, settings) {\n    return new OTLPExportDelegate(components.transport, components.serializer, createLoggingPartialSuccessResponseHandler(), components.promiseHandler, settings.timeout);\n}\n//# sourceMappingURL=otlp-export-delegate.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createBoundedQueueExportPromiseHandler } from './bounded-queue-export-promise-handler';\nimport { createOtlpExportDelegate, } from './otlp-export-delegate';\nexport function createOtlpNetworkExportDelegate(options, serializer, transport) {\n    return createOtlpExportDelegate({\n        transport: transport,\n        serializer,\n        promiseHandler: createBoundedQueueExportPromiseHandler(options),\n    }, { timeout: options.timeoutMillis });\n}\n//# sourceMappingURL=otlp-network-export-delegate.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction intValue(charCode) {\n    // 0-9\n    if (charCode >= 48 && charCode <= 57) {\n        return charCode - 48;\n    }\n    // a-f\n    if (charCode >= 97 && charCode <= 102) {\n        return charCode - 87;\n    }\n    // A-F\n    return charCode - 55;\n}\nexport function hexToBinary(hexStr) {\n    const buf = new Uint8Array(hexStr.length / 2);\n    let offset = 0;\n    for (let i = 0; i < hexStr.length; i += 2) {\n        const hi = intValue(hexStr.charCodeAt(i));\n        const lo = intValue(hexStr.charCodeAt(i + 1));\n        buf[offset++] = (hi << 4) | lo;\n    }\n    return buf;\n}\n//# sourceMappingURL=hex-to-binary.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { hrTimeToNanoseconds } from '@opentelemetry/core';\nimport { hexToBinary } from './hex-to-binary';\nexport function hrTimeToNanos(hrTime) {\n    const NANOSECONDS = BigInt(1000000000);\n    return BigInt(hrTime[0]) * NANOSECONDS + BigInt(hrTime[1]);\n}\nexport function toLongBits(value) {\n    const low = Number(BigInt.asUintN(32, value));\n    const high = Number(BigInt.asUintN(32, value >> BigInt(32)));\n    return { low, high };\n}\nexport function encodeAsLongBits(hrTime) {\n    const nanos = hrTimeToNanos(hrTime);\n    return toLongBits(nanos);\n}\nexport function encodeAsString(hrTime) {\n    const nanos = hrTimeToNanos(hrTime);\n    return nanos.toString();\n}\nconst encodeTimestamp = typeof BigInt !== 'undefined' ? encodeAsString : hrTimeToNanoseconds;\nfunction identity(value) {\n    return value;\n}\nfunction optionalHexToBinary(str) {\n    if (str === undefined)\n        return undefined;\n    return hexToBinary(str);\n}\nconst DEFAULT_ENCODER = {\n    encodeHrTime: encodeAsLongBits,\n    encodeSpanContext: hexToBinary,\n    encodeOptionalSpanContext: optionalHexToBinary,\n};\nexport function getOtlpEncoder(options) {\n    if (options === undefined) {\n        return DEFAULT_ENCODER;\n    }\n    const useLongBits = options.useLongBits ?? true;\n    const useHex = options.useHex ?? false;\n    return {\n        encodeHrTime: useLongBits ? encodeAsLongBits : encodeTimestamp,\n        encodeSpanContext: useHex ? identity : hexToBinary,\n        encodeOptionalSpanContext: useHex ? identity : optionalHexToBinary,\n    };\n}\n//# sourceMappingURL=utils.js.map","export function createResource(resource) {\n    return {\n        attributes: toAttributes(resource.attributes),\n        droppedAttributesCount: 0,\n    };\n}\nexport function createInstrumentationScope(scope) {\n    return {\n        name: scope.name,\n        version: scope.version,\n    };\n}\nexport function toAttributes(attributes) {\n    return Object.keys(attributes).map(key => toKeyValue(key, attributes[key]));\n}\nexport function toKeyValue(key, value) {\n    return {\n        key: key,\n        value: toAnyValue(value),\n    };\n}\nexport function toAnyValue(value) {\n    const t = typeof value;\n    if (t === 'string')\n        return { stringValue: value };\n    if (t === 'number') {\n        if (!Number.isInteger(value))\n            return { doubleValue: value };\n        return { intValue: value };\n    }\n    if (t === 'boolean')\n        return { boolValue: value };\n    if (value instanceof Uint8Array)\n        return { bytesValue: value };\n    if (Array.isArray(value))\n        return { arrayValue: { values: value.map(toAnyValue) } };\n    if (t === 'object' && value != null)\n        return {\n            kvlistValue: {\n                values: Object.entries(value).map(([k, v]) => toKeyValue(k, v)),\n            },\n        };\n    return {};\n}\n//# sourceMappingURL=internal.js.map","import { createInstrumentationScope, createResource, toAttributes, } from '../common/internal';\nimport { getOtlpEncoder } from '../common/utils';\nexport function sdkSpanToOtlpSpan(span, encoder) {\n    const ctx = span.spanContext();\n    const status = span.status;\n    const parentSpanId = span.parentSpanContext?.spanId\n        ? encoder.encodeSpanContext(span.parentSpanContext?.spanId)\n        : undefined;\n    return {\n        traceId: encoder.encodeSpanContext(ctx.traceId),\n        spanId: encoder.encodeSpanContext(ctx.spanId),\n        parentSpanId: parentSpanId,\n        traceState: ctx.traceState?.serialize(),\n        name: span.name,\n        // Span kind is offset by 1 because the API does not define a value for unset\n        kind: span.kind == null ? 0 : span.kind + 1,\n        startTimeUnixNano: encoder.encodeHrTime(span.startTime),\n        endTimeUnixNano: encoder.encodeHrTime(span.endTime),\n        attributes: toAttributes(span.attributes),\n        droppedAttributesCount: span.droppedAttributesCount,\n        events: span.events.map(event => toOtlpSpanEvent(event, encoder)),\n        droppedEventsCount: span.droppedEventsCount,\n        status: {\n            // API and proto enums share the same values\n            code: status.code,\n            message: status.message,\n        },\n        links: span.links.map(link => toOtlpLink(link, encoder)),\n        droppedLinksCount: span.droppedLinksCount,\n    };\n}\nexport function toOtlpLink(link, encoder) {\n    return {\n        attributes: link.attributes ? toAttributes(link.attributes) : [],\n        spanId: encoder.encodeSpanContext(link.context.spanId),\n        traceId: encoder.encodeSpanContext(link.context.traceId),\n        traceState: link.context.traceState?.serialize(),\n        droppedAttributesCount: link.droppedAttributesCount || 0,\n    };\n}\nexport function toOtlpSpanEvent(timedEvent, encoder) {\n    return {\n        attributes: timedEvent.attributes\n            ? toAttributes(timedEvent.attributes)\n            : [],\n        name: timedEvent.name,\n        timeUnixNano: encoder.encodeHrTime(timedEvent.time),\n        droppedAttributesCount: timedEvent.droppedAttributesCount || 0,\n    };\n}\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createExportTraceServiceRequest(spans, options) {\n    const encoder = getOtlpEncoder(options);\n    return {\n        resourceSpans: spanRecordsToResourceSpans(spans, encoder),\n    };\n}\nfunction createResourceMap(readableSpans) {\n    const resourceMap = new Map();\n    for (const record of readableSpans) {\n        let ilsMap = resourceMap.get(record.resource);\n        if (!ilsMap) {\n            ilsMap = new Map();\n            resourceMap.set(record.resource, ilsMap);\n        }\n        // TODO this is duplicated in basic tracer. Consolidate on a common helper in core\n        const instrumentationScopeKey = `${record.instrumentationScope.name}@${record.instrumentationScope.version || ''}:${record.instrumentationScope.schemaUrl || ''}`;\n        let records = ilsMap.get(instrumentationScopeKey);\n        if (!records) {\n            records = [];\n            ilsMap.set(instrumentationScopeKey, records);\n        }\n        records.push(record);\n    }\n    return resourceMap;\n}\nfunction spanRecordsToResourceSpans(readableSpans, encoder) {\n    const resourceMap = createResourceMap(readableSpans);\n    const out = [];\n    const entryIterator = resourceMap.entries();\n    let entry = entryIterator.next();\n    while (!entry.done) {\n        const [resource, ilmMap] = entry.value;\n        const scopeResourceSpans = [];\n        const ilmIterator = ilmMap.values();\n        let ilmEntry = ilmIterator.next();\n        while (!ilmEntry.done) {\n            const scopeSpans = ilmEntry.value;\n            if (scopeSpans.length > 0) {\n                const spans = scopeSpans.map(readableSpan => sdkSpanToOtlpSpan(readableSpan, encoder));\n                scopeResourceSpans.push({\n                    scope: createInstrumentationScope(scopeSpans[0].instrumentationScope),\n                    spans: spans,\n                    schemaUrl: scopeSpans[0].instrumentationScope.schemaUrl,\n                });\n            }\n            ilmEntry = ilmIterator.next();\n        }\n        // TODO SDK types don't provide resource schema URL at this time\n        const transformedSpans = {\n            resource: createResource(resource),\n            scopeSpans: scopeResourceSpans,\n            schemaUrl: undefined,\n        };\n        out.push(transformedSpans);\n        entry = entryIterator.next();\n    }\n    return out;\n}\n//# sourceMappingURL=internal.js.map","import { createExportTraceServiceRequest } from '../internal';\nexport const JsonTraceSerializer = {\n    serializeRequest: (arg) => {\n        const request = createExportTraceServiceRequest(arg, {\n            useHex: true,\n            useLongBits: false,\n        });\n        const encoder = new TextEncoder();\n        return encoder.encode(JSON.stringify(request));\n    },\n    deserializeResponse: (arg) => {\n        const decoder = new TextDecoder();\n        return JSON.parse(decoder.decode(arg));\n    },\n};\n//# sourceMappingURL=trace.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst MAX_ATTEMPTS = 5;\nconst INITIAL_BACKOFF = 1000;\nconst MAX_BACKOFF = 5000;\nconst BACKOFF_MULTIPLIER = 1.5;\nconst JITTER = 0.2;\n/**\n * Get a pseudo-random jitter that falls in the range of [-JITTER, +JITTER]\n */\nfunction getJitter() {\n    return Math.random() * (2 * JITTER) - JITTER;\n}\nclass RetryingTransport {\n    _transport;\n    constructor(_transport) {\n        this._transport = _transport;\n    }\n    retry(data, timeoutMillis, inMillis) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                this._transport.send(data, timeoutMillis).then(resolve, reject);\n            }, inMillis);\n        });\n    }\n    async send(data, timeoutMillis) {\n        const deadline = Date.now() + timeoutMillis;\n        let result = await this._transport.send(data, timeoutMillis);\n        let attempts = MAX_ATTEMPTS;\n        let nextBackoff = INITIAL_BACKOFF;\n        while (result.status === 'retryable' && attempts > 0) {\n            attempts--;\n            // use maximum of computed backoff and 0 to avoid negative timeouts\n            const backoff = Math.max(Math.min(nextBackoff, MAX_BACKOFF) + getJitter(), 0);\n            nextBackoff = nextBackoff * BACKOFF_MULTIPLIER;\n            const retryInMillis = result.retryInMillis ?? backoff;\n            // return when expected retry time is after the export deadline.\n            const remainingTimeoutMillis = deadline - Date.now();\n            if (retryInMillis > remainingTimeoutMillis) {\n                return result;\n            }\n            result = await this.retry(data, remainingTimeoutMillis, retryInMillis);\n        }\n        return result;\n    }\n    shutdown() {\n        return this._transport.shutdown();\n    }\n}\n/**\n * Creates an Exporter Transport that retries on 'retryable' response.\n */\nexport function createRetryingTransport(options) {\n    return new RetryingTransport(options.transport);\n}\n//# sourceMappingURL=retrying-transport.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function isExportRetryable(statusCode) {\n    const retryCodes = [429, 502, 503, 504];\n    return retryCodes.includes(statusCode);\n}\nexport function parseRetryAfterToMills(retryAfter) {\n    if (retryAfter == null) {\n        return undefined;\n    }\n    const seconds = Number.parseInt(retryAfter, 10);\n    if (Number.isInteger(seconds)) {\n        return seconds > 0 ? seconds * 1000 : -1;\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#directives\n    const delay = new Date(retryAfter).getTime() - Date.now();\n    if (delay >= 0) {\n        return delay;\n    }\n    return 0;\n}\n//# sourceMappingURL=is-export-retryable.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { isExportRetryable, parseRetryAfterToMills, } from '../is-export-retryable';\nclass XhrTransport {\n    _parameters;\n    constructor(_parameters) {\n        this._parameters = _parameters;\n    }\n    send(data, timeoutMillis) {\n        return new Promise(resolve => {\n            const xhr = new XMLHttpRequest();\n            xhr.timeout = timeoutMillis;\n            xhr.open('POST', this._parameters.url);\n            const headers = this._parameters.headers();\n            Object.entries(headers).forEach(([k, v]) => {\n                xhr.setRequestHeader(k, v);\n            });\n            xhr.ontimeout = _ => {\n                resolve({\n                    status: 'failure',\n                    error: new Error('XHR request timed out'),\n                });\n            };\n            xhr.onreadystatechange = () => {\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    diag.debug('XHR success');\n                    resolve({\n                        status: 'success',\n                    });\n                }\n                else if (xhr.status && isExportRetryable(xhr.status)) {\n                    resolve({\n                        status: 'retryable',\n                        retryInMillis: parseRetryAfterToMills(xhr.getResponseHeader('Retry-After')),\n                    });\n                }\n                else if (xhr.status !== 0) {\n                    resolve({\n                        status: 'failure',\n                        error: new Error('XHR request failed with non-retryable status'),\n                    });\n                }\n            };\n            xhr.onabort = () => {\n                resolve({\n                    status: 'failure',\n                    error: new Error('XHR request aborted'),\n                });\n            };\n            xhr.onerror = () => {\n                resolve({\n                    status: 'failure',\n                    error: new Error('XHR request errored'),\n                });\n            };\n            xhr.send(data);\n        });\n    }\n    shutdown() {\n        // Intentionally left empty, nothing to do.\n    }\n}\n/**\n * Creates an exporter transport that uses XHR to send the data\n * @param parameters applied to each request made by transport\n */\nexport function createXhrTransport(parameters) {\n    return new XhrTransport(parameters);\n}\n//# sourceMappingURL=xhr-transport.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nclass SendBeaconTransport {\n    _params;\n    constructor(_params) {\n        this._params = _params;\n    }\n    send(data) {\n        return new Promise(resolve => {\n            if (navigator.sendBeacon(this._params.url, new Blob([data], { type: this._params.blobType }))) {\n                // no way to signal retry, treat everything as success\n                diag.debug('SendBeacon success');\n                resolve({\n                    status: 'success',\n                });\n            }\n            else {\n                resolve({\n                    status: 'failure',\n                    error: new Error('SendBeacon failed'),\n                });\n            }\n        });\n    }\n    shutdown() {\n        // Intentionally left empty, nothing to do.\n    }\n}\nexport function createSendBeaconTransport(parameters) {\n    return new SendBeaconTransport(parameters);\n}\n//# sourceMappingURL=send-beacon-transport.js.map","import { createRetryingTransport } from './retrying-transport';\nimport { createXhrTransport } from './transport/xhr-transport';\nimport { createSendBeaconTransport } from './transport/send-beacon-transport';\nimport { createOtlpNetworkExportDelegate } from './otlp-network-export-delegate';\nexport function createOtlpXhrExportDelegate(options, serializer) {\n    return createOtlpNetworkExportDelegate(options, serializer, createRetryingTransport({\n        transport: createXhrTransport(options),\n    }));\n}\nexport function createOtlpSendBeaconExportDelegate(options, serializer) {\n    return createOtlpNetworkExportDelegate(options, serializer, createRetryingTransport({\n        transport: createSendBeaconTransport({\n            url: options.url,\n            blobType: options.headers()['Content-Type'],\n        }),\n    }));\n}\n//# sourceMappingURL=otlp-browser-http-export-delegate.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\n/**\n * Parses headers from config leaving only those that have defined values\n * @param partialHeaders\n */\nexport function validateAndNormalizeHeaders(partialHeaders) {\n    return () => {\n        const headers = {};\n        Object.entries(partialHeaders?.() ?? {}).forEach(([key, value]) => {\n            if (typeof value !== 'undefined') {\n                headers[key] = String(value);\n            }\n            else {\n                diag.warn(`Header \"${key}\" has invalid value (${value}) and will be ignored`);\n            }\n        });\n        return headers;\n    };\n}\n//# sourceMappingURL=util.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getSharedConfigurationDefaults, mergeOtlpSharedConfigurationWithDefaults, } from './shared-configuration';\nimport { validateAndNormalizeHeaders } from '../util';\nfunction mergeHeaders(userProvidedHeaders, fallbackHeaders, defaultHeaders) {\n    const requiredHeaders = {\n        ...defaultHeaders(),\n    };\n    const headers = {};\n    return () => {\n        // add fallback ones first\n        if (fallbackHeaders != null) {\n            Object.assign(headers, fallbackHeaders());\n        }\n        // override with user-provided ones\n        if (userProvidedHeaders != null) {\n            Object.assign(headers, userProvidedHeaders());\n        }\n        // override required ones.\n        return Object.assign(headers, requiredHeaders);\n    };\n}\nfunction validateUserProvidedUrl(url) {\n    if (url == null) {\n        return undefined;\n    }\n    try {\n        new URL(url);\n        return url;\n    }\n    catch (e) {\n        throw new Error(`Configuration: Could not parse user-provided export URL: '${url}'`);\n    }\n}\n/**\n * @param userProvidedConfiguration  Configuration options provided by the user in code.\n * @param fallbackConfiguration Fallback to use when the {@link userProvidedConfiguration} does not specify an option.\n * @param defaultConfiguration The defaults as defined by the exporter specification\n */\nexport function mergeOtlpHttpConfigurationWithDefaults(userProvidedConfiguration, fallbackConfiguration, defaultConfiguration) {\n    return {\n        ...mergeOtlpSharedConfigurationWithDefaults(userProvidedConfiguration, fallbackConfiguration, defaultConfiguration),\n        headers: mergeHeaders(validateAndNormalizeHeaders(userProvidedConfiguration.headers), fallbackConfiguration.headers, defaultConfiguration.headers),\n        url: validateUserProvidedUrl(userProvidedConfiguration.url) ??\n            fallbackConfiguration.url ??\n            defaultConfiguration.url,\n        agentOptions: userProvidedConfiguration.agentOptions ??\n            fallbackConfiguration.agentOptions ??\n            defaultConfiguration.agentOptions,\n    };\n}\nexport function getHttpConfigurationDefaults(requiredHeaders, signalResourcePath) {\n    return {\n        ...getSharedConfigurationDefaults(),\n        headers: () => requiredHeaders,\n        url: 'http://localhost:4318/' + signalResourcePath,\n        agentOptions: { keepAlive: true },\n    };\n}\n//# sourceMappingURL=otlp-http-configuration.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getHttpConfigurationDefaults, mergeOtlpHttpConfigurationWithDefaults, } from './otlp-http-configuration';\nimport { wrapStaticHeadersInFunction } from './shared-configuration';\n/**\n * @deprecated this will be removed in 2.0\n *\n * @param config\n * @param signalResourcePath\n * @param requiredHeaders\n */\nexport function convertLegacyBrowserHttpOptions(config, signalResourcePath, requiredHeaders) {\n    return mergeOtlpHttpConfigurationWithDefaults({\n        url: config.url,\n        timeoutMillis: config.timeoutMillis,\n        headers: wrapStaticHeadersInFunction(config.headers),\n        concurrencyLimit: config.concurrencyLimit,\n    }, {}, // no fallback for browser case\n    getHttpConfigurationDefaults(requiredHeaders, signalResourcePath));\n}\n//# sourceMappingURL=convert-legacy-browser-http-options.js.map","import { createOtlpSendBeaconExportDelegate, createOtlpXhrExportDelegate, } from '../otlp-browser-http-export-delegate';\nimport { convertLegacyBrowserHttpOptions } from './convert-legacy-browser-http-options';\n/**\n * @deprecated\n * @param config\n * @param serializer\n * @param signalResourcePath\n * @param requiredHeaders\n */\nexport function createLegacyOtlpBrowserExportDelegate(config, serializer, signalResourcePath, requiredHeaders) {\n    const useXhr = !!config.headers || typeof navigator.sendBeacon !== 'function';\n    const options = convertLegacyBrowserHttpOptions(config, signalResourcePath, requiredHeaders);\n    if (useXhr) {\n        return createOtlpXhrExportDelegate(options, serializer);\n    }\n    else {\n        return createOtlpSendBeaconExportDelegate(options, serializer);\n    }\n}\n//# sourceMappingURL=create-legacy-browser-delegate.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OTLPExporterBase, } from '@opentelemetry/otlp-exporter-base';\nimport { JsonTraceSerializer } from '@opentelemetry/otlp-transformer';\nimport { createLegacyOtlpBrowserExportDelegate } from '@opentelemetry/otlp-exporter-base/browser-http';\n/**\n * Collector Trace Exporter for Web\n */\nexport class OTLPTraceExporter extends OTLPExporterBase {\n    constructor(config = {}) {\n        super(createLegacyOtlpBrowserExportDelegate(config, JsonTraceSerializer, 'v1/traces', { 'Content-Type': 'application/json' }));\n    }\n}\n//# sourceMappingURL=OTLPTraceExporter.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates/registry/stable/attributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n/**\n * Uniquely identifies the framework API revision offered by a version (`os.version`) of the android operating system. More information can be found [here](https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels).\n *\n * @example 33\n * @example 32\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ANDROID_OS_API_LEVEL = 'android.os.api_level';\n/**\n * Deprecated use the `device.app.lifecycle` event definition including `android.state` as a payload field instead.\n *\n * @note The Android lifecycle states are defined in [Activity lifecycle callbacks](https://developer.android.com/guide/components/activities/activity-lifecycle#lc), and from which the `OS identifiers` are derived.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `device.app.lifecycle`.\n */\nexport var ATTR_ANDROID_STATE = 'android.state';\n/**\n  * Enum value \"background\" for attribute {@link ATTR_ANDROID_STATE}.\n  */\nexport var ANDROID_STATE_VALUE_BACKGROUND = \"background\";\n/**\n  * Enum value \"created\" for attribute {@link ATTR_ANDROID_STATE}.\n  */\nexport var ANDROID_STATE_VALUE_CREATED = \"created\";\n/**\n  * Enum value \"foreground\" for attribute {@link ATTR_ANDROID_STATE}.\n  */\nexport var ANDROID_STATE_VALUE_FOREGROUND = \"foreground\";\n/**\n * The provenance filename of the built attestation which directly relates to the build artifact filename. This filename **SHOULD** accompany the artifact at publish time. See the [SLSA Relationship](https://slsa.dev/spec/v1.0/distributing-provenance#relationship-between-artifacts-and-attestations) specification for more information.\n *\n * @example golang-binary-amd64-v0.1.0.attestation\n * @example docker-image-amd64-v0.1.0.intoto.json1\n * @example release-1.tar.gz.attestation\n * @example file-name-package.tar.gz.intoto.json1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ARTIFACT_ATTESTATION_FILENAME = 'artifact.attestation.filename';\n/**\n * The full [hash value (see glossary)](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf), of the built attestation. Some envelopes in the [software attestation space](https://github.com/in-toto/attestation/tree/main/spec) also refer to this as the **digest**.\n *\n * @example 1b31dfcd5b7f9267bf2ff47651df1cfb9147b9e4df1f335accf65b4cda498408\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ARTIFACT_ATTESTATION_HASH = 'artifact.attestation.hash';\n/**\n * The id of the build [software attestation](https://slsa.dev/attestation-model).\n *\n * @example 123\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ARTIFACT_ATTESTATION_ID = 'artifact.attestation.id';\n/**\n * The human readable file name of the artifact, typically generated during build and release processes. Often includes the package name and version in the file name.\n *\n * @example golang-binary-amd64-v0.1.0\n * @example docker-image-amd64-v0.1.0\n * @example release-1.tar.gz\n * @example file-name-package.tar.gz\n *\n * @note This file name can also act as the [Package Name](https://slsa.dev/spec/v1.0/terminology#package-model)\n * in cases where the package ecosystem maps accordingly.\n * Additionally, the artifact [can be published](https://slsa.dev/spec/v1.0/terminology#software-supply-chain)\n * for others, but that is not a guarantee.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ARTIFACT_FILENAME = 'artifact.filename';\n/**\n * The full [hash value (see glossary)](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf), often found in checksum.txt on a release of the artifact and used to verify package integrity.\n *\n * @example 9ff4c52759e2c4ac70b7d517bc7fcdc1cda631ca0045271ddd1b192544f8a3e9\n *\n * @note The specific algorithm used to create the cryptographic hash value is\n * not defined. In situations where an artifact has multiple\n * cryptographic hashes, it is up to the implementer to choose which\n * hash value to set here; this should be the most secure hash algorithm\n * that is suitable for the situation and consistent with the\n * corresponding attestation. The implementer can then provide the other\n * hash values through an additional set of attribute extensions as they\n * deem necessary.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ARTIFACT_HASH = 'artifact.hash';\n/**\n * The [Package URL](https://github.com/package-url/purl-spec) of the [package artifact](https://slsa.dev/spec/v1.0/terminology#package-model) provides a standard way to identify and locate the packaged artifact.\n *\n * @example pkg:github/package-url/purl-spec@1209109710924\n * @example pkg:npm/foo@12.12.3\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ARTIFACT_PURL = 'artifact.purl';\n/**\n * The version of the artifact.\n *\n * @example v0.1.0\n * @example 1.2.1\n * @example 122691-build\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ARTIFACT_VERSION = 'artifact.version';\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @example [\"{ \"AttributeName\": \"string\", \"AttributeType\": \"string\" }\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = 'aws.dynamodb.attribute_definitions';\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @example [\"lives\", \"id\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @example [\"{ \"CapacityUnits\": number, \"GlobalSecondaryIndexes\": { \"string\" : { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }, \"LocalSecondaryIndexes\": { \"string\" : { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }, \"ReadCapacityUnits\": number, \"Table\": { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number }, \"TableName\": \"string\", \"WriteCapacityUnits\": number }\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\n/**\n * The value of the `Count` response parameter.\n *\n * @example 10\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @example Users\n * @example CatsTable\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = 'aws.dynamodb.exclusive_start_table';\n/**\n * The JSON-serialized value of each item in the `GlobalSecondaryIndexUpdates` request field.\n *\n * @example [\"{ \"Create\": { \"IndexName\": \"string\", \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" }, \"ProvisionedThroughput\": { \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = 'aws.dynamodb.global_secondary_index_updates';\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field\n *\n * @example [\"{ \"IndexName\": \"string\", \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" }, \"ProvisionedThroughput\": { \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = 'aws.dynamodb.global_secondary_indexes';\n/**\n * The value of the `IndexName` request parameter.\n *\n * @example name_to_group\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @example { \"string\" : [ { \"ItemCollectionKey\": { \"string\" : { \"B\": blob, \"BOOL\": boolean, \"BS\": [ blob ], \"L\": [ \"AttributeValue\" ], \"M\": { \"string\" : \"AttributeValue\" }, \"N\": \"string\", \"NS\": [ \"string\" ], \"NULL\": boolean, \"S\": \"string\", \"SS\": [ \"string\" ] } }, \"SizeEstimateRangeGB\": [ number ] } ] }\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = 'aws.dynamodb.item_collection_metrics';\n/**\n * The value of the `Limit` request parameter.\n *\n * @example 10\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @example [\"{ \"IndexArn\": \"string\", \"IndexName\": \"string\", \"IndexSizeBytes\": number, \"ItemCount\": number, \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" } }\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = 'aws.dynamodb.local_secondary_indexes';\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @example Title\n * @example Title, Price, Color\n * @example Title, Description, RelatedItems, ProductReviews\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @example 1.0\n * @example 2.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = 'aws.dynamodb.provisioned_read_capacity';\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @example 1.0\n * @example 2.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = 'aws.dynamodb.provisioned_write_capacity';\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @example 50\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\n/**\n * The value of the `Segment` request parameter.\n *\n * @example 10\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\n/**\n * The value of the `Select` request parameter.\n *\n * @example ALL_ATTRIBUTES\n * @example COUNT\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\n/**\n * The number of items in the `TableNames` response parameter.\n *\n * @example 20\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\n/**\n * The keys in the `RequestItems` object field.\n *\n * @example [\"Users\", \"Cats\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @example 100\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @example arn:aws:ecs:us-west-2:123456789123:cluster/my-cluster\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @example arn:aws:ecs:us-west-1:123456789123:container/32624152-9086-4f0e-acae-1a75b14fe4d9\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\n/**\n  * Enum value \"ec2\" for attribute {@link ATTR_AWS_ECS_LAUNCHTYPE}.\n  */\nexport var AWS_ECS_LAUNCHTYPE_VALUE_EC2 = \"ec2\";\n/**\n  * Enum value \"fargate\" for attribute {@link ATTR_AWS_ECS_LAUNCHTYPE}.\n  */\nexport var AWS_ECS_LAUNCHTYPE_VALUE_FARGATE = \"fargate\";\n/**\n * The ARN of a running [ECS task](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids).\n *\n * @example arn:aws:ecs:us-west-1:123456789123:task/10838bed-421f-43ef-870a-f43feacbbb5b\n * @example arn:aws:ecs:us-west-1:123456789123:task/my-cluster/task-id/23ebb8ac-c18f-46c6-8bbe-d55d0e37cfbd\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\n/**\n * The family name of the [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html) used to create the ECS task.\n *\n * @example opentelemetry-family\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\n/**\n * The ID of a running ECS task. The ID **MUST** be extracted from `task.arn`.\n *\n * @example 10838bed-421f-43ef-870a-f43feacbbb5b\n * @example 23ebb8ac-c18f-46c6-8bbe-d55d0e37cfbd\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_ECS_TASK_ID = 'aws.ecs.task.id';\n/**\n * The revision for the task definition used to create the ECS task.\n *\n * @example 8\n * @example 26\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\n/**\n * The ARN of an EKS cluster.\n *\n * @example arn:aws:ecs:us-west-2:123456789123:cluster/my-cluster\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\n/**\n * The AWS extended request ID as returned in the response header `x-amz-id-2`.\n *\n * @example wzHcyEWfmOGDIE5QOhTAqFDoDWP3y8IUvpNINCwL9N4TEHbUw0/gZJ+VZTmCNCWR7fezEN3eCiQ=\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_EXTENDED_REQUEST_ID = 'aws.extended_request_id';\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * @example arn:aws:lambda:us-east-1:123456:function:myfunction:myalias\n *\n * @note This may be different from `cloud.resource_id` if an alias is involved.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * @example [\"arn:aws:logs:us-west-1:123456789012:log-group:/aws/my/group:*\"]\n *\n * @note See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * @example [\"/aws/lambda/my-function\", \"opentelemetry-service\"]\n *\n * @note Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * @example [\"arn:aws:logs:us-west-1:123456789012:log-group:/aws/my/group:log-stream:logs/main/10838bed-421f-43ef-870a-f43feacbbb5b\"]\n *\n * @note See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @example [\"logs/main/10838bed-421f-43ef-870a-f43feacbbb5b\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\n/**\n * The AWS request ID as returned in the response headers `x-amzn-requestid`, `x-amzn-request-id` or `x-amz-request-id`.\n *\n * @example 79b9da39-b7ae-508a-a6bc-864b2829c622\n * @example C9ER4AJX75574TDJ\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_REQUEST_ID = 'aws.request_id';\n/**\n * The S3 bucket name the request refers to. Corresponds to the `--bucket` parameter of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) operations.\n *\n * @example some-bucket-name\n *\n * @note The `bucket` attribute is applicable to all S3 operations that reference a bucket, i.e. that require the bucket name as a mandatory parameter.\n * This applies to almost all S3 operations except `list-buckets`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_S3_BUCKET = 'aws.s3.bucket';\n/**\n * The source object (in the form `bucket`/`key`) for the copy operation.\n *\n * @example someFile.yml\n *\n * @note The `copy_source` attribute applies to S3 copy operations and corresponds to the `--copy-source` parameter\n * of the [copy-object operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html).\n * This applies in particular to the following operations:\n *\n *   - [copy-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html)\n *   - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_S3_COPY_SOURCE = 'aws.s3.copy_source';\n/**\n * The delete request container that specifies the objects to be deleted.\n *\n * @example Objects=[{Key=string,VersionId=string},{Key=string,VersionId=string}],Quiet=boolean\n *\n * @note The `delete` attribute is only applicable to the [delete-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-object.html) operation.\n * The `delete` attribute corresponds to the `--delete` parameter of the\n * [delete-objects operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-objects.html).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_S3_DELETE = 'aws.s3.delete';\n/**\n * The S3 object key the request refers to. Corresponds to the `--key` parameter of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) operations.\n *\n * @example someFile.yml\n *\n * @note The `key` attribute is applicable to all object-related S3 operations, i.e. that require the object key as a mandatory parameter.\n * This applies in particular to the following operations:\n *\n *   - [copy-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html)\n *   - [delete-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-object.html)\n *   - [get-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/get-object.html)\n *   - [head-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/head-object.html)\n *   - [put-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/put-object.html)\n *   - [restore-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/restore-object.html)\n *   - [select-object-content](https://docs.aws.amazon.com/cli/latest/reference/s3api/select-object-content.html)\n *   - [abort-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/abort-multipart-upload.html)\n *   - [complete-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/complete-multipart-upload.html)\n *   - [create-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/create-multipart-upload.html)\n *   - [list-parts](https://docs.aws.amazon.com/cli/latest/reference/s3api/list-parts.html)\n *   - [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)\n *   - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_S3_KEY = 'aws.s3.key';\n/**\n * The part number of the part being uploaded in a multipart-upload operation. This is a positive integer between 1 and 10,000.\n *\n * @example 3456\n *\n * @note The `part_number` attribute is only applicable to the [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)\n * and [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html) operations.\n * The `part_number` attribute corresponds to the `--part-number` parameter of the\n * [upload-part operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_S3_PART_NUMBER = 'aws.s3.part_number';\n/**\n * Upload ID that identifies the multipart upload.\n *\n * @example dfRtDYWFbkRONycy.Yxwh66Yjlx.cph0gtNBtJ\n *\n * @note The `upload_id` attribute applies to S3 multipart-upload operations and corresponds to the `--upload-id` parameter\n * of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) multipart operations.\n * This applies in particular to the following operations:\n *\n *   - [abort-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/abort-multipart-upload.html)\n *   - [complete-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/complete-multipart-upload.html)\n *   - [list-parts](https://docs.aws.amazon.com/cli/latest/reference/s3api/list-parts.html)\n *   - [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)\n *   - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AWS_S3_UPLOAD_ID = 'aws.s3.upload_id';\n/**\n * [Azure Resource Provider Namespace](https://learn.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers) as recognized by the client.\n *\n * @example Microsoft.Storage\n * @example Microsoft.KeyVault\n * @example Microsoft.ServiceBus\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZ_NAMESPACE = 'az.namespace';\n/**\n * The unique identifier of the service request. It's generated by the Azure service and returned with the response.\n *\n * @example 00000000-0000-0000-0000-000000000000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZ_SERVICE_REQUEST_ID = 'az.service_request_id';\n/**\n * The unique identifier of the client instance.\n *\n * @example 3ba4827d-4422-483f-b59f-85b74211c11d\n * @example storage-client-1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZURE_CLIENT_ID = 'azure.client.id';\n/**\n * Cosmos client connection mode.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZURE_COSMOSDB_CONNECTION_MODE = 'azure.cosmosdb.connection.mode';\n/**\n  * Enum value \"direct\" for attribute {@link ATTR_AZURE_COSMOSDB_CONNECTION_MODE}.\n  */\nexport var AZURE_COSMOSDB_CONNECTION_MODE_VALUE_DIRECT = \"direct\";\n/**\n  * Enum value \"gateway\" for attribute {@link ATTR_AZURE_COSMOSDB_CONNECTION_MODE}.\n  */\nexport var AZURE_COSMOSDB_CONNECTION_MODE_VALUE_GATEWAY = \"gateway\";\n/**\n * Account or request [consistency level](https://learn.microsoft.com/azure/cosmos-db/consistency-levels).\n *\n * @example Eventual\n * @example ConsistentPrefix\n * @example BoundedStaleness\n * @example Strong\n * @example Session\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZURE_COSMOSDB_CONSISTENCY_LEVEL = 'azure.cosmosdb.consistency.level';\n/**\n  * Enum value \"BoundedStaleness\" for attribute {@link ATTR_AZURE_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var AZURE_COSMOSDB_CONSISTENCY_LEVEL_VALUE_BOUNDED_STALENESS = \"BoundedStaleness\";\n/**\n  * Enum value \"ConsistentPrefix\" for attribute {@link ATTR_AZURE_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var AZURE_COSMOSDB_CONSISTENCY_LEVEL_VALUE_CONSISTENT_PREFIX = \"ConsistentPrefix\";\n/**\n  * Enum value \"Eventual\" for attribute {@link ATTR_AZURE_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var AZURE_COSMOSDB_CONSISTENCY_LEVEL_VALUE_EVENTUAL = \"Eventual\";\n/**\n  * Enum value \"Session\" for attribute {@link ATTR_AZURE_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var AZURE_COSMOSDB_CONSISTENCY_LEVEL_VALUE_SESSION = \"Session\";\n/**\n  * Enum value \"Strong\" for attribute {@link ATTR_AZURE_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var AZURE_COSMOSDB_CONSISTENCY_LEVEL_VALUE_STRONG = \"Strong\";\n/**\n * List of regions contacted during operation in the order that they were contacted. If there is more than one region listed, it indicates that the operation was performed on multiple regions i.e. cross-regional call.\n *\n * @example [\"North Central US\", \"Australia East\", \"Australia Southeast\"]\n *\n * @note Region name matches the format of `displayName` in [Azure Location API](https://learn.microsoft.com/rest/api/subscription/subscriptions/list-locations?view=rest-subscription-2021-10-01&tabs=HTTP#location)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZURE_COSMOSDB_OPERATION_CONTACTED_REGIONS = 'azure.cosmosdb.operation.contacted_regions';\n/**\n * The number of request units consumed by the operation.\n *\n * @example 46.18\n * @example 1.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZURE_COSMOSDB_OPERATION_REQUEST_CHARGE = 'azure.cosmosdb.operation.request_charge';\n/**\n * Request payload size in bytes.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZURE_COSMOSDB_REQUEST_BODY_SIZE = 'azure.cosmosdb.request.body.size';\n/**\n * Cosmos DB sub status code.\n *\n * @example 1000\n * @example 1002\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_AZURE_COSMOSDB_RESPONSE_SUB_STATUS_CODE = 'azure.cosmosdb.response.sub_status_code';\n/**\n * Array of brand name and version separated by a space\n *\n * @example [\" Not A;Brand 99\", \"Chromium 99\", \"Chrome 99\"]\n *\n * @note This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.brands`).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_BROWSER_BRANDS = 'browser.brands';\n/**\n * Preferred language of the user using the browser\n *\n * @example en\n * @example en-US\n * @example fr\n * @example fr-FR\n *\n * @note This value is intended to be taken from the Navigator API `navigator.language`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_BROWSER_LANGUAGE = 'browser.language';\n/**\n * A boolean that is true if the browser is running on a mobile device\n *\n * @note This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.mobile`). If unavailable, this attribute **SHOULD** be left unset.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_BROWSER_MOBILE = 'browser.mobile';\n/**\n * The platform on which the browser is running\n *\n * @example Windows\n * @example macOS\n * @example Android\n *\n * @note This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.platform`). If unavailable, the legacy `navigator.platform` API **SHOULD NOT** be used instead and this attribute **SHOULD** be left unset in order for the values to be consistent.\n * The list of possible values is defined in the [W3C User-Agent Client Hints specification](https://wicg.github.io/ua-client-hints/#sec-ch-ua-platform). Note that some (but not all) of these values can overlap with values in the [`os.type` and `os.name` attributes](./os.md). However, for consistency, the values in the `browser.platform` attribute should capture the exact value that the user agent provides.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_BROWSER_PLATFORM = 'browser.platform';\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CASSANDRA_CONSISTENCY_LEVEL = 'cassandra.consistency.level';\n/**\n  * Enum value \"all\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL = \"all\";\n/**\n  * Enum value \"any\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY = \"any\";\n/**\n  * Enum value \"each_quorum\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM = \"each_quorum\";\n/**\n  * Enum value \"local_one\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE = \"local_one\";\n/**\n  * Enum value \"local_quorum\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM = \"local_quorum\";\n/**\n  * Enum value \"local_serial\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL = \"local_serial\";\n/**\n  * Enum value \"one\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE = \"one\";\n/**\n  * Enum value \"quorum\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM = \"quorum\";\n/**\n  * Enum value \"serial\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL = \"serial\";\n/**\n  * Enum value \"three\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE = \"three\";\n/**\n  * Enum value \"two\" for attribute {@link ATTR_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO = \"two\";\n/**\n * The data center of the coordinating node for a query.\n *\n * @example \"us-west-2\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CASSANDRA_COORDINATOR_DC = 'cassandra.coordinator.dc';\n/**\n * The ID of the coordinating node for a query.\n *\n * @example \"be13faa2-8574-4d71-926d-27f16cf8a7af\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CASSANDRA_COORDINATOR_ID = 'cassandra.coordinator.id';\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @example 5000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CASSANDRA_PAGE_SIZE = 'cassandra.page.size';\n/**\n * Whether or not the query is idempotent.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CASSANDRA_QUERY_IDEMPOTENT = 'cassandra.query.idempotent';\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @example 0\n * @example 2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = 'cassandra.speculative_execution.count';\n/**\n * The human readable name of the pipeline within a CI/CD system.\n *\n * @example Build and Test\n * @example Lint\n * @example Deploy Go Project\n * @example deploy_to_environment\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_PIPELINE_NAME = 'cicd.pipeline.name';\n/**\n * The result of a pipeline run.\n *\n * @example success\n * @example failure\n * @example timeout\n * @example skipped\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_PIPELINE_RESULT = 'cicd.pipeline.result';\n/**\n  * Enum value \"cancellation\" for attribute {@link ATTR_CICD_PIPELINE_RESULT}.\n  */\nexport var CICD_PIPELINE_RESULT_VALUE_CANCELLATION = \"cancellation\";\n/**\n  * Enum value \"error\" for attribute {@link ATTR_CICD_PIPELINE_RESULT}.\n  */\nexport var CICD_PIPELINE_RESULT_VALUE_ERROR = \"error\";\n/**\n  * Enum value \"failure\" for attribute {@link ATTR_CICD_PIPELINE_RESULT}.\n  */\nexport var CICD_PIPELINE_RESULT_VALUE_FAILURE = \"failure\";\n/**\n  * Enum value \"skip\" for attribute {@link ATTR_CICD_PIPELINE_RESULT}.\n  */\nexport var CICD_PIPELINE_RESULT_VALUE_SKIP = \"skip\";\n/**\n  * Enum value \"success\" for attribute {@link ATTR_CICD_PIPELINE_RESULT}.\n  */\nexport var CICD_PIPELINE_RESULT_VALUE_SUCCESS = \"success\";\n/**\n  * Enum value \"timeout\" for attribute {@link ATTR_CICD_PIPELINE_RESULT}.\n  */\nexport var CICD_PIPELINE_RESULT_VALUE_TIMEOUT = \"timeout\";\n/**\n * The unique identifier of a pipeline run within a CI/CD system.\n *\n * @example 120912\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_PIPELINE_RUN_ID = 'cicd.pipeline.run.id';\n/**\n * The pipeline run goes through these states during its lifecycle.\n *\n * @example pending\n * @example executing\n * @example finalizing\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_PIPELINE_RUN_STATE = 'cicd.pipeline.run.state';\n/**\n  * Enum value \"executing\" for attribute {@link ATTR_CICD_PIPELINE_RUN_STATE}.\n  */\nexport var CICD_PIPELINE_RUN_STATE_VALUE_EXECUTING = \"executing\";\n/**\n  * Enum value \"finalizing\" for attribute {@link ATTR_CICD_PIPELINE_RUN_STATE}.\n  */\nexport var CICD_PIPELINE_RUN_STATE_VALUE_FINALIZING = \"finalizing\";\n/**\n  * Enum value \"pending\" for attribute {@link ATTR_CICD_PIPELINE_RUN_STATE}.\n  */\nexport var CICD_PIPELINE_RUN_STATE_VALUE_PENDING = \"pending\";\n/**\n * The human readable name of a task within a pipeline. Task here most closely aligns with a [computing process](https://wikipedia.org/wiki/Pipeline_(computing)) in a pipeline. Other terms for tasks include commands, steps, and procedures.\n *\n * @example Run GoLang Linter\n * @example Go Build\n * @example go-test\n * @example deploy_binary\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_PIPELINE_TASK_NAME = 'cicd.pipeline.task.name';\n/**\n * The unique identifier of a task run within a pipeline.\n *\n * @example 12097\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_PIPELINE_TASK_RUN_ID = 'cicd.pipeline.task.run.id';\n/**\n * The [URL](https://wikipedia.org/wiki/URL) of the pipeline run providing the complete address in order to locate and identify the pipeline run.\n *\n * @example https://github.com/open-telemetry/semantic-conventions/actions/runs/9753949763/job/26920038674?pr=1075\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_PIPELINE_TASK_RUN_URL_FULL = 'cicd.pipeline.task.run.url.full';\n/**\n * The type of the task within a pipeline.\n *\n * @example build\n * @example test\n * @example deploy\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_PIPELINE_TASK_TYPE = 'cicd.pipeline.task.type';\n/**\n  * Enum value \"build\" for attribute {@link ATTR_CICD_PIPELINE_TASK_TYPE}.\n  */\nexport var CICD_PIPELINE_TASK_TYPE_VALUE_BUILD = \"build\";\n/**\n  * Enum value \"deploy\" for attribute {@link ATTR_CICD_PIPELINE_TASK_TYPE}.\n  */\nexport var CICD_PIPELINE_TASK_TYPE_VALUE_DEPLOY = \"deploy\";\n/**\n  * Enum value \"test\" for attribute {@link ATTR_CICD_PIPELINE_TASK_TYPE}.\n  */\nexport var CICD_PIPELINE_TASK_TYPE_VALUE_TEST = \"test\";\n/**\n * The name of a component of the CICD system.\n *\n * @example controller\n * @example scheduler\n * @example agent\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_SYSTEM_COMPONENT = 'cicd.system.component';\n/**\n * The state of a CICD worker / agent.\n *\n * @example idle\n * @example busy\n * @example down\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CICD_WORKER_STATE = 'cicd.worker.state';\n/**\n  * Enum value \"available\" for attribute {@link ATTR_CICD_WORKER_STATE}.\n  */\nexport var CICD_WORKER_STATE_VALUE_AVAILABLE = \"available\";\n/**\n  * Enum value \"busy\" for attribute {@link ATTR_CICD_WORKER_STATE}.\n  */\nexport var CICD_WORKER_STATE_VALUE_BUSY = \"busy\";\n/**\n  * Enum value \"offline\" for attribute {@link ATTR_CICD_WORKER_STATE}.\n  */\nexport var CICD_WORKER_STATE_VALUE_OFFLINE = \"offline\";\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @example 111111111111\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUD_ACCOUNT_ID = 'cloud.account.id';\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * @example us-east-1c\n *\n * @note Availability zones are called \"zones\" on Alibaba Cloud and Google Cloud.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\n/**\n * The cloud platform in use.\n *\n * @note The prefix of the service **SHOULD** match the one specified in `cloud.provider`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUD_PLATFORM = 'cloud.platform';\n/**\n  * Enum value \"alibaba_cloud_ecs\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS = \"alibaba_cloud_ecs\";\n/**\n  * Enum value \"alibaba_cloud_fc\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC = \"alibaba_cloud_fc\";\n/**\n  * Enum value \"alibaba_cloud_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_OPENSHIFT = \"alibaba_cloud_openshift\";\n/**\n  * Enum value \"aws_app_runner\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AWS_APP_RUNNER = \"aws_app_runner\";\n/**\n  * Enum value \"aws_ec2\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AWS_EC2 = \"aws_ec2\";\n/**\n  * Enum value \"aws_ecs\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AWS_ECS = \"aws_ecs\";\n/**\n  * Enum value \"aws_eks\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AWS_EKS = \"aws_eks\";\n/**\n  * Enum value \"aws_elastic_beanstalk\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK = \"aws_elastic_beanstalk\";\n/**\n  * Enum value \"aws_lambda\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AWS_LAMBDA = \"aws_lambda\";\n/**\n  * Enum value \"aws_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AWS_OPENSHIFT = \"aws_openshift\";\n/**\n  * Enum value \"azure_aks\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AZURE_AKS = \"azure_aks\";\n/**\n  * Enum value \"azure_app_service\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE = \"azure_app_service\";\n/**\n  * Enum value \"azure_container_apps\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_APPS = \"azure_container_apps\";\n/**\n  * Enum value \"azure_container_instances\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES = \"azure_container_instances\";\n/**\n  * Enum value \"azure_functions\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS = \"azure_functions\";\n/**\n  * Enum value \"azure_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AZURE_OPENSHIFT = \"azure_openshift\";\n/**\n  * Enum value \"azure_vm\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_AZURE_VM = \"azure_vm\";\n/**\n  * Enum value \"gcp_app_engine\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE = \"gcp_app_engine\";\n/**\n  * Enum value \"gcp_bare_metal_solution\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_GCP_BARE_METAL_SOLUTION = \"gcp_bare_metal_solution\";\n/**\n  * Enum value \"gcp_cloud_functions\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS = \"gcp_cloud_functions\";\n/**\n  * Enum value \"gcp_cloud_run\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN = \"gcp_cloud_run\";\n/**\n  * Enum value \"gcp_compute_engine\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE = \"gcp_compute_engine\";\n/**\n  * Enum value \"gcp_kubernetes_engine\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE = \"gcp_kubernetes_engine\";\n/**\n  * Enum value \"gcp_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_GCP_OPENSHIFT = \"gcp_openshift\";\n/**\n  * Enum value \"ibm_cloud_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_IBM_CLOUD_OPENSHIFT = \"ibm_cloud_openshift\";\n/**\n  * Enum value \"oracle_cloud_compute\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_ORACLE_CLOUD_COMPUTE = \"oracle_cloud_compute\";\n/**\n  * Enum value \"oracle_cloud_oke\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_ORACLE_CLOUD_OKE = \"oracle_cloud_oke\";\n/**\n  * Enum value \"tencent_cloud_cvm\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_CVM = \"tencent_cloud_cvm\";\n/**\n  * Enum value \"tencent_cloud_eks\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_EKS = \"tencent_cloud_eks\";\n/**\n  * Enum value \"tencent_cloud_scf\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport var CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_SCF = \"tencent_cloud_scf\";\n/**\n * Name of the cloud provider.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUD_PROVIDER = 'cloud.provider';\n/**\n  * Enum value \"alibaba_cloud\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport var CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD = \"alibaba_cloud\";\n/**\n  * Enum value \"aws\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport var CLOUD_PROVIDER_VALUE_AWS = \"aws\";\n/**\n  * Enum value \"azure\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport var CLOUD_PROVIDER_VALUE_AZURE = \"azure\";\n/**\n  * Enum value \"gcp\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport var CLOUD_PROVIDER_VALUE_GCP = \"gcp\";\n/**\n  * Enum value \"heroku\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport var CLOUD_PROVIDER_VALUE_HEROKU = \"heroku\";\n/**\n  * Enum value \"ibm_cloud\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport var CLOUD_PROVIDER_VALUE_IBM_CLOUD = \"ibm_cloud\";\n/**\n  * Enum value \"oracle_cloud\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport var CLOUD_PROVIDER_VALUE_ORACLE_CLOUD = \"oracle_cloud\";\n/**\n  * Enum value \"tencent_cloud\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport var CLOUD_PROVIDER_VALUE_TENCENT_CLOUD = \"tencent_cloud\";\n/**\n * The geographical region the resource is running.\n *\n * @example us-central1\n * @example us-east-1\n *\n * @note Refer to your provider's docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/global-infrastructure/geographies/), [Google Cloud regions](https://cloud.google.com/about/locations), or [Tencent Cloud regions](https://www.tencentcloud.com/document/product/213/6091).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUD_REGION = 'cloud.region';\n/**\n * Cloud provider-specific native identifier of the monitored cloud resource (e.g. an [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) on AWS, a [fully qualified resource ID](https://learn.microsoft.com/rest/api/resources/resources/get-by-id) on Azure, a [full resource name](https://cloud.google.com/apis/design/resource_names#full_resource_name) on GCP)\n *\n * @example arn:aws:lambda:REGION:ACCOUNT_ID:function:my-function\n * @example //run.googleapis.com/projects/PROJECT_ID/locations/LOCATION_ID/services/SERVICE_ID\n * @example /subscriptions/<SUBSCRIPTION_GUID>/resourceGroups/<RG>/providers/Microsoft.Web/sites/<FUNCAPP>/functions/<FUNC>\n *\n * @note On some cloud providers, it may not be possible to determine the full ID at startup,\n * so it may be necessary to set `cloud.resource_id` as a span attribute instead.\n *\n * The exact value to use for `cloud.resource_id` depends on the cloud provider.\n * The following well-known definitions **MUST** be used if you set this attribute and they apply:\n *\n *   - **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n *     Take care not to use the \"invoked ARN\" directly but replace any\n *     [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html)\n *     with the resolved function version, as the same runtime instance may be invocable with\n *     multiple different aliases.\n *   - **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n *   - **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/rest/api/resources/resources/get-by-id) of the invoked function,\n *     *not* the function app, having the form\n *     `/subscriptions/<SUBSCRIPTION_GUID>/resourceGroups/<RG>/providers/Microsoft.Web/sites/<FUNCAPP>/functions/<FUNC>`.\n *     This means that a span attribute **MUST** be used, as an Azure function app can host multiple functions that would usually share\n *     a TracerProvider.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUD_RESOURCE_ID = 'cloud.resource_id';\n/**\n * The [event_id](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#id) uniquely identifies the event.\n *\n * @example 123e4567-e89b-12d3-a456-426614174000\n * @example 0001\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDEVENTS_EVENT_ID = 'cloudevents.event_id';\n/**\n * The [source](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#source-1) identifies the context in which an event happened.\n *\n * @example https://github.com/cloudevents\n * @example /cloudevents/spec/pull/123\n * @example my-service\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDEVENTS_EVENT_SOURCE = 'cloudevents.event_source';\n/**\n * The [version of the CloudEvents specification](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#specversion) which the event uses.\n *\n * @example \"1.0\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDEVENTS_EVENT_SPEC_VERSION = 'cloudevents.event_spec_version';\n/**\n * The [subject](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#subject) of the event in the context of the event producer (identified by source).\n *\n * @example \"mynewfile.jpg\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDEVENTS_EVENT_SUBJECT = 'cloudevents.event_subject';\n/**\n * The [event_type](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#type) contains a value describing the type of event related to the originating occurrence.\n *\n * @example com.github.pull_request.opened\n * @example com.example.object.deleted.v2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDEVENTS_EVENT_TYPE = 'cloudevents.event_type';\n/**\n * The guid of the application.\n *\n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n *\n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.application_id`. This is the same value as\n * reported by `cf app <app-name> --guid`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_APP_ID = 'cloudfoundry.app.id';\n/**\n * The index of the application instance. 0 when just one instance is active.\n *\n * @example 0\n * @example 1\n *\n * @note CloudFoundry defines the `instance_id` in the [Loggregator v2 envelope](https://github.com/cloudfoundry/loggregator-api#v2-envelope).\n * It is used for logs and metrics emitted by CloudFoundry. It is\n * supposed to contain the application instance index for applications\n * deployed on the runtime.\n *\n * Application instrumentation should use the value from environment\n * variable `CF_INSTANCE_INDEX`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_APP_INSTANCE_ID = 'cloudfoundry.app.instance.id';\n/**\n * The name of the application.\n *\n * @example my-app-name\n *\n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.application_name`. This is the same value\n * as reported by `cf apps`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_APP_NAME = 'cloudfoundry.app.name';\n/**\n * The guid of the CloudFoundry org the application is running in.\n *\n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n *\n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.org_id`. This is the same value as\n * reported by `cf org <org-name> --guid`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_ORG_ID = 'cloudfoundry.org.id';\n/**\n * The name of the CloudFoundry organization the app is running in.\n *\n * @example my-org-name\n *\n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.org_name`. This is the same value as\n * reported by `cf orgs`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_ORG_NAME = 'cloudfoundry.org.name';\n/**\n * The UID identifying the process.\n *\n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n *\n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.process_id`. It is supposed to be equal to\n * `VCAP_APPLICATION.app_id` for applications deployed to the runtime.\n * For system components, this could be the actual PID.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_PROCESS_ID = 'cloudfoundry.process.id';\n/**\n * The type of process.\n *\n * @example web\n *\n * @note CloudFoundry applications can consist of multiple jobs. Usually the\n * main process will be of type `web`. There can be additional background\n * tasks or side-cars with different process types.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_PROCESS_TYPE = 'cloudfoundry.process.type';\n/**\n * The guid of the CloudFoundry space the application is running in.\n *\n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n *\n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.space_id`. This is the same value as\n * reported by `cf space <space-name> --guid`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_SPACE_ID = 'cloudfoundry.space.id';\n/**\n * The name of the CloudFoundry space the application is running in.\n *\n * @example my-space-name\n *\n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.space_name`. This is the same value as\n * reported by `cf spaces`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_SPACE_NAME = 'cloudfoundry.space.name';\n/**\n * A guid or another name describing the event source.\n *\n * @example cf/gorouter\n *\n * @note CloudFoundry defines the `source_id` in the [Loggregator v2 envelope](https://github.com/cloudfoundry/loggregator-api#v2-envelope).\n * It is used for logs and metrics emitted by CloudFoundry. It is\n * supposed to contain the component name, e.g. \"gorouter\", for\n * CloudFoundry components.\n *\n * When system components are instrumented, values from the\n * [Bosh spec](https://bosh.io/docs/jobs/#properties-spec)\n * should be used. The `system.id` should be set to\n * `spec.deployment/spec.name`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_SYSTEM_ID = 'cloudfoundry.system.id';\n/**\n * A guid describing the concrete instance of the event source.\n *\n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n *\n * @note CloudFoundry defines the `instance_id` in the [Loggregator v2 envelope](https://github.com/cloudfoundry/loggregator-api#v2-envelope).\n * It is used for logs and metrics emitted by CloudFoundry. It is\n * supposed to contain the vm id for CloudFoundry components.\n *\n * When system components are instrumented, values from the\n * [Bosh spec](https://bosh.io/docs/jobs/#properties-spec)\n * should be used. The `system.instance.id` should be set to `spec.id`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CLOUDFOUNDRY_SYSTEM_INSTANCE_ID = 'cloudfoundry.system.instance.id';\n/**\n * Deprecated, use `code.column.number`\n *\n * @example 16\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `code.column.number`\n */\nexport var ATTR_CODE_COLUMN = 'code.column';\n/**\n * The column number in `code.file.path` best representing the operation. It **SHOULD** point within the code unit named in `code.function.name`.\n *\n * @example 16\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CODE_COLUMN_NUMBER = 'code.column.number';\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @example \"/usr/local/MyApplication/content_root/app/index.php\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CODE_FILE_PATH = 'code.file.path';\n/**\n * Deprecated, use `code.file.path` instead\n *\n * @example \"/usr/local/MyApplication/content_root/app/index.php\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CODE_FILEPATH = 'code.filepath';\n/**\n * Deprecated, use `code.function.name` instead\n *\n * @example \"serveRequest\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `code.function.name`\n */\nexport var ATTR_CODE_FUNCTION = 'code.function';\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit's name).\n *\n * @example \"serveRequest\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CODE_FUNCTION_NAME = 'code.function.name';\n/**\n * The line number in `code.file.path` best representing the operation. It **SHOULD** point within the code unit named in `code.function.name`.\n *\n * @example 42\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CODE_LINE_NUMBER = 'code.line.number';\n/**\n * Deprecated, use `code.line.number` instead\n *\n * @example 42\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `code.line.number`\n */\nexport var ATTR_CODE_LINENO = 'code.lineno';\n/**\n * The \"namespace\" within which `code.function.name` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function.name` form a unique identifier for the code unit.\n *\n * @example \"com.example.MyHttpService\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CODE_NAMESPACE = 'code.namespace';\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @example \"at com.example.GenerateTrace.methodB(GenerateTrace.java:13)\\\\n at com.example.GenerateTrace.methodA(GenerateTrace.java:9)\\\\n at com.example.GenerateTrace.main(GenerateTrace.java:5)\\\\n\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CODE_STACKTRACE = 'code.stacktrace';\n/**\n * The command used to run the container (i.e. the command name).\n *\n * @example otelcontribcol\n *\n * @note If using embedded credentials or sensitive data, it is recommended to remove them to prevent potential leakage.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_COMMAND = 'container.command';\n/**\n * All the command arguments (including the command/executable itself) run by the container.\n *\n * @example [\"otelcontribcol\", \"--config\", \"config.yaml\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_COMMAND_ARGS = 'container.command_args';\n/**\n * The full command run by the container as a single string representing the full command.\n *\n * @example otelcontribcol --config config.yaml\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_COMMAND_LINE = 'container.command_line';\n/**\n * Deprecated, use `cpu.mode` instead.\n *\n * @example user\n * @example kernel\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cpu.mode`\n */\nexport var ATTR_CONTAINER_CPU_STATE = 'container.cpu.state';\n/**\n  * Enum value \"kernel\" for attribute {@link ATTR_CONTAINER_CPU_STATE}.\n  */\nexport var CONTAINER_CPU_STATE_VALUE_KERNEL = \"kernel\";\n/**\n  * Enum value \"system\" for attribute {@link ATTR_CONTAINER_CPU_STATE}.\n  */\nexport var CONTAINER_CPU_STATE_VALUE_SYSTEM = \"system\";\n/**\n  * Enum value \"user\" for attribute {@link ATTR_CONTAINER_CPU_STATE}.\n  */\nexport var CONTAINER_CPU_STATE_VALUE_USER = \"user\";\n/**\n * The name of the CSI ([Container Storage Interface](https://github.com/container-storage-interface/spec)) plugin used by the volume.\n *\n * @example pd.csi.storage.gke.io\n *\n * @note This can sometimes be referred to as a \"driver\" in CSI implementations. This should represent the `name` field of the GetPluginInfo RPC.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_CSI_PLUGIN_NAME = 'container.csi.plugin.name';\n/**\n * The unique volume ID returned by the CSI ([Container Storage Interface](https://github.com/container-storage-interface/spec)) plugin.\n *\n * @example projects/my-gcp-project/zones/my-gcp-zone/disks/my-gcp-disk\n *\n * @note This can sometimes be referred to as a \"volume handle\" in CSI implementations. This should represent the `Volume.volume_id` field in CSI spec.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_CSI_VOLUME_ID = 'container.csi.volume.id';\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/containers/run/#container-identification). The UUID might be abbreviated.\n *\n * @example a3bf90e006b2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_ID = 'container.id';\n/**\n * Runtime specific image identifier. Usually a hash algorithm followed by a UUID.\n *\n * @example sha256:19c92d0a00d1b66d897bceaa7319bee0dd38a10a851c60bcec9474aa3f01e50f\n *\n * @note Docker defines a sha256 of the image id; `container.image.id` corresponds to the `Image` field from the Docker container inspect [API](https://docs.docker.com/engine/api/v1.43/#tag/Container/operation/ContainerInspect) endpoint.\n * K8s defines a link to the container registry repository with digest `\"imageID\": \"registry.azurecr.io /namespace/service/dockerfile@sha256:bdeabd40c3a8a492eaf9e8e44d0ebbb84bac7ee25ac0cf8a7159d25f62555625\"`.\n * The ID is assigned by the container runtime and can vary in different environments. Consider using `oci.manifest.digest` if it is important to identify the same image in different environments/runtimes.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_IMAGE_ID = 'container.image.id';\n/**\n * Name of the image the container was built on.\n *\n * @example gcr.io/opentelemetry/operator\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_IMAGE_NAME = 'container.image.name';\n/**\n * Repo digests of the container image as provided by the container runtime.\n *\n * @example [\"example@sha256:afcc7f1ac1b49db317a7196c902e61c6c3c4607d63599ee1a82d702d249a0ccb\", \"internal.registry.example.com:5000/example@sha256:b69959407d21e8a062e0416bf13405bb2b71ed7a84dde4158ebafacfa06f5578\"]\n *\n * @note [Docker](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect) and [CRI](https://github.com/kubernetes/cri-api/blob/c75ef5b473bbe2d0a4fc92f82235efd665ea8e9f/pkg/apis/runtime/v1/api.proto#L1237-L1238) report those under the `RepoDigests` field.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_IMAGE_REPO_DIGESTS = 'container.image.repo_digests';\n/**\n * Container image tags. An example can be found in [Docker Image Inspect](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect). Should be only the `<tag>` section of the full name for example from `registry.example.com/my-org/my-image:<tag>`.\n *\n * @example [\"v1.27.1\", \"3.5.7-0\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_IMAGE_TAGS = 'container.image.tags';\n/**\n * Container labels, `<key>` being the label name, the value being the label value.\n *\n * @example container.label.app=nginx\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_LABEL = function (key) { return \"container.label.\".concat(key); };\n/**\n * Deprecated, use `container.label` instead.\n *\n * @example container.label.app=nginx\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `container.label`.\n */\nexport var ATTR_CONTAINER_LABELS = function (key) { return \"container.labels.\".concat(key); };\n/**\n * Container name used by container runtime.\n *\n * @example opentelemetry-autoconf\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_NAME = 'container.name';\n/**\n * The container runtime managing this container.\n *\n * @example docker\n * @example containerd\n * @example rkt\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CONTAINER_RUNTIME = 'container.runtime';\n/**\n * The mode of the CPU\n *\n * @example user\n * @example system\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_CPU_MODE = 'cpu.mode';\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport var CPU_MODE_VALUE_IDLE = \"idle\";\n/**\n  * Enum value \"interrupt\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport var CPU_MODE_VALUE_INTERRUPT = \"interrupt\";\n/**\n  * Enum value \"iowait\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport var CPU_MODE_VALUE_IOWAIT = \"iowait\";\n/**\n  * Enum value \"kernel\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport var CPU_MODE_VALUE_KERNEL = \"kernel\";\n/**\n  * Enum value \"nice\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport var CPU_MODE_VALUE_NICE = \"nice\";\n/**\n  * Enum value \"steal\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport var CPU_MODE_VALUE_STEAL = \"steal\";\n/**\n  * Enum value \"system\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport var CPU_MODE_VALUE_SYSTEM = \"system\";\n/**\n  * Enum value \"user\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport var CPU_MODE_VALUE_USER = \"user\";\n/**\n * Deprecated, use `cassandra.consistency.level` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cassandra.consistency.level`.\n */\nexport var ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\n/**\n  * Enum value \"all\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL = \"all\";\n/**\n  * Enum value \"any\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY = \"any\";\n/**\n  * Enum value \"each_quorum\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM = \"each_quorum\";\n/**\n  * Enum value \"local_one\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE = \"local_one\";\n/**\n  * Enum value \"local_quorum\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM = \"local_quorum\";\n/**\n  * Enum value \"local_serial\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL = \"local_serial\";\n/**\n  * Enum value \"one\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE = \"one\";\n/**\n  * Enum value \"quorum\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM = \"quorum\";\n/**\n  * Enum value \"serial\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL = \"serial\";\n/**\n  * Enum value \"three\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE = \"three\";\n/**\n  * Enum value \"two\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport var DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO = \"two\";\n/**\n * Deprecated, use `cassandra.coordinator.dc` instead.\n *\n * @example \"us-west-2\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cassandra.coordinator.dc`.\n */\nexport var ATTR_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\n/**\n * Deprecated, use `cassandra.coordinator.id` instead.\n *\n * @example \"be13faa2-8574-4d71-926d-27f16cf8a7af\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cassandra.coordinator.id`.\n */\nexport var ATTR_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\n/**\n * Deprecated, use `cassandra.query.idempotent` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cassandra.query.idempotent`.\n */\nexport var ATTR_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\n/**\n * Deprecated, use `cassandra.page.size` instead.\n *\n * @example 5000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cassandra.page.size`.\n */\nexport var ATTR_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\n/**\n * Deprecated, use `cassandra.speculative_execution.count` instead.\n *\n * @example 0\n * @example 2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cassandra.speculative_execution.count`.\n */\nexport var ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = 'db.cassandra.speculative_execution_count';\n/**\n * Deprecated, use `db.collection.name` instead.\n *\n * @example \"mytable\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.collection.name`.\n */\nexport var ATTR_DB_CASSANDRA_TABLE = 'db.cassandra.table';\n/**\n * The name of the connection pool; unique within the instrumented application. In case the connection pool implementation doesn't provide a name, instrumentation **SHOULD** use a combination of parameters that would make the name unique, for example, combining attributes `server.address`, `server.port`, and `db.namespace`, formatted as `server.address:server.port/db.namespace`. Instrumentations that generate connection pool name following different patterns **SHOULD** document it.\n *\n * @example myDataSource\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_CLIENT_CONNECTION_POOL_NAME = 'db.client.connection.pool.name';\n/**\n * The state of a connection in the pool\n *\n * @example idle\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_CLIENT_CONNECTION_STATE = 'db.client.connection.state';\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_DB_CLIENT_CONNECTION_STATE}.\n  */\nexport var DB_CLIENT_CONNECTION_STATE_VALUE_IDLE = \"idle\";\n/**\n  * Enum value \"used\" for attribute {@link ATTR_DB_CLIENT_CONNECTION_STATE}.\n  */\nexport var DB_CLIENT_CONNECTION_STATE_VALUE_USED = \"used\";\n/**\n * Deprecated, use `db.client.connection.pool.name` instead.\n *\n * @example myDataSource\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.client.connection.pool.name`.\n */\nexport var ATTR_DB_CLIENT_CONNECTIONS_POOL_NAME = 'db.client.connections.pool.name';\n/**\n * Deprecated, use `db.client.connection.state` instead.\n *\n * @example idle\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.client.connection.state`.\n */\nexport var ATTR_DB_CLIENT_CONNECTIONS_STATE = 'db.client.connections.state';\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_DB_CLIENT_CONNECTIONS_STATE}.\n  */\nexport var DB_CLIENT_CONNECTIONS_STATE_VALUE_IDLE = \"idle\";\n/**\n  * Enum value \"used\" for attribute {@link ATTR_DB_CLIENT_CONNECTIONS_STATE}.\n  */\nexport var DB_CLIENT_CONNECTIONS_STATE_VALUE_USED = \"used\";\n/**\n * The name of a collection (table, container) within the database.\n *\n * @example public.users\n * @example customers\n *\n * @note It is **RECOMMENDED** to capture the value as provided by the application without attempting to do any case normalization.\n *\n * The collection name **SHOULD NOT** be extracted from `db.query.text`,\n * unless the query format is known to only ever have a single collection name present.\n *\n * For batch operations, if the individual operations are known to have the same collection name\n * then that collection name **SHOULD** be used.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_COLLECTION_NAME = 'db.collection.name';\n/**\n * Deprecated, use `server.address`, `server.port` attributes instead.\n *\n * @example \"Server=(localdb)\\\\v11.0;Integrated Security=true;\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `server.address` and `server.port`.\n */\nexport var ATTR_DB_CONNECTION_STRING = 'db.connection_string';\n/**\n * Deprecated, use `azure.client.id` instead.\n *\n * @example \"3ba4827d-4422-483f-b59f-85b74211c11d\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `azure.client.id`.\n */\nexport var ATTR_DB_COSMOSDB_CLIENT_ID = 'db.cosmosdb.client_id';\n/**\n * Deprecated, use `azure.cosmosdb.connection.mode` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `azure.cosmosdb.connection.mode`.\n */\nexport var ATTR_DB_COSMOSDB_CONNECTION_MODE = 'db.cosmosdb.connection_mode';\n/**\n  * Enum value \"direct\" for attribute {@link ATTR_DB_COSMOSDB_CONNECTION_MODE}.\n  */\nexport var DB_COSMOSDB_CONNECTION_MODE_VALUE_DIRECT = \"direct\";\n/**\n  * Enum value \"gateway\" for attribute {@link ATTR_DB_COSMOSDB_CONNECTION_MODE}.\n  */\nexport var DB_COSMOSDB_CONNECTION_MODE_VALUE_GATEWAY = \"gateway\";\n/**\n * Deprecated, use `cosmosdb.consistency.level` instead.\n *\n * @example Eventual\n * @example ConsistentPrefix\n * @example BoundedStaleness\n * @example Strong\n * @example Session\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `azure.cosmosdb.consistency.level`.\n */\nexport var ATTR_DB_COSMOSDB_CONSISTENCY_LEVEL = 'db.cosmosdb.consistency_level';\n/**\n  * Enum value \"BoundedStaleness\" for attribute {@link ATTR_DB_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var DB_COSMOSDB_CONSISTENCY_LEVEL_VALUE_BOUNDED_STALENESS = \"BoundedStaleness\";\n/**\n  * Enum value \"ConsistentPrefix\" for attribute {@link ATTR_DB_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var DB_COSMOSDB_CONSISTENCY_LEVEL_VALUE_CONSISTENT_PREFIX = \"ConsistentPrefix\";\n/**\n  * Enum value \"Eventual\" for attribute {@link ATTR_DB_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var DB_COSMOSDB_CONSISTENCY_LEVEL_VALUE_EVENTUAL = \"Eventual\";\n/**\n  * Enum value \"Session\" for attribute {@link ATTR_DB_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var DB_COSMOSDB_CONSISTENCY_LEVEL_VALUE_SESSION = \"Session\";\n/**\n  * Enum value \"Strong\" for attribute {@link ATTR_DB_COSMOSDB_CONSISTENCY_LEVEL}.\n  */\nexport var DB_COSMOSDB_CONSISTENCY_LEVEL_VALUE_STRONG = \"Strong\";\n/**\n * Deprecated, use `db.collection.name` instead.\n *\n * @example \"mytable\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.collection.name`.\n */\nexport var ATTR_DB_COSMOSDB_CONTAINER = 'db.cosmosdb.container';\n/**\n * Deprecated, no replacement at this time.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated No replacement at this time.\n */\nexport var ATTR_DB_COSMOSDB_OPERATION_TYPE = 'db.cosmosdb.operation_type';\n/**\n  * Enum value \"batch\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_BATCH = \"batch\";\n/**\n  * Enum value \"create\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_CREATE = \"create\";\n/**\n  * Enum value \"delete\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_DELETE = \"delete\";\n/**\n  * Enum value \"execute\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_EXECUTE = \"execute\";\n/**\n  * Enum value \"execute_javascript\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_EXECUTE_JAVASCRIPT = \"execute_javascript\";\n/**\n  * Enum value \"head\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_HEAD = \"head\";\n/**\n  * Enum value \"head_feed\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_HEAD_FEED = \"head_feed\";\n/**\n  * Enum value \"invalid\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_INVALID = \"invalid\";\n/**\n  * Enum value \"patch\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_PATCH = \"patch\";\n/**\n  * Enum value \"query\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_QUERY = \"query\";\n/**\n  * Enum value \"query_plan\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_QUERY_PLAN = \"query_plan\";\n/**\n  * Enum value \"read\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_READ = \"read\";\n/**\n  * Enum value \"read_feed\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_READ_FEED = \"read_feed\";\n/**\n  * Enum value \"replace\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_REPLACE = \"replace\";\n/**\n  * Enum value \"upsert\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport var DB_COSMOSDB_OPERATION_TYPE_VALUE_UPSERT = \"upsert\";\n/**\n * Deprecated, use `azure.cosmosdb.operation.contacted_regions` instead.\n *\n * @example [\"North Central US\", \"Australia East\", \"Australia Southeast\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `azure.cosmosdb.operation.contacted_regions`.\n */\nexport var ATTR_DB_COSMOSDB_REGIONS_CONTACTED = 'db.cosmosdb.regions_contacted';\n/**\n * Deprecated, use `azure.cosmosdb.operation.request_charge` instead.\n *\n * @example 46.18\n * @example 1.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `azure.cosmosdb.operation.request_charge`.\n */\nexport var ATTR_DB_COSMOSDB_REQUEST_CHARGE = 'db.cosmosdb.request_charge';\n/**\n * Deprecated, use `azure.cosmosdb.request.body.size` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `azure.cosmosdb.request.body.size`.\n */\nexport var ATTR_DB_COSMOSDB_REQUEST_CONTENT_LENGTH = 'db.cosmosdb.request_content_length';\n/**\n * Deprecated, use `db.response.status_code` instead.\n *\n * @example 200\n * @example 201\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.response.status_code`.\n */\nexport var ATTR_DB_COSMOSDB_STATUS_CODE = 'db.cosmosdb.status_code';\n/**\n * Deprecated, use `azure.cosmosdb.response.sub_status_code` instead.\n *\n * @example 1000\n * @example 1002\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `azure.cosmosdb.response.sub_status_code`.\n */\nexport var ATTR_DB_COSMOSDB_SUB_STATUS_CODE = 'db.cosmosdb.sub_status_code';\n/**\n * Deprecated, use `db.namespace` instead.\n *\n * @example e9106fc68e3044f0b1475b04bf4ffd5f\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.namespace`.\n */\nexport var ATTR_DB_ELASTICSEARCH_CLUSTER_NAME = 'db.elasticsearch.cluster.name';\n/**\n * Deprecated, use `elasticsearch.node.name` instead.\n *\n * @example instance-0000000001\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `elasticsearch.node.name`.\n */\nexport var ATTR_DB_ELASTICSEARCH_NODE_NAME = 'db.elasticsearch.node.name';\n/**\n * Deprecated, use `db.operation.parameter` instead.\n *\n * @example db.elasticsearch.path_parts.index=test-index\n * @example db.elasticsearch.path_parts.doc_id=123\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.operation.parameter`.\n */\nexport var ATTR_DB_ELASTICSEARCH_PATH_PARTS = function (key) { return \"db.elasticsearch.path_parts.\".concat(key); };\n/**\n * Deprecated, no general replacement at this time. For Elasticsearch, use `db.elasticsearch.node.name` instead.\n *\n * @example \"mysql-e26b99z.example.com\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Deprecated, no general replacement at this time. For Elasticsearch, use `db.elasticsearch.node.name` instead.\n */\nexport var ATTR_DB_INSTANCE_ID = 'db.instance.id';\n/**\n * Removed, no replacement at this time.\n *\n * @example org.postgresql.Driver\n * @example com.microsoft.sqlserver.jdbc.SQLServerDriver\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Removed as not used.\n */\nexport var ATTR_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\n/**\n * Deprecated, use `db.collection.name` instead.\n *\n * @example \"mytable\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.collection.name`.\n */\nexport var ATTR_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\n/**\n * Deprecated, SQL Server instance is now populated as a part of `db.namespace` attribute.\n *\n * @example \"MSSQLSERVER\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Deprecated, no replacement at this time.\n */\nexport var ATTR_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\n/**\n * Deprecated, use `db.namespace` instead.\n *\n * @example customers\n * @example main\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.namespace`.\n */\nexport var ATTR_DB_NAME = 'db.name';\n/**\n * The name of the database, fully qualified within the server address and port.\n *\n * @example customers\n * @example test.users\n *\n * @note If a database system has multiple namespace components, they **SHOULD** be concatenated (potentially using database system specific conventions) from most general to most specific namespace component, and more specific namespaces **SHOULD NOT** be captured without the more general namespaces, to ensure that \"startswith\" queries for the more general namespaces will be valid.\n * Semantic conventions for individual database systems **SHOULD** document what `db.namespace` means in the context of that system.\n * It is **RECOMMENDED** to capture the value as provided by the application without attempting to do any case normalization.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_NAMESPACE = 'db.namespace';\n/**\n * Deprecated, use `db.operation.name` instead.\n *\n * @example findAndModify\n * @example HMSET\n * @example SELECT\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.operation.name`.\n */\nexport var ATTR_DB_OPERATION = 'db.operation';\n/**\n * The number of queries included in a batch operation.\n *\n * @example 2\n * @example 3\n * @example 4\n *\n * @note Operations are only considered batches when they contain two or more operations, and so `db.operation.batch.size` **SHOULD** never be `1`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_OPERATION_BATCH_SIZE = 'db.operation.batch.size';\n/**\n * The name of the operation or command being executed.\n *\n * @example findAndModify\n * @example HMSET\n * @example SELECT\n *\n * @note It is **RECOMMENDED** to capture the value as provided by the application\n * without attempting to do any case normalization.\n *\n * The operation name **SHOULD NOT** be extracted from `db.query.text`,\n * unless the query format is known to only ever have a single operation name present.\n *\n * For batch operations, if the individual operations are known to have the same operation name\n * then that operation name **SHOULD** be used prepended by `BATCH `,\n * otherwise `db.operation.name` **SHOULD** be `BATCH` or some other database\n * system specific term if more applicable.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_OPERATION_NAME = 'db.operation.name';\n/**\n * A database operation parameter, with `<key>` being the parameter name, and the attribute value being a string representation of the parameter value.\n *\n * @example someval\n * @example 55\n *\n * @note If a parameter has no name and instead is referenced only by index, then `<key>` **SHOULD** be the 0-based index.\n * If `db.query.text` is also captured, then `db.operation.parameter.<key>` **SHOULD** match up with the parameterized placeholders present in `db.query.text`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_OPERATION_PARAMETER = function (key) { return \"db.operation.parameter.\".concat(key); };\n/**\n * A query parameter used in `db.query.text`, with `<key>` being the parameter name, and the attribute value being a string representation of the parameter value.\n *\n * @example someval\n * @example 55\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.operation.parameter`.\n */\nexport var ATTR_DB_QUERY_PARAMETER = function (key) { return \"db.query.parameter.\".concat(key); };\n/**\n * Low cardinality representation of a database query text.\n *\n * @example SELECT wuser_table\n * @example INSERT shipping_details SELECT orders\n * @example get user by id\n *\n * @note `db.query.summary` provides static summary of the query text. It describes a class of database queries and is useful as a grouping key, especially when analyzing telemetry for database calls involving complex queries.\n * Summary may be available to the instrumentation through instrumentation hooks or other means. If it is not available, instrumentations that support query parsing **SHOULD** generate a summary following [Generating query summary](../../docs/database/database-spans.md#generating-a-summary-of-the-query-text) section.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_QUERY_SUMMARY = 'db.query.summary';\n/**\n * The database query being executed.\n *\n * @example SELECT * FROM wuser_table where username = ?\n * @example SET mykey ?\n *\n * @note For sanitization see [Sanitization of `db.query.text`](../../docs/database/database-spans.md#sanitization-of-dbquerytext).\n * For batch operations, if the individual operations are known to have the same query text then that query text **SHOULD** be used, otherwise all of the individual query texts **SHOULD** be concatenated with separator `; ` or some other database system specific separator if more applicable.\n * Even though parameterized query text can potentially have sensitive data, by using a parameterized query the user is giving a strong signal that any sensitive data will be passed as parameter values, and the benefit to observability of capturing the static part of the query text by default outweighs the risk.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_QUERY_TEXT = 'db.query.text';\n/**\n * Deprecated, use `db.namespace` instead.\n *\n * @example 0\n * @example 1\n * @example 15\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.namespace`.\n */\nexport var ATTR_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\n/**\n * Number of rows returned by the operation.\n *\n * @example 10\n * @example 30\n * @example 1000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_RESPONSE_RETURNED_ROWS = 'db.response.returned_rows';\n/**\n * Database response status code.\n *\n * @example 102\n * @example ORA-17002\n * @example 08P01\n * @example 404\n *\n * @note The status code returned by the database. Usually it represents an error code, but may also represent partial success, warning, or differentiate between various types of successful outcomes.\n * Semantic conventions for individual database systems **SHOULD** document what `db.response.status_code` means in the context of that system.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_RESPONSE_STATUS_CODE = 'db.response.status_code';\n/**\n * Deprecated, use `db.collection.name` instead.\n *\n * @example \"mytable\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.collection.name`.\n */\nexport var ATTR_DB_SQL_TABLE = 'db.sql.table';\n/**\n * The database statement being executed.\n *\n * @example SELECT * FROM wuser_table\n * @example SET mykey \"WuValue\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.query.text`.\n */\nexport var ATTR_DB_STATEMENT = 'db.statement';\n/**\n * Deprecated, use `db.system.name` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.system.name`.\n */\nexport var ATTR_DB_SYSTEM = 'db.system';\n/**\n  * Enum value \"adabas\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_ADABAS = \"adabas\";\n/**\n  * Enum value \"cache\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_CACHE = \"cache\";\n/**\n  * Enum value \"cassandra\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_CASSANDRA = \"cassandra\";\n/**\n  * Enum value \"clickhouse\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_CLICKHOUSE = \"clickhouse\";\n/**\n  * Enum value \"cloudscape\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_CLOUDSCAPE = \"cloudscape\";\n/**\n  * Enum value \"cockroachdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_COCKROACHDB = \"cockroachdb\";\n/**\n  * Enum value \"coldfusion\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_COLDFUSION = \"coldfusion\";\n/**\n  * Enum value \"cosmosdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_COSMOSDB = \"cosmosdb\";\n/**\n  * Enum value \"couchbase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_COUCHBASE = \"couchbase\";\n/**\n  * Enum value \"couchdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_COUCHDB = \"couchdb\";\n/**\n  * Enum value \"db2\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_DB2 = \"db2\";\n/**\n  * Enum value \"derby\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_DERBY = \"derby\";\n/**\n  * Enum value \"dynamodb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_DYNAMODB = \"dynamodb\";\n/**\n  * Enum value \"edb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_EDB = \"edb\";\n/**\n  * Enum value \"elasticsearch\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_ELASTICSEARCH = \"elasticsearch\";\n/**\n  * Enum value \"filemaker\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_FILEMAKER = \"filemaker\";\n/**\n  * Enum value \"firebird\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_FIREBIRD = \"firebird\";\n/**\n  * Enum value \"firstsql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_FIRSTSQL = \"firstsql\";\n/**\n  * Enum value \"geode\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_GEODE = \"geode\";\n/**\n  * Enum value \"h2\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_H2 = \"h2\";\n/**\n  * Enum value \"hanadb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_HANADB = \"hanadb\";\n/**\n  * Enum value \"hbase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_HBASE = \"hbase\";\n/**\n  * Enum value \"hive\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_HIVE = \"hive\";\n/**\n  * Enum value \"hsqldb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_HSQLDB = \"hsqldb\";\n/**\n  * Enum value \"influxdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_INFLUXDB = \"influxdb\";\n/**\n  * Enum value \"informix\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_INFORMIX = \"informix\";\n/**\n  * Enum value \"ingres\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_INGRES = \"ingres\";\n/**\n  * Enum value \"instantdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_INSTANTDB = \"instantdb\";\n/**\n  * Enum value \"interbase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_INTERBASE = \"interbase\";\n/**\n  * Enum value \"intersystems_cache\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_INTERSYSTEMS_CACHE = \"intersystems_cache\";\n/**\n  * Enum value \"mariadb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_MARIADB = \"mariadb\";\n/**\n  * Enum value \"maxdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_MAXDB = \"maxdb\";\n/**\n  * Enum value \"memcached\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_MEMCACHED = \"memcached\";\n/**\n  * Enum value \"mongodb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_MONGODB = \"mongodb\";\n/**\n  * Enum value \"mssql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_MSSQL = \"mssql\";\n/**\n  * Enum value \"mssqlcompact\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_MSSQLCOMPACT = \"mssqlcompact\";\n/**\n  * Enum value \"mysql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_MYSQL = \"mysql\";\n/**\n  * Enum value \"neo4j\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_NEO4J = \"neo4j\";\n/**\n  * Enum value \"netezza\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_NETEZZA = \"netezza\";\n/**\n  * Enum value \"opensearch\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_OPENSEARCH = \"opensearch\";\n/**\n  * Enum value \"oracle\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_ORACLE = \"oracle\";\n/**\n  * Enum value \"other_sql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_OTHER_SQL = \"other_sql\";\n/**\n  * Enum value \"pervasive\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_PERVASIVE = \"pervasive\";\n/**\n  * Enum value \"pointbase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_POINTBASE = \"pointbase\";\n/**\n  * Enum value \"postgresql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_POSTGRESQL = \"postgresql\";\n/**\n  * Enum value \"progress\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_PROGRESS = \"progress\";\n/**\n  * Enum value \"redis\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_REDIS = \"redis\";\n/**\n  * Enum value \"redshift\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_REDSHIFT = \"redshift\";\n/**\n  * Enum value \"spanner\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_SPANNER = \"spanner\";\n/**\n  * Enum value \"sqlite\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_SQLITE = \"sqlite\";\n/**\n  * Enum value \"sybase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_SYBASE = \"sybase\";\n/**\n  * Enum value \"teradata\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_TERADATA = \"teradata\";\n/**\n  * Enum value \"trino\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_TRINO = \"trino\";\n/**\n  * Enum value \"vertica\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport var DB_SYSTEM_VALUE_VERTICA = \"vertica\";\n/**\n * The database management system (DBMS) product as identified by the client instrumentation.\n *\n * @note The actual DBMS may differ from the one identified by the client. For example, when using PostgreSQL client libraries to connect to a CockroachDB, the `db.system.name` is set to `postgresql` based on the instrumentation's best knowledge.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DB_SYSTEM_NAME = 'db.system.name';\n/**\n  * Enum value \"actian.ingres\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_ACTIAN_INGRES = \"actian.ingres\";\n/**\n  * Enum value \"aws.dynamodb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_AWS_DYNAMODB = \"aws.dynamodb\";\n/**\n  * Enum value \"aws.redshift\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_AWS_REDSHIFT = \"aws.redshift\";\n/**\n  * Enum value \"azure.cosmosdb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_AZURE_COSMOSDB = \"azure.cosmosdb\";\n/**\n  * Enum value \"cassandra\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_CASSANDRA = \"cassandra\";\n/**\n  * Enum value \"clickhouse\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_CLICKHOUSE = \"clickhouse\";\n/**\n  * Enum value \"cockroachdb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_COCKROACHDB = \"cockroachdb\";\n/**\n  * Enum value \"couchbase\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_COUCHBASE = \"couchbase\";\n/**\n  * Enum value \"couchdb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_COUCHDB = \"couchdb\";\n/**\n  * Enum value \"derby\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_DERBY = \"derby\";\n/**\n  * Enum value \"elasticsearch\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_ELASTICSEARCH = \"elasticsearch\";\n/**\n  * Enum value \"firebirdsql\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_FIREBIRDSQL = \"firebirdsql\";\n/**\n  * Enum value \"gcp.spanner\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_GCP_SPANNER = \"gcp.spanner\";\n/**\n  * Enum value \"geode\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_GEODE = \"geode\";\n/**\n  * Enum value \"h2database\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_H2DATABASE = \"h2database\";\n/**\n  * Enum value \"hbase\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_HBASE = \"hbase\";\n/**\n  * Enum value \"hive\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_HIVE = \"hive\";\n/**\n  * Enum value \"hsqldb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_HSQLDB = \"hsqldb\";\n/**\n  * Enum value \"ibm.db2\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_IBM_DB2 = \"ibm.db2\";\n/**\n  * Enum value \"ibm.informix\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_IBM_INFORMIX = \"ibm.informix\";\n/**\n  * Enum value \"ibm.netezza\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_IBM_NETEZZA = \"ibm.netezza\";\n/**\n  * Enum value \"influxdb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_INFLUXDB = \"influxdb\";\n/**\n  * Enum value \"instantdb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_INSTANTDB = \"instantdb\";\n/**\n  * Enum value \"intersystems.cache\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_INTERSYSTEMS_CACHE = \"intersystems.cache\";\n/**\n  * Enum value \"mariadb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_MARIADB = \"mariadb\";\n/**\n  * Enum value \"memcached\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_MEMCACHED = \"memcached\";\n/**\n  * Enum value \"microsoft.sql_server\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_MICROSOFT_SQL_SERVER = \"microsoft.sql_server\";\n/**\n  * Enum value \"mongodb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_MONGODB = \"mongodb\";\n/**\n  * Enum value \"mysql\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_MYSQL = \"mysql\";\n/**\n  * Enum value \"neo4j\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_NEO4J = \"neo4j\";\n/**\n  * Enum value \"opensearch\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_OPENSEARCH = \"opensearch\";\n/**\n  * Enum value \"oracle.db\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_ORACLE_DB = \"oracle.db\";\n/**\n  * Enum value \"other_sql\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_OTHER_SQL = \"other_sql\";\n/**\n  * Enum value \"postgresql\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_POSTGRESQL = \"postgresql\";\n/**\n  * Enum value \"redis\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_REDIS = \"redis\";\n/**\n  * Enum value \"sap.hana\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_SAP_HANA = \"sap.hana\";\n/**\n  * Enum value \"sap.maxdb\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_SAP_MAXDB = \"sap.maxdb\";\n/**\n  * Enum value \"softwareag.adabas\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_SOFTWAREAG_ADABAS = \"softwareag.adabas\";\n/**\n  * Enum value \"sqlite\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_SQLITE = \"sqlite\";\n/**\n  * Enum value \"teradata\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_TERADATA = \"teradata\";\n/**\n  * Enum value \"trino\" for attribute {@link ATTR_DB_SYSTEM_NAME}.\n  */\nexport var DB_SYSTEM_NAME_VALUE_TRINO = \"trino\";\n/**\n * Deprecated, no replacement at this time.\n *\n * @example readonly_user\n * @example reporting_user\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated No replacement at this time.\n */\nexport var ATTR_DB_USER = 'db.user';\n/**\n * 'Deprecated, use `deployment.environment.name` instead.'\n *\n * @example staging\n * @example production\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Deprecated, use `deployment.environment.name` instead.\n */\nexport var ATTR_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\n/**\n * Name of the [deployment environment](https://wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @example staging\n * @example production\n *\n * @note `deployment.environment.name` does not affect the uniqueness constraints defined through\n * the `service.namespace`, `service.name` and `service.instance.id` resource attributes.\n * This implies that resources carrying the following attribute combinations **MUST** be\n * considered to be identifying the same service:\n *\n *   - `service.name=frontend`, `deployment.environment.name=production`\n *   - `service.name=frontend`, `deployment.environment.name=staging`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DEPLOYMENT_ENVIRONMENT_NAME = 'deployment.environment.name';\n/**\n * The id of the deployment.\n *\n * @example 1208\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DEPLOYMENT_ID = 'deployment.id';\n/**\n * The name of the deployment.\n *\n * @example deploy my app\n * @example deploy-frontend\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DEPLOYMENT_NAME = 'deployment.name';\n/**\n * The status of the deployment.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DEPLOYMENT_STATUS = 'deployment.status';\n/**\n  * Enum value \"failed\" for attribute {@link ATTR_DEPLOYMENT_STATUS}.\n  */\nexport var DEPLOYMENT_STATUS_VALUE_FAILED = \"failed\";\n/**\n  * Enum value \"succeeded\" for attribute {@link ATTR_DEPLOYMENT_STATUS}.\n  */\nexport var DEPLOYMENT_STATUS_VALUE_SUCCEEDED = \"succeeded\";\n/**\n * Destination address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n *\n * @example destination.example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n *\n * @note When observed from the source side, and when communicating through an intermediary, `destination.address` **SHOULD** represent the destination address behind any intermediaries, for example proxies, if it's available.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DESTINATION_ADDRESS = 'destination.address';\n/**\n * Destination port number\n *\n * @example 3389\n * @example 2888\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DESTINATION_PORT = 'destination.port';\n/**\n * A unique identifier representing the device\n *\n * @example 2ab2916d-a51f-4ac8-80ee-45ac31a28092\n *\n * @note The device identifier **MUST** only be defined using the values outlined below. This value is not an advertising identifier and **MUST NOT** be used as such. On iOS (Swift or Objective-C), this value **MUST** be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value **MUST** be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DEVICE_ID = 'device.id';\n/**\n * The name of the device manufacturer\n *\n * @example Apple\n * @example Samsung\n *\n * @note The Android OS provides this field via [Build](https://developer.android.com/reference/android/os/Build#MANUFACTURER). iOS apps **SHOULD** hardcode the value `Apple`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DEVICE_MANUFACTURER = 'device.manufacturer';\n/**\n * The model identifier for the device\n *\n * @example iPhone3,4\n * @example SM-G920F\n *\n * @note It's recommended this value represents a machine-readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\n/**\n * The marketing name for the device model\n *\n * @example iPhone 6s Plus\n * @example Samsung Galaxy S6\n *\n * @note It's recommended this value represents a human-readable version of the device model rather than a machine-readable alternative.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DEVICE_MODEL_NAME = 'device.model.name';\n/**\n * The disk IO operation direction.\n *\n * @example read\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DISK_IO_DIRECTION = 'disk.io.direction';\n/**\n  * Enum value \"read\" for attribute {@link ATTR_DISK_IO_DIRECTION}.\n  */\nexport var DISK_IO_DIRECTION_VALUE_READ = \"read\";\n/**\n  * Enum value \"write\" for attribute {@link ATTR_DISK_IO_DIRECTION}.\n  */\nexport var DISK_IO_DIRECTION_VALUE_WRITE = \"write\";\n/**\n * The name being queried.\n *\n * @example www.example.com\n * @example opentelemetry.io\n *\n * @note If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\\\\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \\\\t, \\\\r, and \\\\n respectively.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_DNS_QUESTION_NAME = 'dns.question.name';\n/**\n * Represents the human-readable identifier of the node/instance to which a request was routed.\n *\n * @example instance-0000000001\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_ELASTICSEARCH_NODE_NAME = 'elasticsearch.node.name';\n/**\n * Deprecated, use `user.id` instead.\n *\n * @example \"username\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `user.id` attribute.\n */\nexport var ATTR_ENDUSER_ID = 'enduser.id';\n/**\n * Deprecated, use `user.roles` instead.\n *\n * @example \"admin\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `user.roles` attribute.\n */\nexport var ATTR_ENDUSER_ROLE = 'enduser.role';\n/**\n * Deprecated, no replacement at this time.\n *\n * @example \"read:message, write:files\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Removed.\n */\nexport var ATTR_ENDUSER_SCOPE = 'enduser.scope';\n/**\n * Identifies the class / type of event.\n *\n * @example browser.mouse.click\n * @example device.app.lifecycle\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by EventName top-level field on the LogRecord\n */\nexport var ATTR_EVENT_NAME = 'event.name';\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_COLDSTART = 'faas.coldstart';\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @example \"0/5 * * * ? *\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_CRON = 'faas.cron';\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @example myBucketName\n * @example myDbName\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @example myFile.txt\n * @example myTableName\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_DOCUMENT_NAME = 'faas.document.name';\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\n/**\n  * Enum value \"delete\" for attribute {@link ATTR_FAAS_DOCUMENT_OPERATION}.\n  */\nexport var FAAS_DOCUMENT_OPERATION_VALUE_DELETE = \"delete\";\n/**\n  * Enum value \"edit\" for attribute {@link ATTR_FAAS_DOCUMENT_OPERATION}.\n  */\nexport var FAAS_DOCUMENT_OPERATION_VALUE_EDIT = \"edit\";\n/**\n  * Enum value \"insert\" for attribute {@link ATTR_FAAS_DOCUMENT_OPERATION}.\n  */\nexport var FAAS_DOCUMENT_OPERATION_VALUE_INSERT = \"insert\";\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @example \"2020-01-23T13:47:06Z\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_DOCUMENT_TIME = 'faas.document.time';\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * @example 2021/06/28/[$LATEST]2f399eb14537447da05ab2a2e39309de\n *\n * @note - **AWS Lambda:** Use the (full) log stream name.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_INSTANCE = 'faas.instance';\n/**\n * The invocation ID of the current function invocation.\n *\n * @example \"af9d5aa4-a685-4c5f-a22b-444f80b3cc28\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_INVOCATION_ID = 'faas.invocation_id';\n/**\n * The name of the invoked function.\n *\n * @example \"my-function\"\n *\n * @note **SHOULD** be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_INVOKED_NAME = 'faas.invoked_name';\n/**\n * The cloud provider of the invoked function.\n *\n * @note **SHOULD** be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\n/**\n  * Enum value \"alibaba_cloud\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport var FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD = \"alibaba_cloud\";\n/**\n  * Enum value \"aws\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport var FAAS_INVOKED_PROVIDER_VALUE_AWS = \"aws\";\n/**\n  * Enum value \"azure\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport var FAAS_INVOKED_PROVIDER_VALUE_AZURE = \"azure\";\n/**\n  * Enum value \"gcp\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport var FAAS_INVOKED_PROVIDER_VALUE_GCP = \"gcp\";\n/**\n  * Enum value \"tencent_cloud\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport var FAAS_INVOKED_PROVIDER_VALUE_TENCENT_CLOUD = \"tencent_cloud\";\n/**\n * The cloud region of the invoked function.\n *\n * @example \"eu-central-1\"\n *\n * @note **SHOULD** be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_INVOKED_REGION = 'faas.invoked_region';\n/**\n * The amount of memory available to the serverless function converted to Bytes.\n *\n * @example 134217728\n *\n * @note It's recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information (which must be multiplied by 1,048,576).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_MAX_MEMORY = 'faas.max_memory';\n/**\n * The name of the single function that this runtime instance executes.\n *\n * @example my-function\n * @example myazurefunctionapp/some-function-name\n *\n * @note This is the name of the function as configured/deployed on the FaaS\n * platform and is usually different from the name of the callback\n * function (which may be stored in the\n * [`code.namespace`/`code.function.name`](/docs/general/attributes.md#source-code-attributes)\n * span attributes).\n *\n * For some cloud providers, the above definition is ambiguous. The following\n * definition of function name **MUST** be used for this attribute\n * (and consequently the span name) for the listed cloud providers/products:\n *\n *   - **Azure:**  The full name `<FUNCAPP>/<FUNC>`, i.e., function app name\n *     followed by a forward slash followed by the function name (this form\n *     can also be seen in the resource JSON for the function).\n *     This means that a span attribute **MUST** be used, as an Azure function\n *     app can host multiple functions that would usually share\n *     a TracerProvider (see also the `cloud.resource_id` attribute).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_NAME = 'faas.name';\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @example \"2020-01-23T13:47:06Z\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_TIME = 'faas.time';\n/**\n * Type of the trigger which caused this function invocation.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_TRIGGER = 'faas.trigger';\n/**\n  * Enum value \"datasource\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport var FAAS_TRIGGER_VALUE_DATASOURCE = \"datasource\";\n/**\n  * Enum value \"http\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport var FAAS_TRIGGER_VALUE_HTTP = \"http\";\n/**\n  * Enum value \"other\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport var FAAS_TRIGGER_VALUE_OTHER = \"other\";\n/**\n  * Enum value \"pubsub\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport var FAAS_TRIGGER_VALUE_PUBSUB = \"pubsub\";\n/**\n  * Enum value \"timer\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport var FAAS_TRIGGER_VALUE_TIMER = \"timer\";\n/**\n * The immutable version of the function being executed.\n *\n * @example 26\n * @example pinkfroid-00002\n *\n * @note Depending on the cloud provider and platform, use:\n *\n *   - **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n *     (an integer represented as a decimal string).\n *   - **Google Cloud Run (Services):** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n *     (i.e., the function name plus the revision suffix).\n *   - **Google Cloud Functions:** The value of the\n *     [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n *   - **Azure Functions:** Not applicable. Do not set this attribute.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FAAS_VERSION = 'faas.version';\n/**\n * The unique identifier for the flag evaluation context. For example, the targeting key.\n *\n * @example 5157782b-2203-4c80-a857-dbbd5e7761db\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FEATURE_FLAG_CONTEXT_ID = 'feature_flag.context.id';\n/**\n * A message explaining the nature of an error occurring during flag evaluation.\n *\n * @example Flag `header-color` expected type `string` but found type `number`\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FEATURE_FLAG_EVALUATION_ERROR_MESSAGE = 'feature_flag.evaluation.error.message';\n/**\n * The reason code which shows how a feature flag value was determined.\n *\n * @example static\n * @example targeting_match\n * @example error\n * @example default\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FEATURE_FLAG_EVALUATION_REASON = 'feature_flag.evaluation.reason';\n/**\n  * Enum value \"cached\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_CACHED = \"cached\";\n/**\n  * Enum value \"default\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_DEFAULT = \"default\";\n/**\n  * Enum value \"disabled\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_DISABLED = \"disabled\";\n/**\n  * Enum value \"error\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_ERROR = \"error\";\n/**\n  * Enum value \"split\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_SPLIT = \"split\";\n/**\n  * Enum value \"stale\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_STALE = \"stale\";\n/**\n  * Enum value \"static\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_STATIC = \"static\";\n/**\n  * Enum value \"targeting_match\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_TARGETING_MATCH = \"targeting_match\";\n/**\n  * Enum value \"unknown\" for attribute {@link ATTR_FEATURE_FLAG_EVALUATION_REASON}.\n  */\nexport var FEATURE_FLAG_EVALUATION_REASON_VALUE_UNKNOWN = \"unknown\";\n/**\n * The lookup key of the feature flag.\n *\n * @example logo-color\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FEATURE_FLAG_KEY = 'feature_flag.key';\n/**\n * Identifies the feature flag provider.\n *\n * @example Flag Manager\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FEATURE_FLAG_PROVIDER_NAME = 'feature_flag.provider_name';\n/**\n * The identifier of the [flag set](https://openfeature.dev/specification/glossary/#flag-set) to which the feature flag belongs.\n *\n * @example proj-1\n * @example ab98sgs\n * @example service1/dev\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FEATURE_FLAG_SET_ID = 'feature_flag.set.id';\n/**\n * A semantic identifier for an evaluated flag value.\n *\n * @example red\n * @example true\n * @example on\n *\n * @note A semantic identifier, commonly referred to as a variant, provides a means\n * for referring to a value without including the value itself. This can\n * provide additional context for understanding the meaning behind a value.\n * For example, the variant `red` maybe be used for the value `#c05543`.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FEATURE_FLAG_VARIANT = 'feature_flag.variant';\n/**\n * The version of the ruleset used during the evaluation. This may be any stable value which uniquely identifies the ruleset.\n *\n * @example 1\n * @example 01ABCDEF\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FEATURE_FLAG_VERSION = 'feature_flag.version';\n/**\n * Time when the file was last accessed, in ISO 8601 format.\n *\n * @example 2021-01-01T12:00:00Z\n *\n * @note This attribute might not be supported by some file systems — NFS, FAT32, in embedded OS, etc.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_ACCESSED = 'file.accessed';\n/**\n * Array of file attributes.\n *\n * @example [\"readonly\", \"hidden\"]\n *\n * @note Attributes names depend on the OS or file system. Here’s a non-exhaustive list of values expected for this attribute: `archive`, `compressed`, `directory`, `encrypted`, `execute`, `hidden`, `immutable`, `journaled`, `read`, `readonly`, `symbolic link`, `system`, `temporary`, `write`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_ATTRIBUTES = 'file.attributes';\n/**\n * Time when the file attributes or metadata was last changed, in ISO 8601 format.\n *\n * @example 2021-01-01T12:00:00Z\n *\n * @note `file.changed` captures the time when any of the file's properties or attributes (including the content) are changed, while `file.modified` captures the timestamp when the file content is modified.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_CHANGED = 'file.changed';\n/**\n * Time when the file was created, in ISO 8601 format.\n *\n * @example 2021-01-01T12:00:00Z\n *\n * @note This attribute might not be supported by some file systems — NFS, FAT32, in embedded OS, etc.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_CREATED = 'file.created';\n/**\n * Directory where the file is located. It should include the drive letter, when appropriate.\n *\n * @example /home/user\n * @example C:\\\\Program Files\\\\MyApp\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_DIRECTORY = 'file.directory';\n/**\n * File extension, excluding the leading dot.\n *\n * @example png\n * @example gz\n *\n * @note When the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\").\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_EXTENSION = 'file.extension';\n/**\n * Name of the fork. A fork is additional data associated with a filesystem object.\n *\n * @example Zone.Identifer\n *\n * @note On Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\n * On NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: C:\\\\path\\\\to\\\\filename.extension:some_fork_name, and some_fork_name is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_FORK_NAME = 'file.fork_name';\n/**\n * Primary Group ID (GID) of the file.\n *\n * @example 1000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_GROUP_ID = 'file.group.id';\n/**\n * Primary group name of the file.\n *\n * @example users\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_GROUP_NAME = 'file.group.name';\n/**\n * Inode representing the file in the filesystem.\n *\n * @example 256383\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_INODE = 'file.inode';\n/**\n * Mode of the file in octal representation.\n *\n * @example 0640\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_MODE = 'file.mode';\n/**\n * Time when the file content was last modified, in ISO 8601 format.\n *\n * @example 2021-01-01T12:00:00Z\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_MODIFIED = 'file.modified';\n/**\n * Name of the file including the extension, without the directory.\n *\n * @example example.png\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_NAME = 'file.name';\n/**\n * The user ID (UID) or security identifier (SID) of the file owner.\n *\n * @example 1000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_OWNER_ID = 'file.owner.id';\n/**\n * Username of the file owner.\n *\n * @example root\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_OWNER_NAME = 'file.owner.name';\n/**\n * Full path to the file, including the file name. It should include the drive letter, when appropriate.\n *\n * @example /home/alice/example.png\n * @example C:\\\\Program Files\\\\MyApp\\\\myapp.exe\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_PATH = 'file.path';\n/**\n * File size in bytes.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_SIZE = 'file.size';\n/**\n * Path to the target of a symbolic link.\n *\n * @example /usr/bin/python3\n *\n * @note This attribute is only applicable to symbolic links.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_FILE_SYMBOLIC_LINK_TARGET_PATH = 'file.symbolic_link.target_path';\n/**\n * Identifies the Google Cloud service for which the official client library is intended.\n *\n * @example appengine\n * @example run\n * @example firestore\n * @example alloydb\n * @example spanner\n *\n * @note Intended to be a stable identifier for Google Cloud client libraries that is uniform across implementation languages. The value should be derived from the canonical service domain for the service; for example, 'foo.googleapis.com' should result in a value of 'foo'.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GCP_CLIENT_SERVICE = 'gcp.client.service';\n/**\n * The name of the Cloud Run [execution](https://cloud.google.com/run/docs/managing/job-executions) being run for the Job, as set by the [`CLOUD_RUN_EXECUTION`](https://cloud.google.com/run/docs/container-contract#jobs-env-vars) environment variable.\n *\n * @example job-name-xxxx\n * @example sample-job-mdw84\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GCP_CLOUD_RUN_JOB_EXECUTION = 'gcp.cloud_run.job.execution';\n/**\n * The index for a task within an execution as provided by the [`CLOUD_RUN_TASK_INDEX`](https://cloud.google.com/run/docs/container-contract#jobs-env-vars) environment variable.\n *\n * @example 0\n * @example 1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GCP_CLOUD_RUN_JOB_TASK_INDEX = 'gcp.cloud_run.job.task_index';\n/**\n * The hostname of a GCE instance. This is the full value of the default or [custom hostname](https://cloud.google.com/compute/docs/instances/custom-hostname-vm).\n *\n * @example my-host1234.example.com\n * @example sample-vm.us-west1-b.c.my-project.internal\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GCP_GCE_INSTANCE_HOSTNAME = 'gcp.gce.instance.hostname';\n/**\n * The instance name of a GCE instance. This is the value provided by `host.name`, the visible name of the instance in the Cloud Console UI, and the prefix for the default hostname of the instance as defined by the [default internal DNS name](https://cloud.google.com/compute/docs/internal-dns#instance-fully-qualified-domain-names).\n *\n * @example instance-1\n * @example my-vm-name\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GCP_GCE_INSTANCE_NAME = 'gcp.gce.instance.name';\n/**\n * Deprecated, use Event API to report completions contents.\n *\n * @example [{'role': 'assistant', 'content': 'The capital of France is Paris.'}]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Removed, no replacement at this time.\n */\nexport var ATTR_GEN_AI_COMPLETION = 'gen_ai.completion';\n/**\n * The response format that is requested.\n *\n * @example json\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT = 'gen_ai.openai.request.response_format';\n/**\n  * Enum value \"json_object\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT}.\n  */\nexport var GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_JSON_OBJECT = \"json_object\";\n/**\n  * Enum value \"json_schema\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT}.\n  */\nexport var GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_JSON_SCHEMA = \"json_schema\";\n/**\n  * Enum value \"text\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT}.\n  */\nexport var GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_TEXT = \"text\";\n/**\n * Deprecated, use `gen_ai.request.seed`.\n *\n * @example 100\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `gen_ai.request.seed` attribute.\n */\nexport var ATTR_GEN_AI_OPENAI_REQUEST_SEED = 'gen_ai.openai.request.seed';\n/**\n * The service tier requested. May be a specific tier, default, or auto.\n *\n * @example auto\n * @example default\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_OPENAI_REQUEST_SERVICE_TIER = 'gen_ai.openai.request.service_tier';\n/**\n  * Enum value \"auto\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_SERVICE_TIER}.\n  */\nexport var GEN_AI_OPENAI_REQUEST_SERVICE_TIER_VALUE_AUTO = \"auto\";\n/**\n  * Enum value \"default\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_SERVICE_TIER}.\n  */\nexport var GEN_AI_OPENAI_REQUEST_SERVICE_TIER_VALUE_DEFAULT = \"default\";\n/**\n * The service tier used for the response.\n *\n * @example scale\n * @example default\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_OPENAI_RESPONSE_SERVICE_TIER = 'gen_ai.openai.response.service_tier';\n/**\n * A fingerprint to track any eventual change in the Generative AI environment.\n *\n * @example fp_44709d6fcb\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_OPENAI_RESPONSE_SYSTEM_FINGERPRINT = 'gen_ai.openai.response.system_fingerprint';\n/**\n * The name of the operation being performed.\n *\n * @note If one of the predefined values applies, but specific system uses a different name it's **RECOMMENDED** to document it in the semantic conventions for specific GenAI system and use system-specific name in the instrumentation. If a different name is not documented, instrumentation libraries **SHOULD** use applicable predefined value.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_OPERATION_NAME = 'gen_ai.operation.name';\n/**\n  * Enum value \"chat\" for attribute {@link ATTR_GEN_AI_OPERATION_NAME}.\n  */\nexport var GEN_AI_OPERATION_NAME_VALUE_CHAT = \"chat\";\n/**\n  * Enum value \"embeddings\" for attribute {@link ATTR_GEN_AI_OPERATION_NAME}.\n  */\nexport var GEN_AI_OPERATION_NAME_VALUE_EMBEDDINGS = \"embeddings\";\n/**\n  * Enum value \"text_completion\" for attribute {@link ATTR_GEN_AI_OPERATION_NAME}.\n  */\nexport var GEN_AI_OPERATION_NAME_VALUE_TEXT_COMPLETION = \"text_completion\";\n/**\n * Deprecated, use Event API to report prompt contents.\n *\n * @example [{'role': 'user', 'content': 'What is the capital of France?'}]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Removed, no replacement at this time.\n */\nexport var ATTR_GEN_AI_PROMPT = 'gen_ai.prompt';\n/**\n * The encoding formats requested in an embeddings operation, if specified.\n *\n * @example [\"base64\"]\n * @example [\"float\", \"binary\"]\n *\n * @note In some GenAI systems the encoding formats are called embedding types. Also, some GenAI systems only accept a single format per request.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_ENCODING_FORMATS = 'gen_ai.request.encoding_formats';\n/**\n * The frequency penalty setting for the GenAI request.\n *\n * @example 0.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_FREQUENCY_PENALTY = 'gen_ai.request.frequency_penalty';\n/**\n * The maximum number of tokens the model generates for a request.\n *\n * @example 100\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_MAX_TOKENS = 'gen_ai.request.max_tokens';\n/**\n * The name of the GenAI model a request is being made to.\n *\n * @example \"gpt-4\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_MODEL = 'gen_ai.request.model';\n/**\n * The presence penalty setting for the GenAI request.\n *\n * @example 0.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_PRESENCE_PENALTY = 'gen_ai.request.presence_penalty';\n/**\n * Requests with same seed value more likely to return same result.\n *\n * @example 100\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_SEED = 'gen_ai.request.seed';\n/**\n * List of sequences that the model will use to stop generating further tokens.\n *\n * @example [\"forest\", \"lived\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_STOP_SEQUENCES = 'gen_ai.request.stop_sequences';\n/**\n * The temperature setting for the GenAI request.\n *\n * @example 0.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_TEMPERATURE = 'gen_ai.request.temperature';\n/**\n * The top_k sampling setting for the GenAI request.\n *\n * @example 1.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_TOP_K = 'gen_ai.request.top_k';\n/**\n * The top_p sampling setting for the GenAI request.\n *\n * @example 1.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_REQUEST_TOP_P = 'gen_ai.request.top_p';\n/**\n * Array of reasons the model stopped generating tokens, corresponding to each generation received.\n *\n * @example [\"stop\"]\n * @example [\"stop\", \"length\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_RESPONSE_FINISH_REASONS = 'gen_ai.response.finish_reasons';\n/**\n * The unique identifier for the completion.\n *\n * @example chatcmpl-123\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_RESPONSE_ID = 'gen_ai.response.id';\n/**\n * The name of the model that generated the response.\n *\n * @example gpt-4-0613\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_RESPONSE_MODEL = 'gen_ai.response.model';\n/**\n * The Generative AI product as identified by the client or server instrumentation.\n *\n * @example \"openai\"\n *\n * @note The `gen_ai.system` describes a family of GenAI models with specific model identified\n * by `gen_ai.request.model` and `gen_ai.response.model` attributes.\n *\n * The actual GenAI product may differ from the one identified by the client.\n * Multiple systems, including Azure OpenAI and Gemini, are accessible by OpenAI client\n * libraries. In such cases, the `gen_ai.system` is set to `openai` based on the\n * instrumentation's best knowledge, instead of the actual system. The `server.address`\n * attribute may help identify the actual system in use for `openai`.\n *\n * For custom model, a custom friendly name **SHOULD** be used.\n * If none of these options apply, the `gen_ai.system` **SHOULD** be set to `_OTHER`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_SYSTEM = 'gen_ai.system';\n/**\n  * Enum value \"anthropic\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_ANTHROPIC = \"anthropic\";\n/**\n  * Enum value \"aws.bedrock\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_AWS_BEDROCK = \"aws.bedrock\";\n/**\n  * Enum value \"az.ai.inference\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_AZ_AI_INFERENCE = \"az.ai.inference\";\n/**\n  * Enum value \"az.ai.openai\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_AZ_AI_OPENAI = \"az.ai.openai\";\n/**\n  * Enum value \"cohere\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_COHERE = \"cohere\";\n/**\n  * Enum value \"deepseek\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_DEEPSEEK = \"deepseek\";\n/**\n  * Enum value \"gemini\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_GEMINI = \"gemini\";\n/**\n  * Enum value \"groq\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_GROQ = \"groq\";\n/**\n  * Enum value \"ibm.watsonx.ai\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_IBM_WATSONX_AI = \"ibm.watsonx.ai\";\n/**\n  * Enum value \"mistral_ai\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_MISTRAL_AI = \"mistral_ai\";\n/**\n  * Enum value \"openai\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_OPENAI = \"openai\";\n/**\n  * Enum value \"perplexity\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_PERPLEXITY = \"perplexity\";\n/**\n  * Enum value \"vertex_ai\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_VERTEX_AI = \"vertex_ai\";\n/**\n  * Enum value \"xai\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport var GEN_AI_SYSTEM_VALUE_XAI = \"xai\";\n/**\n * The type of token being counted.\n *\n * @example input\n * @example output\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_TOKEN_TYPE = 'gen_ai.token.type';\n/**\n  * Enum value \"input\" for attribute {@link ATTR_GEN_AI_TOKEN_TYPE}.\n  */\nexport var GEN_AI_TOKEN_TYPE_VALUE_INPUT = \"input\";\n/**\n  * Enum value \"output\" for attribute {@link ATTR_GEN_AI_TOKEN_TYPE}.\n  */\nexport var GEN_AI_TOKEN_TYPE_VALUE_COMPLETION = \"output\";\n/**\n * Deprecated, use `gen_ai.usage.output_tokens` instead.\n *\n * @example 42\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `gen_ai.usage.output_tokens` attribute.\n */\nexport var ATTR_GEN_AI_USAGE_COMPLETION_TOKENS = 'gen_ai.usage.completion_tokens';\n/**\n * The number of tokens used in the GenAI input (prompt).\n *\n * @example 100\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_USAGE_INPUT_TOKENS = 'gen_ai.usage.input_tokens';\n/**\n * The number of tokens used in the GenAI response (completion).\n *\n * @example 180\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEN_AI_USAGE_OUTPUT_TOKENS = 'gen_ai.usage.output_tokens';\n/**\n * Deprecated, use `gen_ai.usage.input_tokens` instead.\n *\n * @example 42\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `gen_ai.usage.input_tokens` attribute.\n */\nexport var ATTR_GEN_AI_USAGE_PROMPT_TOKENS = 'gen_ai.usage.prompt_tokens';\n/**\n * Two-letter code representing continent’s name.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEO_CONTINENT_CODE = 'geo.continent.code';\n/**\n  * Enum value \"AF\" for attribute {@link ATTR_GEO_CONTINENT_CODE}.\n  */\nexport var GEO_CONTINENT_CODE_VALUE_AF = \"AF\";\n/**\n  * Enum value \"AN\" for attribute {@link ATTR_GEO_CONTINENT_CODE}.\n  */\nexport var GEO_CONTINENT_CODE_VALUE_AN = \"AN\";\n/**\n  * Enum value \"AS\" for attribute {@link ATTR_GEO_CONTINENT_CODE}.\n  */\nexport var GEO_CONTINENT_CODE_VALUE_AS = \"AS\";\n/**\n  * Enum value \"EU\" for attribute {@link ATTR_GEO_CONTINENT_CODE}.\n  */\nexport var GEO_CONTINENT_CODE_VALUE_EU = \"EU\";\n/**\n  * Enum value \"NA\" for attribute {@link ATTR_GEO_CONTINENT_CODE}.\n  */\nexport var GEO_CONTINENT_CODE_VALUE_NA = \"NA\";\n/**\n  * Enum value \"OC\" for attribute {@link ATTR_GEO_CONTINENT_CODE}.\n  */\nexport var GEO_CONTINENT_CODE_VALUE_OC = \"OC\";\n/**\n  * Enum value \"SA\" for attribute {@link ATTR_GEO_CONTINENT_CODE}.\n  */\nexport var GEO_CONTINENT_CODE_VALUE_SA = \"SA\";\n/**\n * Two-letter ISO Country Code ([ISO 3166-1 alpha2](https://wikipedia.org/wiki/ISO_3166-1#Codes)).\n *\n * @example CA\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEO_COUNTRY_ISO_CODE = 'geo.country.iso_code';\n/**\n * Locality name. Represents the name of a city, town, village, or similar populated place.\n *\n * @example Montreal\n * @example Berlin\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEO_LOCALITY_NAME = 'geo.locality.name';\n/**\n * Latitude of the geo location in [WGS84](https://wikipedia.org/wiki/World_Geodetic_System#WGS84).\n *\n * @example 45.505918\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEO_LOCATION_LAT = 'geo.location.lat';\n/**\n * Longitude of the geo location in [WGS84](https://wikipedia.org/wiki/World_Geodetic_System#WGS84).\n *\n * @example -73.61483\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEO_LOCATION_LON = 'geo.location.lon';\n/**\n * Postal code associated with the location. Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.\n *\n * @example 94040\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEO_POSTAL_CODE = 'geo.postal_code';\n/**\n * Region ISO code ([ISO 3166-2](https://wikipedia.org/wiki/ISO_3166-2)).\n *\n * @example CA-QC\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GEO_REGION_ISO_CODE = 'geo.region.iso_code';\n/**\n * The type of memory.\n *\n * @example other\n * @example stack\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GO_MEMORY_TYPE = 'go.memory.type';\n/**\n  * Enum value \"other\" for attribute {@link ATTR_GO_MEMORY_TYPE}.\n  */\nexport var GO_MEMORY_TYPE_VALUE_OTHER = \"other\";\n/**\n  * Enum value \"stack\" for attribute {@link ATTR_GO_MEMORY_TYPE}.\n  */\nexport var GO_MEMORY_TYPE_VALUE_STACK = \"stack\";\n/**\n * The GraphQL document being executed.\n *\n * @example \"query findBookById { bookById(id: ?) { name } }\"\n *\n * @note The value may be sanitized to exclude sensitive information.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GRAPHQL_DOCUMENT = 'graphql.document';\n/**\n * The name of the operation being executed.\n *\n * @example \"findBookById\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GRAPHQL_OPERATION_NAME = 'graphql.operation.name';\n/**\n * The type of the operation being executed.\n *\n * @example query\n * @example mutation\n * @example subscription\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_GRAPHQL_OPERATION_TYPE = 'graphql.operation.type';\n/**\n  * Enum value \"mutation\" for attribute {@link ATTR_GRAPHQL_OPERATION_TYPE}.\n  */\nexport var GRAPHQL_OPERATION_TYPE_VALUE_MUTATION = \"mutation\";\n/**\n  * Enum value \"query\" for attribute {@link ATTR_GRAPHQL_OPERATION_TYPE}.\n  */\nexport var GRAPHQL_OPERATION_TYPE_VALUE_QUERY = \"query\";\n/**\n  * Enum value \"subscription\" for attribute {@link ATTR_GRAPHQL_OPERATION_TYPE}.\n  */\nexport var GRAPHQL_OPERATION_TYPE_VALUE_SUBSCRIPTION = \"subscription\";\n/**\n * Unique identifier for the application\n *\n * @example 2daa2797-e42b-4624-9322-ec3f968df4da\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HEROKU_APP_ID = 'heroku.app.id';\n/**\n * Commit hash for the current release\n *\n * @example e6134959463efd8966b20e75b913cafe3f5ec\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HEROKU_RELEASE_COMMIT = 'heroku.release.commit';\n/**\n * Time and date the release was created\n *\n * @example 2022-10-23T18:00:42Z\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HEROKU_RELEASE_CREATION_TIMESTAMP = 'heroku.release.creation_timestamp';\n/**\n * The CPU architecture the host system is running on.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_ARCH = 'host.arch';\n/**\n  * Enum value \"amd64\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport var HOST_ARCH_VALUE_AMD64 = \"amd64\";\n/**\n  * Enum value \"arm32\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport var HOST_ARCH_VALUE_ARM32 = \"arm32\";\n/**\n  * Enum value \"arm64\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport var HOST_ARCH_VALUE_ARM64 = \"arm64\";\n/**\n  * Enum value \"ia64\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport var HOST_ARCH_VALUE_IA64 = \"ia64\";\n/**\n  * Enum value \"ppc32\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport var HOST_ARCH_VALUE_PPC32 = \"ppc32\";\n/**\n  * Enum value \"ppc64\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport var HOST_ARCH_VALUE_PPC64 = \"ppc64\";\n/**\n  * Enum value \"s390x\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport var HOST_ARCH_VALUE_S390X = \"s390x\";\n/**\n  * Enum value \"x86\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport var HOST_ARCH_VALUE_X86 = \"x86\";\n/**\n * The amount of level 2 memory cache available to the processor (in Bytes).\n *\n * @example 12288000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_CPU_CACHE_L2_SIZE = 'host.cpu.cache.l2.size';\n/**\n * Family or generation of the CPU.\n *\n * @example 6\n * @example PA-RISC 1.1e\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_CPU_FAMILY = 'host.cpu.family';\n/**\n * Model identifier. It provides more granular information about the CPU, distinguishing it from other CPUs within the same family.\n *\n * @example 6\n * @example 9000/778/B180L\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_CPU_MODEL_ID = 'host.cpu.model.id';\n/**\n * Model designation of the processor.\n *\n * @example 11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_CPU_MODEL_NAME = 'host.cpu.model.name';\n/**\n * Stepping or core revisions.\n *\n * @example 1\n * @example r1p1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_CPU_STEPPING = 'host.cpu.stepping';\n/**\n * Processor manufacturer identifier. A maximum 12-character string.\n *\n * @example GenuineIntel\n *\n * @note [CPUID](https://wiki.osdev.org/CPUID) command returns the vendor ID string in EBX, EDX and ECX registers. Writing these to memory in this order results in a 12-character string.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_CPU_VENDOR_ID = 'host.cpu.vendor.id';\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider. For non-containerized systems, this should be the `machine-id`. See the table below for the sources to use to determine the `machine-id` based on operating system.\n *\n * @example fdbf79e8af94cb7f9e8df36789187052\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_ID = 'host.id';\n/**\n * VM image ID or host OS image ID. For Cloud, this value is from the provider.\n *\n * @example ami-07b06b442921831e5\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_IMAGE_ID = 'host.image.id';\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @example infra-ami-eks-worker-node-7d4ec78312\n * @example CentOS-8-x86_64-1905\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_IMAGE_NAME = 'host.image.name';\n/**\n * The version string of the VM image or host OS as defined in [Version Attributes](/docs/resource/README.md#version-attributes).\n *\n * @example 0.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_IMAGE_VERSION = 'host.image.version';\n/**\n * Available IP addresses of the host, excluding loopback interfaces.\n *\n * @example [\"192.168.1.140\", \"fe80::abc2:4a28:737a:609e\"]\n *\n * @note IPv4 Addresses **MUST** be specified in dotted-quad notation. IPv6 addresses **MUST** be specified in the [RFC 5952](https://www.rfc-editor.org/rfc/rfc5952.html) format.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_IP = 'host.ip';\n/**\n * Available MAC addresses of the host, excluding loopback interfaces.\n *\n * @example [\"AC-DE-48-23-45-67\", \"AC-DE-48-23-45-67-01-9F\"]\n *\n * @note MAC Addresses **MUST** be represented in [IEEE RA hexadecimal form](https://standards.ieee.org/wp-content/uploads/import/documents/tutorials/eui.pdf): as hyphen-separated octets in uppercase hexadecimal form from most to least significant.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_MAC = 'host.mac';\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @example opentelemetry-test\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_NAME = 'host.name';\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @example n1-standard-1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HOST_TYPE = 'host.type';\n/**\n * Deprecated, use `client.address` instead.\n *\n * @example \"83.164.160.102\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `client.address`.\n */\nexport var ATTR_HTTP_CLIENT_IP = 'http.client_ip';\n/**\n * State of the HTTP connection in the HTTP connection pool.\n *\n * @example active\n * @example idle\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HTTP_CONNECTION_STATE = 'http.connection.state';\n/**\n  * Enum value \"active\" for attribute {@link ATTR_HTTP_CONNECTION_STATE}.\n  */\nexport var HTTP_CONNECTION_STATE_VALUE_ACTIVE = \"active\";\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_HTTP_CONNECTION_STATE}.\n  */\nexport var HTTP_CONNECTION_STATE_VALUE_IDLE = \"idle\";\n/**\n * Deprecated, use `network.protocol.name` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.protocol.name`.\n */\nexport var ATTR_HTTP_FLAVOR = 'http.flavor';\n/**\n  * Enum value \"1.0\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport var HTTP_FLAVOR_VALUE_HTTP_1_0 = \"1.0\";\n/**\n  * Enum value \"1.1\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport var HTTP_FLAVOR_VALUE_HTTP_1_1 = \"1.1\";\n/**\n  * Enum value \"2.0\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport var HTTP_FLAVOR_VALUE_HTTP_2_0 = \"2.0\";\n/**\n  * Enum value \"3.0\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport var HTTP_FLAVOR_VALUE_HTTP_3_0 = \"3.0\";\n/**\n  * Enum value \"QUIC\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport var HTTP_FLAVOR_VALUE_QUIC = \"QUIC\";\n/**\n  * Enum value \"SPDY\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport var HTTP_FLAVOR_VALUE_SPDY = \"SPDY\";\n/**\n * Deprecated, use one of `server.address`, `client.address` or `http.request.header.host` instead, depending on the usage.\n *\n * @example www.example.org\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by one of `server.address`, `client.address` or `http.request.header.host`, depending on the usage.\n */\nexport var ATTR_HTTP_HOST = 'http.host';\n/**\n * Deprecated, use `http.request.method` instead.\n *\n * @example GET\n * @example POST\n * @example HEAD\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `http.request.method`.\n */\nexport var ATTR_HTTP_METHOD = 'http.method';\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.\n *\n * @example 3495\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HTTP_REQUEST_BODY_SIZE = 'http.request.body.size';\n/**\n * The total size of the request in bytes. This should be the total number of bytes sent over the wire, including the request line (HTTP/1.1), framing (HTTP/2 and HTTP/3), headers, and request body if any.\n *\n * @example 1437\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HTTP_REQUEST_SIZE = 'http.request.size';\n/**\n * Deprecated, use `http.request.header.<key>` instead.\n *\n * @example 3495\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `http.request.header.<key>`.\n */\nexport var ATTR_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\n/**\n * Deprecated, use `http.request.body.size` instead.\n *\n * @example 5493\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `http.request.body.size`.\n */\nexport var ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = 'http.request_content_length_uncompressed';\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.\n *\n * @example 3495\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HTTP_RESPONSE_BODY_SIZE = 'http.response.body.size';\n/**\n * The total size of the response in bytes. This should be the total number of bytes sent over the wire, including the status line (HTTP/1.1), framing (HTTP/2 and HTTP/3), headers, and response body and trailers if any.\n *\n * @example 1437\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HTTP_RESPONSE_SIZE = 'http.response.size';\n/**\n * Deprecated, use `http.response.header.<key>` instead.\n *\n * @example 3495\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `http.response.header.<key>`.\n */\nexport var ATTR_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\n/**\n * Deprecated, use `http.response.body.size` instead.\n *\n * @example 5493\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replace by `http.response.body.size`.\n */\nexport var ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = 'http.response_content_length_uncompressed';\n/**\n * Deprecated, use `url.scheme` instead.\n *\n * @example http\n * @example https\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `url.scheme` instead.\n */\nexport var ATTR_HTTP_SCHEME = 'http.scheme';\n/**\n * Deprecated, use `server.address` instead.\n *\n * @example example.com\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `server.address`.\n */\nexport var ATTR_HTTP_SERVER_NAME = 'http.server_name';\n/**\n * Deprecated, use `http.response.status_code` instead.\n *\n * @example 200\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `http.response.status_code`.\n */\nexport var ATTR_HTTP_STATUS_CODE = 'http.status_code';\n/**\n * Deprecated, use `url.path` and `url.query` instead.\n *\n * @example /search?q=OpenTelemetry#SemConv\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Split to `url.path` and `url.query.\n */\nexport var ATTR_HTTP_TARGET = 'http.target';\n/**\n * Deprecated, use `url.full` instead.\n *\n * @example https://www.foo.bar/search?q=OpenTelemetry#SemConv\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `url.full`.\n */\nexport var ATTR_HTTP_URL = 'http.url';\n/**\n * Deprecated, use `user_agent.original` instead.\n *\n * @example CERN-LineMode/2.15 libwww/2.17b3\n * @example Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `user_agent.original`.\n */\nexport var ATTR_HTTP_USER_AGENT = 'http.user_agent';\n/**\n * An identifier for the hardware component, unique within the monitored host\n *\n * @example win32battery_battery_testsysa33_1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HW_ID = 'hw.id';\n/**\n * An easily-recognizable name for the hardware component\n *\n * @example eth0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HW_NAME = 'hw.name';\n/**\n * Unique identifier of the parent component (typically the `hw.id` attribute of the enclosure, or disk controller)\n *\n * @example dellStorage_perc_0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HW_PARENT = 'hw.parent';\n/**\n * The current state of the component\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HW_STATE = 'hw.state';\n/**\n  * Enum value \"degraded\" for attribute {@link ATTR_HW_STATE}.\n  */\nexport var HW_STATE_VALUE_DEGRADED = \"degraded\";\n/**\n  * Enum value \"failed\" for attribute {@link ATTR_HW_STATE}.\n  */\nexport var HW_STATE_VALUE_FAILED = \"failed\";\n/**\n  * Enum value \"ok\" for attribute {@link ATTR_HW_STATE}.\n  */\nexport var HW_STATE_VALUE_OK = \"ok\";\n/**\n * Type of the component\n *\n * @note Describes the category of the hardware component for which `hw.state` is being reported. For example, `hw.type=temperature` along with `hw.state=degraded` would indicate that the temperature of the hardware component has been reported as `degraded`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_HW_TYPE = 'hw.type';\n/**\n  * Enum value \"battery\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_BATTERY = \"battery\";\n/**\n  * Enum value \"cpu\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_CPU = \"cpu\";\n/**\n  * Enum value \"disk_controller\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_DISK_CONTROLLER = \"disk_controller\";\n/**\n  * Enum value \"enclosure\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_ENCLOSURE = \"enclosure\";\n/**\n  * Enum value \"fan\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_FAN = \"fan\";\n/**\n  * Enum value \"gpu\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_GPU = \"gpu\";\n/**\n  * Enum value \"logical_disk\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_LOGICAL_DISK = \"logical_disk\";\n/**\n  * Enum value \"memory\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_MEMORY = \"memory\";\n/**\n  * Enum value \"network\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_NETWORK = \"network\";\n/**\n  * Enum value \"physical_disk\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_PHYSICAL_DISK = \"physical_disk\";\n/**\n  * Enum value \"power_supply\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_POWER_SUPPLY = \"power_supply\";\n/**\n  * Enum value \"tape_drive\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_TAPE_DRIVE = \"tape_drive\";\n/**\n  * Enum value \"temperature\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_TEMPERATURE = \"temperature\";\n/**\n  * Enum value \"voltage\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport var HW_TYPE_VALUE_VOLTAGE = \"voltage\";\n/**\n * Deprecated use the `device.app.lifecycle` event definition including `ios.state` as a payload field instead.\n *\n * @note The iOS lifecycle states are defined in the [UIApplicationDelegate documentation](https://developer.apple.com/documentation/uikit/uiapplicationdelegate#1656902), and from which the `OS terminology` column values are derived.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Moved to a payload field of `device.app.lifecycle`.\n */\nexport var ATTR_IOS_STATE = 'ios.state';\n/**\n  * Enum value \"active\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport var IOS_STATE_VALUE_ACTIVE = \"active\";\n/**\n  * Enum value \"background\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport var IOS_STATE_VALUE_BACKGROUND = \"background\";\n/**\n  * Enum value \"foreground\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport var IOS_STATE_VALUE_FOREGROUND = \"foreground\";\n/**\n  * Enum value \"inactive\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport var IOS_STATE_VALUE_INACTIVE = \"inactive\";\n/**\n  * Enum value \"terminate\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport var IOS_STATE_VALUE_TERMINATE = \"terminate\";\n/**\n * Name of the buffer pool.\n *\n * @example mapped\n * @example direct\n *\n * @note Pool names are generally obtained via [BufferPoolMXBean#getName()](https://docs.oracle.com/en/java/javase/11/docs/api/java.management/java/lang/management/BufferPoolMXBean.html#getName()).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_JVM_BUFFER_POOL_NAME = 'jvm.buffer.pool.name';\n/**\n * The name of the cluster.\n *\n * @example opentelemetry-cluster\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_CLUSTER_NAME = 'k8s.cluster.name';\n/**\n * A pseudo-ID for the cluster, set to the UID of the `kube-system` namespace.\n *\n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n *\n * @note K8s doesn't have support for obtaining a cluster ID. If this is ever\n * added, we will recommend collecting the `k8s.cluster.uid` through the\n * official APIs. In the meantime, we are able to use the `uid` of the\n * `kube-system` namespace as a proxy for cluster ID. Read on for the\n * rationale.\n *\n * Every object created in a K8s cluster is assigned a distinct UID. The\n * `kube-system` namespace is used by Kubernetes itself and will exist\n * for the lifetime of the cluster. Using the `uid` of the `kube-system`\n * namespace is a reasonable proxy for the K8s ClusterID as it will only\n * change if the cluster is rebuilt. Furthermore, Kubernetes UIDs are\n * UUIDs as standardized by\n * [ISO/IEC 9834-8 and ITU-T X.667](https://www.itu.int/ITU-T/studygroups/com17/oid.html).\n * Which states:\n *\n * > If generated according to one of the mechanisms defined in Rec.\n * > ITU-T X.667 | ISO/IEC 9834-8, a UUID is either guaranteed to be\n * > different from all other UUIDs generated before 3603 A.D., or is\n * > extremely likely to be different (depending on the mechanism chosen).\n *\n * Therefore, UIDs between clusters should be extremely unlikely to\n * conflict.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_CLUSTER_UID = 'k8s.cluster.uid';\n/**\n * The name of the Container from Pod specification, must be unique within a Pod. Container runtime usually uses different globally unique name (`container.name`).\n *\n * @example redis\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_CONTAINER_NAME = 'k8s.container.name';\n/**\n * Number of times the container was restarted. This attribute can be used to identify a particular container (running or stopped) within a container spec.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_CONTAINER_RESTART_COUNT = 'k8s.container.restart_count';\n/**\n * Last terminated reason of the Container.\n *\n * @example Evicted\n * @example Error\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_CONTAINER_STATUS_LAST_TERMINATED_REASON = 'k8s.container.status.last_terminated_reason';\n/**\n * The name of the CronJob.\n *\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\n/**\n * The UID of the CronJob.\n *\n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\n/**\n * The name of the DaemonSet.\n *\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\n/**\n * The UID of the DaemonSet.\n *\n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\n/**\n * The name of the Deployment.\n *\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\n/**\n * The UID of the Deployment.\n *\n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\n/**\n * The name of the Job.\n *\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_JOB_NAME = 'k8s.job.name';\n/**\n * The UID of the Job.\n *\n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_JOB_UID = 'k8s.job.uid';\n/**\n * The name of the namespace that the pod is running in.\n *\n * @example default\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\n/**\n * The phase of the K8s namespace.\n *\n * @example active\n * @example terminating\n *\n * @note This attribute aligns with the `phase` field of the\n * [K8s NamespaceStatus](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#namespacestatus-v1-core)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_NAMESPACE_PHASE = 'k8s.namespace.phase';\n/**\n  * Enum value \"active\" for attribute {@link ATTR_K8S_NAMESPACE_PHASE}.\n  */\nexport var K8S_NAMESPACE_PHASE_VALUE_ACTIVE = \"active\";\n/**\n  * Enum value \"terminating\" for attribute {@link ATTR_K8S_NAMESPACE_PHASE}.\n  */\nexport var K8S_NAMESPACE_PHASE_VALUE_TERMINATING = \"terminating\";\n/**\n * The name of the Node.\n *\n * @example node-1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_NODE_NAME = 'k8s.node.name';\n/**\n * The UID of the Node.\n *\n * @example 1eb3a0c6-0477-4080-a9cb-0cb7db65c6a2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_NODE_UID = 'k8s.node.uid';\n/**\n * The annotation key-value pairs placed on the Pod, the `<key>` being the annotation name, the value being the annotation value.\n *\n * @example k8s.pod.annotation.kubernetes.io/enforce-mountable-secrets=true\n * @example k8s.pod.annotation.mycompany.io/arch=x64\n * @example k8s.pod.annotation.data=\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_POD_ANNOTATION = function (key) { return \"k8s.pod.annotation.\".concat(key); };\n/**\n * The label key-value pairs placed on the Pod, the `<key>` being the label name, the value being the label value.\n *\n * @example k8s.pod.label.app=my-app\n * @example k8s.pod.label.mycompany.io/arch=x64\n * @example k8s.pod.label.data=\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_POD_LABEL = function (key) { return \"k8s.pod.label.\".concat(key); };\n/**\n * Deprecated, use `k8s.pod.label` instead.\n *\n * @example k8s.pod.label.app=my-app\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `k8s.pod.label`.\n */\nexport var ATTR_K8S_POD_LABELS = function (key) { return \"k8s.pod.labels.\".concat(key); };\n/**\n * The name of the Pod.\n *\n * @example opentelemetry-pod-autoconf\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_POD_NAME = 'k8s.pod.name';\n/**\n * The UID of the Pod.\n *\n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_POD_UID = 'k8s.pod.uid';\n/**\n * The name of the ReplicaSet.\n *\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\n/**\n * The UID of the ReplicaSet.\n *\n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\n/**\n * The name of the StatefulSet.\n *\n * @example opentelemetry\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\n/**\n * The UID of the StatefulSet.\n *\n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\n/**\n * The name of the K8s volume.\n *\n * @example volume0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_VOLUME_NAME = 'k8s.volume.name';\n/**\n * The type of the K8s volume.\n *\n * @example emptyDir\n * @example persistentVolumeClaim\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_K8S_VOLUME_TYPE = 'k8s.volume.type';\n/**\n  * Enum value \"configMap\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport var K8S_VOLUME_TYPE_VALUE_CONFIG_MAP = \"configMap\";\n/**\n  * Enum value \"downwardAPI\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport var K8S_VOLUME_TYPE_VALUE_DOWNWARD_API = \"downwardAPI\";\n/**\n  * Enum value \"emptyDir\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport var K8S_VOLUME_TYPE_VALUE_EMPTY_DIR = \"emptyDir\";\n/**\n  * Enum value \"local\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport var K8S_VOLUME_TYPE_VALUE_LOCAL = \"local\";\n/**\n  * Enum value \"persistentVolumeClaim\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport var K8S_VOLUME_TYPE_VALUE_PERSISTENT_VOLUME_CLAIM = \"persistentVolumeClaim\";\n/**\n  * Enum value \"secret\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport var K8S_VOLUME_TYPE_VALUE_SECRET = \"secret\";\n/**\n * The Linux Slab memory state\n *\n * @example reclaimable\n * @example unreclaimable\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_LINUX_MEMORY_SLAB_STATE = 'linux.memory.slab.state';\n/**\n  * Enum value \"reclaimable\" for attribute {@link ATTR_LINUX_MEMORY_SLAB_STATE}.\n  */\nexport var LINUX_MEMORY_SLAB_STATE_VALUE_RECLAIMABLE = \"reclaimable\";\n/**\n  * Enum value \"unreclaimable\" for attribute {@link ATTR_LINUX_MEMORY_SLAB_STATE}.\n  */\nexport var LINUX_MEMORY_SLAB_STATE_VALUE_UNRECLAIMABLE = \"unreclaimable\";\n/**\n * The basename of the file.\n *\n * @example audit.log\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_LOG_FILE_NAME = 'log.file.name';\n/**\n * The basename of the file, with symlinks resolved.\n *\n * @example uuid.log\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_LOG_FILE_NAME_RESOLVED = 'log.file.name_resolved';\n/**\n * The full path to the file.\n *\n * @example /var/log/mysql/audit.log\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_LOG_FILE_PATH = 'log.file.path';\n/**\n * The full path to the file, with symlinks resolved.\n *\n * @example /var/lib/docker/uuid.log\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_LOG_FILE_PATH_RESOLVED = 'log.file.path_resolved';\n/**\n * The stream associated with the log. See below for a list of well-known values.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_LOG_IOSTREAM = 'log.iostream';\n/**\n  * Enum value \"stderr\" for attribute {@link ATTR_LOG_IOSTREAM}.\n  */\nexport var LOG_IOSTREAM_VALUE_STDERR = \"stderr\";\n/**\n  * Enum value \"stdout\" for attribute {@link ATTR_LOG_IOSTREAM}.\n  */\nexport var LOG_IOSTREAM_VALUE_STDOUT = \"stdout\";\n/**\n * The complete original Log Record.\n *\n * @example 77 <86>1 2015-08-06T21:58:59.694Z 192.168.2.133 inactive - - - Something happened\n * @example [INFO] 8/3/24 12:34:56 Something happened\n *\n * @note This value **MAY** be added when processing a Log Record which was originally transmitted as a string or equivalent data type AND the Body field of the Log Record does not contain the same value. (e.g. a syslog or a log record read from a file.)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_LOG_RECORD_ORIGINAL = 'log.record.original';\n/**\n * A unique identifier for the Log Record.\n *\n * @example 01ARZ3NDEKTSV4RRFFQ69G5FAV\n *\n * @note If an id is provided, other log records with the same id will be considered duplicates and can be removed safely. This means, that two distinguishable log records **MUST** have different values.\n * The id **MAY** be an [Universally Unique Lexicographically Sortable Identifier (ULID)](https://github.com/ulid/spec), but other identifiers (e.g. UUID) may be used as needed.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_LOG_RECORD_UID = 'log.record.uid';\n/**\n * Deprecated, use `rpc.message.compressed_size` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `rpc.message.compressed_size`.\n */\nexport var ATTR_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\n/**\n * Deprecated, use `rpc.message.id` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `rpc.message.id`.\n */\nexport var ATTR_MESSAGE_ID = 'message.id';\n/**\n * Deprecated, use `rpc.message.type` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `rpc.message.type`.\n */\nexport var ATTR_MESSAGE_TYPE = 'message.type';\n/**\n  * Enum value \"RECEIVED\" for attribute {@link ATTR_MESSAGE_TYPE}.\n  */\nexport var MESSAGE_TYPE_VALUE_RECEIVED = \"RECEIVED\";\n/**\n  * Enum value \"SENT\" for attribute {@link ATTR_MESSAGE_TYPE}.\n  */\nexport var MESSAGE_TYPE_VALUE_SENT = \"SENT\";\n/**\n * Deprecated, use `rpc.message.uncompressed_size` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `rpc.message.uncompressed_size`.\n */\nexport var ATTR_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n/**\n * The number of messages sent, received, or processed in the scope of the batching operation.\n *\n * @example 0\n * @example 1\n * @example 2\n *\n * @note Instrumentations **SHOULD NOT** set `messaging.batch.message_count` on spans that operate with a single message. When a messaging client library supports both batch and single-message API for the same operation, instrumentations **SHOULD** use `messaging.batch.message_count` for batching APIs and **SHOULD NOT** use it for single-message APIs.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_BATCH_MESSAGE_COUNT = 'messaging.batch.message_count';\n/**\n * A unique identifier for the client that consumes or produces a message.\n *\n * @example client-5\n * @example myhost@8742@s8083jm\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_CLIENT_ID = 'messaging.client.id';\n/**\n * The name of the consumer group with which a consumer is associated.\n *\n * @example my-group\n * @example indexer\n *\n * @note Semantic conventions for individual messaging systems **SHOULD** document whether `messaging.consumer.group.name` is applicable and what it means in the context of that system.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_CONSUMER_GROUP_NAME = 'messaging.consumer.group.name';\n/**\n * A boolean that is true if the message destination is anonymous (could be unnamed or have auto-generated name).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_DESTINATION_ANONYMOUS = 'messaging.destination.anonymous';\n/**\n * The message destination name\n *\n * @example MyQueue\n * @example MyTopic\n *\n * @note Destination name **SHOULD** uniquely identify a specific queue, topic or other entity within the broker. If\n * the broker doesn't have such notion, the destination name **SHOULD** uniquely identify the broker.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_DESTINATION_NAME = 'messaging.destination.name';\n/**\n * The identifier of the partition messages are sent to or received from, unique within the `messaging.destination.name`.\n *\n * @example \"1\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_DESTINATION_PARTITION_ID = 'messaging.destination.partition.id';\n/**\n * The name of the destination subscription from which a message is consumed.\n *\n * @example subscription-a\n *\n * @note Semantic conventions for individual messaging systems **SHOULD** document whether `messaging.destination.subscription.name` is applicable and what it means in the context of that system.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_DESTINATION_SUBSCRIPTION_NAME = 'messaging.destination.subscription.name';\n/**\n * Low cardinality representation of the messaging destination name\n *\n * @example /customers/{customerId}\n *\n * @note Destination names could be constructed from templates. An example would be a destination name involving a user name or product id. Although the destination name in this case is of high cardinality, the underlying template is of low cardinality and can be effectively used for grouping and aggregation.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_DESTINATION_TEMPLATE = 'messaging.destination.template';\n/**\n * A boolean that is true if the message destination is temporary and might not exist anymore after messages are processed.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_DESTINATION_TEMPORARY = 'messaging.destination.temporary';\n/**\n * Deprecated, no replacement at this time.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated No replacement at this time.\n */\nexport var ATTR_MESSAGING_DESTINATION_PUBLISH_ANONYMOUS = 'messaging.destination_publish.anonymous';\n/**\n * Deprecated, no replacement at this time.\n *\n * @example MyQueue\n * @example MyTopic\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated No replacement at this time.\n */\nexport var ATTR_MESSAGING_DESTINATION_PUBLISH_NAME = 'messaging.destination_publish.name';\n/**\n * Deprecated, use `messaging.consumer.group.name` instead.\n *\n * @example \"$Default\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `messaging.consumer.group.name`.\n */\nexport var ATTR_MESSAGING_EVENTHUBS_CONSUMER_GROUP = 'messaging.eventhubs.consumer.group';\n/**\n * The UTC epoch seconds at which the message has been accepted and stored in the entity.\n *\n * @example 1701393730\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_EVENTHUBS_MESSAGE_ENQUEUED_TIME = 'messaging.eventhubs.message.enqueued_time';\n/**\n * The ack deadline in seconds set for the modify ack deadline request.\n *\n * @example 10\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ACK_DEADLINE = 'messaging.gcp_pubsub.message.ack_deadline';\n/**\n * The ack id for a given message.\n *\n * @example \"ack_id\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ACK_ID = 'messaging.gcp_pubsub.message.ack_id';\n/**\n * The delivery attempt for a given message.\n *\n * @example 2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_DELIVERY_ATTEMPT = 'messaging.gcp_pubsub.message.delivery_attempt';\n/**\n * The ordering key for a given message. If the attribute is not present, the message does not have an ordering key.\n *\n * @example \"ordering_key\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ORDERING_KEY = 'messaging.gcp_pubsub.message.ordering_key';\n/**\n * Deprecated, use `messaging.consumer.group.name` instead.\n *\n * @example \"my-group\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `messaging.consumer.group.name`.\n */\nexport var ATTR_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer.group';\n/**\n * Deprecated, use `messaging.destination.partition.id` instead.\n *\n * @example 2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `messaging.destination.partition.id`.\n */\nexport var ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION = 'messaging.kafka.destination.partition';\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they're processed on the same partition. They differ from `messaging.message.id` in that they're not unique. If the key is `null`, the attribute **MUST NOT** be set.\n *\n * @example \"myKey\"\n *\n * @note If the key type is not string, it's string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don't include its value.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message.key';\n/**\n * Deprecated, use `messaging.kafka.offset` instead.\n *\n * @example 42\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `messaging.kafka.offset`.\n */\nexport var ATTR_MESSAGING_KAFKA_MESSAGE_OFFSET = 'messaging.kafka.message.offset';\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE = 'messaging.kafka.message.tombstone';\n/**\n * The offset of a record in the corresponding Kafka partition.\n *\n * @example 42\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_KAFKA_OFFSET = 'messaging.kafka.offset';\n/**\n * The size of the message body in bytes.\n *\n * @example 1439\n *\n * @note This can refer to both the compressed or uncompressed body size. If both sizes are known, the uncompressed\n * body size should be used.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_MESSAGE_BODY_SIZE = 'messaging.message.body.size';\n/**\n * The conversation ID identifying the conversation to which the message belongs, represented as a string. Sometimes called \"Correlation ID\".\n *\n * @example \"MyConversationId\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_MESSAGE_CONVERSATION_ID = 'messaging.message.conversation_id';\n/**\n * The size of the message body and metadata in bytes.\n *\n * @example 2738\n *\n * @note This can refer to both the compressed or uncompressed size. If both sizes are known, the uncompressed\n * size should be used.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_MESSAGE_ENVELOPE_SIZE = 'messaging.message.envelope.size';\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @example \"452a7c7c7c7048c2f887f61572b18fc2\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_MESSAGE_ID = 'messaging.message.id';\n/**\n * Deprecated, use `messaging.operation.type` instead.\n *\n * @example publish\n * @example create\n * @example process\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `messaging.operation.type`.\n */\nexport var ATTR_MESSAGING_OPERATION = 'messaging.operation';\n/**\n * The system-specific name of the messaging operation.\n *\n * @example ack\n * @example nack\n * @example send\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_OPERATION_NAME = 'messaging.operation.name';\n/**\n * A string identifying the type of the messaging operation.\n *\n * @note If a custom value is used, it **MUST** be of low cardinality.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_OPERATION_TYPE = 'messaging.operation.type';\n/**\n  * Enum value \"create\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport var MESSAGING_OPERATION_TYPE_VALUE_CREATE = \"create\";\n/**\n  * Enum value \"deliver\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport var MESSAGING_OPERATION_TYPE_VALUE_DELIVER = \"deliver\";\n/**\n  * Enum value \"process\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport var MESSAGING_OPERATION_TYPE_VALUE_PROCESS = \"process\";\n/**\n  * Enum value \"publish\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport var MESSAGING_OPERATION_TYPE_VALUE_PUBLISH = \"publish\";\n/**\n  * Enum value \"receive\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport var MESSAGING_OPERATION_TYPE_VALUE_RECEIVE = \"receive\";\n/**\n  * Enum value \"send\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport var MESSAGING_OPERATION_TYPE_VALUE_SEND = \"send\";\n/**\n  * Enum value \"settle\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport var MESSAGING_OPERATION_TYPE_VALUE_SETTLE = \"settle\";\n/**\n * RabbitMQ message routing key.\n *\n * @example \"myKey\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY = 'messaging.rabbitmq.destination.routing_key';\n/**\n * RabbitMQ message delivery tag\n *\n * @example 123\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_RABBITMQ_MESSAGE_DELIVERY_TAG = 'messaging.rabbitmq.message.delivery_tag';\n/**\n * Deprecated, use `messaging.consumer.group.name` instead.\n *\n * @example \"myConsumerGroup\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `messaging.consumer.group.name` on the consumer spans. No replacement for producer spans.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_CLIENT_GROUP = 'messaging.rocketmq.client_group';\n/**\n * Model of message consumption. This only applies to consumer spans.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_CONSUMPTION_MODEL = 'messaging.rocketmq.consumption_model';\n/**\n  * Enum value \"broadcasting\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_CONSUMPTION_MODEL}.\n  */\nexport var MESSAGING_ROCKETMQ_CONSUMPTION_MODEL_VALUE_BROADCASTING = \"broadcasting\";\n/**\n  * Enum value \"clustering\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_CONSUMPTION_MODEL}.\n  */\nexport var MESSAGING_ROCKETMQ_CONSUMPTION_MODEL_VALUE_CLUSTERING = \"clustering\";\n/**\n * The delay time level for delay message, which determines the message delay time.\n *\n * @example 3\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_MESSAGE_DELAY_TIME_LEVEL = 'messaging.rocketmq.message.delay_time_level';\n/**\n * The timestamp in milliseconds that the delay message is expected to be delivered to consumer.\n *\n * @example 1665987217045\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_MESSAGE_DELIVERY_TIMESTAMP = 'messaging.rocketmq.message.delivery_timestamp';\n/**\n * It is essential for FIFO message. Messages that belong to the same message group are always processed one by one within the same consumer group.\n *\n * @example \"myMessageGroup\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_MESSAGE_GROUP = 'messaging.rocketmq.message.group';\n/**\n * Key(s) of message, another way to mark message besides message id.\n *\n * @example [\"keyA\", \"keyB\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_MESSAGE_KEYS = 'messaging.rocketmq.message.keys';\n/**\n * The secondary classifier of message besides topic.\n *\n * @example \"tagA\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_MESSAGE_TAG = 'messaging.rocketmq.message.tag';\n/**\n * Type of message.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE = 'messaging.rocketmq.message.type';\n/**\n  * Enum value \"delay\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE}.\n  */\nexport var MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_DELAY = \"delay\";\n/**\n  * Enum value \"fifo\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE}.\n  */\nexport var MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_FIFO = \"fifo\";\n/**\n  * Enum value \"normal\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE}.\n  */\nexport var MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_NORMAL = \"normal\";\n/**\n  * Enum value \"transaction\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE}.\n  */\nexport var MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_TRANSACTION = \"transaction\";\n/**\n * Namespace of RocketMQ resources, resources in different namespaces are individual.\n *\n * @example \"myNamespace\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_ROCKETMQ_NAMESPACE = 'messaging.rocketmq.namespace';\n/**\n * Deprecated, use `messaging.destination.subscription.name` instead.\n *\n * @example \"subscription-a\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `messaging.destination.subscription.name`.\n */\nexport var ATTR_MESSAGING_SERVICEBUS_DESTINATION_SUBSCRIPTION_NAME = 'messaging.servicebus.destination.subscription_name';\n/**\n * Describes the [settlement type](https://learn.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement#peeklock).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS = 'messaging.servicebus.disposition_status';\n/**\n  * Enum value \"abandon\" for attribute {@link ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS}.\n  */\nexport var MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_ABANDON = \"abandon\";\n/**\n  * Enum value \"complete\" for attribute {@link ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS}.\n  */\nexport var MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_COMPLETE = \"complete\";\n/**\n  * Enum value \"dead_letter\" for attribute {@link ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS}.\n  */\nexport var MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_DEAD_LETTER = \"dead_letter\";\n/**\n  * Enum value \"defer\" for attribute {@link ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS}.\n  */\nexport var MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_DEFER = \"defer\";\n/**\n * Number of deliveries that have been attempted for this message.\n *\n * @example 2\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_SERVICEBUS_MESSAGE_DELIVERY_COUNT = 'messaging.servicebus.message.delivery_count';\n/**\n * The UTC epoch seconds at which the message has been accepted and stored in the entity.\n *\n * @example 1701393730\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_SERVICEBUS_MESSAGE_ENQUEUED_TIME = 'messaging.servicebus.message.enqueued_time';\n/**\n * The messaging system as identified by the client instrumentation.\n *\n * @note The actual messaging system may differ from the one known by the client. For example, when using Kafka client libraries to communicate with Azure Event Hubs, the `messaging.system` is set to `kafka` based on the instrumentation's best knowledge.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_MESSAGING_SYSTEM = 'messaging.system';\n/**\n  * Enum value \"activemq\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_ACTIVEMQ = \"activemq\";\n/**\n  * Enum value \"aws_sqs\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_AWS_SQS = \"aws_sqs\";\n/**\n  * Enum value \"eventgrid\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_EVENTGRID = \"eventgrid\";\n/**\n  * Enum value \"eventhubs\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_EVENTHUBS = \"eventhubs\";\n/**\n  * Enum value \"gcp_pubsub\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_GCP_PUBSUB = \"gcp_pubsub\";\n/**\n  * Enum value \"jms\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_JMS = \"jms\";\n/**\n  * Enum value \"kafka\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_KAFKA = \"kafka\";\n/**\n  * Enum value \"pulsar\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_PULSAR = \"pulsar\";\n/**\n  * Enum value \"rabbitmq\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_RABBITMQ = \"rabbitmq\";\n/**\n  * Enum value \"rocketmq\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_ROCKETMQ = \"rocketmq\";\n/**\n  * Enum value \"servicebus\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport var MESSAGING_SYSTEM_VALUE_SERVICEBUS = \"servicebus\";\n/**\n * Deprecated, use `network.local.address`.\n *\n * @example \"192.168.0.1\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.local.address`.\n */\nexport var ATTR_NET_HOST_IP = 'net.host.ip';\n/**\n * Deprecated, use `server.address`.\n *\n * @example example.com\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `server.address`.\n */\nexport var ATTR_NET_HOST_NAME = 'net.host.name';\n/**\n * Deprecated, use `server.port`.\n *\n * @example 8080\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `server.port`.\n */\nexport var ATTR_NET_HOST_PORT = 'net.host.port';\n/**\n * Deprecated, use `network.peer.address`.\n *\n * @example \"127.0.0.1\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.peer.address`.\n */\nexport var ATTR_NET_PEER_IP = 'net.peer.ip';\n/**\n * Deprecated, use `server.address` on client spans and `client.address` on server spans.\n *\n * @example example.com\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `server.address` on client spans and `client.address` on server spans.\n */\nexport var ATTR_NET_PEER_NAME = 'net.peer.name';\n/**\n * Deprecated, use `server.port` on client spans and `client.port` on server spans.\n *\n * @example 8080\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `server.port` on client spans and `client.port` on server spans.\n */\nexport var ATTR_NET_PEER_PORT = 'net.peer.port';\n/**\n * Deprecated, use `network.protocol.name`.\n *\n * @example amqp\n * @example http\n * @example mqtt\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.protocol.name`.\n */\nexport var ATTR_NET_PROTOCOL_NAME = 'net.protocol.name';\n/**\n * Deprecated, use `network.protocol.version`.\n *\n * @example \"3.1.1\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.protocol.version`.\n */\nexport var ATTR_NET_PROTOCOL_VERSION = 'net.protocol.version';\n/**\n * Deprecated, use `network.transport` and `network.type`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Split to `network.transport` and `network.type`.\n */\nexport var ATTR_NET_SOCK_FAMILY = 'net.sock.family';\n/**\n  * Enum value \"inet\" for attribute {@link ATTR_NET_SOCK_FAMILY}.\n  */\nexport var NET_SOCK_FAMILY_VALUE_INET = \"inet\";\n/**\n  * Enum value \"inet6\" for attribute {@link ATTR_NET_SOCK_FAMILY}.\n  */\nexport var NET_SOCK_FAMILY_VALUE_INET6 = \"inet6\";\n/**\n  * Enum value \"unix\" for attribute {@link ATTR_NET_SOCK_FAMILY}.\n  */\nexport var NET_SOCK_FAMILY_VALUE_UNIX = \"unix\";\n/**\n * Deprecated, use `network.local.address`.\n *\n * @example /var/my.sock\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.local.address`.\n */\nexport var ATTR_NET_SOCK_HOST_ADDR = 'net.sock.host.addr';\n/**\n * Deprecated, use `network.local.port`.\n *\n * @example 8080\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.local.port`.\n */\nexport var ATTR_NET_SOCK_HOST_PORT = 'net.sock.host.port';\n/**\n * Deprecated, use `network.peer.address`.\n *\n * @example 192.168.0.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.peer.address`.\n */\nexport var ATTR_NET_SOCK_PEER_ADDR = 'net.sock.peer.addr';\n/**\n * Deprecated, no replacement at this time.\n *\n * @example /var/my.sock\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Removed.\n */\nexport var ATTR_NET_SOCK_PEER_NAME = 'net.sock.peer.name';\n/**\n * Deprecated, use `network.peer.port`.\n *\n * @example 65531\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.peer.port`.\n */\nexport var ATTR_NET_SOCK_PEER_PORT = 'net.sock.peer.port';\n/**\n * Deprecated, use `network.transport`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `network.transport`.\n */\nexport var ATTR_NET_TRANSPORT = 'net.transport';\n/**\n  * Enum value \"inproc\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport var NET_TRANSPORT_VALUE_INPROC = \"inproc\";\n/**\n  * Enum value \"ip_tcp\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport var NET_TRANSPORT_VALUE_IP_TCP = \"ip_tcp\";\n/**\n  * Enum value \"ip_udp\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport var NET_TRANSPORT_VALUE_IP_UDP = \"ip_udp\";\n/**\n  * Enum value \"other\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport var NET_TRANSPORT_VALUE_OTHER = \"other\";\n/**\n  * Enum value \"pipe\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport var NET_TRANSPORT_VALUE_PIPE = \"pipe\";\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @example \"DE\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_CARRIER_ICC = 'network.carrier.icc';\n/**\n * The mobile carrier country code.\n *\n * @example \"310\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_CARRIER_MCC = 'network.carrier.mcc';\n/**\n * The mobile carrier network code.\n *\n * @example \"001\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_CARRIER_MNC = 'network.carrier.mnc';\n/**\n * The name of the mobile carrier.\n *\n * @example \"sprint\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_CARRIER_NAME = 'network.carrier.name';\n/**\n * The state of network connection\n *\n * @example close_wait\n *\n * @note Connection states are defined as part of the [rfc9293](https://datatracker.ietf.org/doc/html/rfc9293#section-3.3.2)\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_CONNECTION_STATE = 'network.connection.state';\n/**\n  * Enum value \"close_wait\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_CLOSE_WAIT = \"close_wait\";\n/**\n  * Enum value \"closed\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_CLOSED = \"closed\";\n/**\n  * Enum value \"closing\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_CLOSING = \"closing\";\n/**\n  * Enum value \"established\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_ESTABLISHED = \"established\";\n/**\n  * Enum value \"fin_wait_1\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_FIN_WAIT_1 = \"fin_wait_1\";\n/**\n  * Enum value \"fin_wait_2\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_FIN_WAIT_2 = \"fin_wait_2\";\n/**\n  * Enum value \"last_ack\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_LAST_ACK = \"last_ack\";\n/**\n  * Enum value \"listen\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_LISTEN = \"listen\";\n/**\n  * Enum value \"syn_received\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_SYN_RECEIVED = \"syn_received\";\n/**\n  * Enum value \"syn_sent\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_SYN_SENT = \"syn_sent\";\n/**\n  * Enum value \"time_wait\" for attribute {@link ATTR_NETWORK_CONNECTION_STATE}.\n  */\nexport var NETWORK_CONNECTION_STATE_VALUE_TIME_WAIT = \"time_wait\";\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @example \"LTE\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_CONNECTION_SUBTYPE = 'network.connection.subtype';\n/**\n  * Enum value \"cdma\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA = \"cdma\";\n/**\n  * Enum value \"cdma2000_1xrtt\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT = \"cdma2000_1xrtt\";\n/**\n  * Enum value \"edge\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE = \"edge\";\n/**\n  * Enum value \"ehrpd\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD = \"ehrpd\";\n/**\n  * Enum value \"evdo_0\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 = \"evdo_0\";\n/**\n  * Enum value \"evdo_a\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A = \"evdo_a\";\n/**\n  * Enum value \"evdo_b\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B = \"evdo_b\";\n/**\n  * Enum value \"gprs\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS = \"gprs\";\n/**\n  * Enum value \"gsm\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_GSM = \"gsm\";\n/**\n  * Enum value \"hsdpa\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA = \"hsdpa\";\n/**\n  * Enum value \"hspa\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA = \"hspa\";\n/**\n  * Enum value \"hspap\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP = \"hspap\";\n/**\n  * Enum value \"hsupa\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA = \"hsupa\";\n/**\n  * Enum value \"iden\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN = \"iden\";\n/**\n  * Enum value \"iwlan\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN = \"iwlan\";\n/**\n  * Enum value \"lte\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_LTE = \"lte\";\n/**\n  * Enum value \"lte_ca\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA = \"lte_ca\";\n/**\n  * Enum value \"nr\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_NR = \"nr\";\n/**\n  * Enum value \"nrnsa\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA = \"nrnsa\";\n/**\n  * Enum value \"td_scdma\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA = \"td_scdma\";\n/**\n  * Enum value \"umts\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport var NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS = \"umts\";\n/**\n * The internet connection type.\n *\n * @example \"wifi\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_CONNECTION_TYPE = 'network.connection.type';\n/**\n  * Enum value \"cell\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport var NETWORK_CONNECTION_TYPE_VALUE_CELL = \"cell\";\n/**\n  * Enum value \"unavailable\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport var NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE = \"unavailable\";\n/**\n  * Enum value \"unknown\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport var NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN = \"unknown\";\n/**\n  * Enum value \"wifi\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport var NETWORK_CONNECTION_TYPE_VALUE_WIFI = \"wifi\";\n/**\n  * Enum value \"wired\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport var NETWORK_CONNECTION_TYPE_VALUE_WIRED = \"wired\";\n/**\n * The network interface name.\n *\n * @example lo\n * @example eth0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_INTERFACE_NAME = 'network.interface.name';\n/**\n * The network IO operation direction.\n *\n * @example transmit\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NETWORK_IO_DIRECTION = 'network.io.direction';\n/**\n  * Enum value \"receive\" for attribute {@link ATTR_NETWORK_IO_DIRECTION}.\n  */\nexport var NETWORK_IO_DIRECTION_VALUE_RECEIVE = \"receive\";\n/**\n  * Enum value \"transmit\" for attribute {@link ATTR_NETWORK_IO_DIRECTION}.\n  */\nexport var NETWORK_IO_DIRECTION_VALUE_TRANSMIT = \"transmit\";\n/**\n * The state of event loop time.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_NODEJS_EVENTLOOP_STATE = 'nodejs.eventloop.state';\n/**\n  * Enum value \"active\" for attribute {@link ATTR_NODEJS_EVENTLOOP_STATE}.\n  */\nexport var NODEJS_EVENTLOOP_STATE_VALUE_ACTIVE = \"active\";\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_NODEJS_EVENTLOOP_STATE}.\n  */\nexport var NODEJS_EVENTLOOP_STATE_VALUE_IDLE = \"idle\";\n/**\n * The digest of the OCI image manifest. For container images specifically is the digest by which the container image is known.\n *\n * @example sha256:e4ca62c0d62f3e886e684806dfe9d4e0cda60d54986898173c1083856cfda0f4\n *\n * @note Follows [OCI Image Manifest Specification](https://github.com/opencontainers/image-spec/blob/main/manifest.md), and specifically the [Digest property](https://github.com/opencontainers/image-spec/blob/main/descriptor.md#digests).\n * An example can be found in [Example Image Manifest](https://docs.docker.com/registry/spec/manifest-v2-2/#example-image-manifest).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_OCI_MANIFEST_DIGEST = 'oci.manifest.digest';\n/**\n * Parent-child Reference type\n *\n * @note The causal relationship between a child Span and a parent Span.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_OPENTRACING_REF_TYPE = 'opentracing.ref_type';\n/**\n  * Enum value \"child_of\" for attribute {@link ATTR_OPENTRACING_REF_TYPE}.\n  */\nexport var OPENTRACING_REF_TYPE_VALUE_CHILD_OF = \"child_of\";\n/**\n  * Enum value \"follows_from\" for attribute {@link ATTR_OPENTRACING_REF_TYPE}.\n  */\nexport var OPENTRACING_REF_TYPE_VALUE_FOLLOWS_FROM = \"follows_from\";\n/**\n * Unique identifier for a particular build or compilation of the operating system.\n *\n * @example TQ3C.230805.001.B2\n * @example 20E247\n * @example 22621\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_OS_BUILD_ID = 'os.build_id';\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @example Microsoft Windows [Version 10.0.18363.778]\n * @example Ubuntu 18.04.1 LTS\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_OS_DESCRIPTION = 'os.description';\n/**\n * Human readable operating system name.\n *\n * @example iOS\n * @example Android\n * @example Ubuntu\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_OS_NAME = 'os.name';\n/**\n * The operating system type.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_OS_TYPE = 'os.type';\n/**\n  * Enum value \"aix\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_AIX = \"aix\";\n/**\n  * Enum value \"darwin\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_DARWIN = \"darwin\";\n/**\n  * Enum value \"dragonflybsd\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_DRAGONFLYBSD = \"dragonflybsd\";\n/**\n  * Enum value \"freebsd\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_FREEBSD = \"freebsd\";\n/**\n  * Enum value \"hpux\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_HPUX = \"hpux\";\n/**\n  * Enum value \"linux\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_LINUX = \"linux\";\n/**\n  * Enum value \"netbsd\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_NETBSD = \"netbsd\";\n/**\n  * Enum value \"openbsd\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_OPENBSD = \"openbsd\";\n/**\n  * Enum value \"solaris\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_SOLARIS = \"solaris\";\n/**\n  * Enum value \"windows\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_WINDOWS = \"windows\";\n/**\n  * Enum value \"z_os\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport var OS_TYPE_VALUE_Z_OS = \"z_os\";\n/**\n * The version string of the operating system as defined in [Version Attributes](/docs/resource/README.md#version-attributes).\n *\n * @example 14.2.1\n * @example 18.04.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_OS_VERSION = 'os.version';\n/**\n * Deprecated. Use the `otel.scope.name` attribute\n *\n * @example io.opentelemetry.contrib.mongodb\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Use the `otel.scope.name` attribute.\n */\nexport var ATTR_OTEL_LIBRARY_NAME = 'otel.library.name';\n/**\n * Deprecated. Use the `otel.scope.version` attribute.\n *\n * @example 1.0.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Use the `otel.scope.version` attribute.\n */\nexport var ATTR_OTEL_LIBRARY_VERSION = 'otel.library.version';\n/**\n * The [`service.name`](/docs/resource/README.md#service) of the remote service. **SHOULD** be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @example \"AuthTokenCache\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PEER_SERVICE = 'peer.service';\n/**\n * Deprecated, use `db.client.connection.pool.name` instead.\n *\n * @example myDataSource\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.client.connection.pool.name`.\n */\nexport var ATTR_POOL_NAME = 'pool.name';\n/**\n * Length of the process.command_args array\n *\n * @example 4\n *\n * @note This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_ARGS_COUNT = 'process.args_count';\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @example cmd/otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_COMMAND = 'process.command';\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @example [\"cmd/otecol\", \"--config=config.yaml\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_COMMAND_ARGS = 'process.command_args';\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @example C:\\\\cmd\\\\otecol --config=\"my directory\\\\config.yaml\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_COMMAND_LINE = 'process.command_line';\n/**\n * Specifies whether the context switches for this data point were voluntary or involuntary.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_CONTEXT_SWITCH_TYPE = 'process.context_switch_type';\n/**\n  * Enum value \"involuntary\" for attribute {@link ATTR_PROCESS_CONTEXT_SWITCH_TYPE}.\n  */\nexport var PROCESS_CONTEXT_SWITCH_TYPE_VALUE_INVOLUNTARY = \"involuntary\";\n/**\n  * Enum value \"voluntary\" for attribute {@link ATTR_PROCESS_CONTEXT_SWITCH_TYPE}.\n  */\nexport var PROCESS_CONTEXT_SWITCH_TYPE_VALUE_VOLUNTARY = \"voluntary\";\n/**\n * Deprecated, use `cpu.mode` instead.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cpu.mode`\n */\nexport var ATTR_PROCESS_CPU_STATE = 'process.cpu.state';\n/**\n  * Enum value \"system\" for attribute {@link ATTR_PROCESS_CPU_STATE}.\n  */\nexport var PROCESS_CPU_STATE_VALUE_SYSTEM = \"system\";\n/**\n  * Enum value \"user\" for attribute {@link ATTR_PROCESS_CPU_STATE}.\n  */\nexport var PROCESS_CPU_STATE_VALUE_USER = \"user\";\n/**\n  * Enum value \"wait\" for attribute {@link ATTR_PROCESS_CPU_STATE}.\n  */\nexport var PROCESS_CPU_STATE_VALUE_WAIT = \"wait\";\n/**\n * The date and time the process was created, in ISO 8601 format.\n *\n * @example 2023-11-21T09:25:34.853Z\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_CREATION_TIME = 'process.creation.time';\n/**\n * The GNU build ID as found in the `.note.gnu.build-id` ELF section (hex string).\n *\n * @example c89b11207f6479603b0d49bf291c092c2b719293\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_EXECUTABLE_BUILD_ID_GNU = 'process.executable.build_id.gnu';\n/**\n * The Go build ID as retrieved by `go tool buildid <go executable>`.\n *\n * @example foh3mEXu7BLZjsN9pOwG/kATcXlYVCDEFouRMQed_/WwRFB1hPo9LBkekthSPG/x8hMC8emW2cCjXD0_1aY\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_EXECUTABLE_BUILD_ID_GO = 'process.executable.build_id.go';\n/**\n * Profiling specific build ID for executables. See the OTel specification for Profiles for more information.\n *\n * @example 600DCAFE4A110000F2BF38C493F5FB92\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_EXECUTABLE_BUILD_ID_HTLHASH = 'process.executable.build_id.htlhash';\n/**\n * \"Deprecated, use `process.executable.build_id.htlhash` instead.\"\n *\n * @example 600DCAFE4A110000F2BF38C493F5FB92\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `process.executable.build_id.htlhash`\n */\nexport var ATTR_PROCESS_EXECUTABLE_BUILD_ID_PROFILING = 'process.executable.build_id.profiling';\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @example otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @example /usr/bin/cmd/otelcol\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\n/**\n * The exit code of the process.\n *\n * @example 127\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_EXIT_CODE = 'process.exit.code';\n/**\n * The date and time the process exited, in ISO 8601 format.\n *\n * @example 2023-11-21T09:26:12.315Z\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_EXIT_TIME = 'process.exit.time';\n/**\n * The PID of the process's group leader. This is also the process group ID (PGID) of the process.\n *\n * @example 23\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_GROUP_LEADER_PID = 'process.group_leader.pid';\n/**\n * Whether the process is connected to an interactive shell.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_INTERACTIVE = 'process.interactive';\n/**\n * The control group associated with the process.\n *\n * @example 1:name=systemd:/user.slice/user-1000.slice/session-3.scope\n * @example 0::/user.slice/user-1000.slice/user@1000.service/tmux-spawn-0267755b-4639-4a27-90ed-f19f88e53748.scope\n *\n * @note Control groups (cgroups) are a kernel feature used to organize and manage process resources. This attribute provides the path(s) to the cgroup(s) associated with the process, which should match the contents of the [/proc/[PID]/cgroup](https://man7.org/linux/man-pages/man7/cgroups.7.html) file.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_LINUX_CGROUP = 'process.linux.cgroup';\n/**\n * The username of the user that owns the process.\n *\n * @example root\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_OWNER = 'process.owner';\n/**\n * The type of page fault for this data point. Type `major` is for major/hard page faults, and `minor` is for minor/soft page faults.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_PAGING_FAULT_TYPE = 'process.paging.fault_type';\n/**\n  * Enum value \"major\" for attribute {@link ATTR_PROCESS_PAGING_FAULT_TYPE}.\n  */\nexport var PROCESS_PAGING_FAULT_TYPE_VALUE_MAJOR = \"major\";\n/**\n  * Enum value \"minor\" for attribute {@link ATTR_PROCESS_PAGING_FAULT_TYPE}.\n  */\nexport var PROCESS_PAGING_FAULT_TYPE_VALUE_MINOR = \"minor\";\n/**\n * Parent Process identifier (PPID).\n *\n * @example 111\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_PARENT_PID = 'process.parent_pid';\n/**\n * Process identifier (PID).\n *\n * @example 1234\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_PID = 'process.pid';\n/**\n * The real user ID (RUID) of the process.\n *\n * @example 1000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_REAL_USER_ID = 'process.real_user.id';\n/**\n * The username of the real user of the process.\n *\n * @example operator\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_REAL_USER_NAME = 'process.real_user.name';\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @example \"Eclipse OpenJ9 Eclipse OpenJ9 VM openj9-0.21.0\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\n/**\n * The name of the runtime of this process.\n *\n * @example OpenJDK Runtime Environment\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_RUNTIME_NAME = 'process.runtime.name';\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @example \"14.0.2\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\n/**\n * The saved user ID (SUID) of the process.\n *\n * @example 1002\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_SAVED_USER_ID = 'process.saved_user.id';\n/**\n * The username of the saved user.\n *\n * @example operator\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_SAVED_USER_NAME = 'process.saved_user.name';\n/**\n * The PID of the process's session leader. This is also the session ID (SID) of the process.\n *\n * @example 14\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_SESSION_LEADER_PID = 'process.session_leader.pid';\n/**\n * Process title (proctitle)\n *\n * @example cat /etc/hostname\n * @example xfce4-session\n * @example bash\n *\n * @note In many Unix-like systems, process title (proctitle), is the string that represents the name or command line of a running process, displayed by system monitoring tools like ps, top, and htop.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_TITLE = 'process.title';\n/**\n * The effective user ID (EUID) of the process.\n *\n * @example 1001\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_USER_ID = 'process.user.id';\n/**\n * The username of the effective user of the process.\n *\n * @example root\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_USER_NAME = 'process.user.name';\n/**\n * Virtual process identifier.\n *\n * @example 12\n *\n * @note The process ID within a PID namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_VPID = 'process.vpid';\n/**\n * The working directory of the process.\n *\n * @example /root\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROCESS_WORKING_DIRECTORY = 'process.working_directory';\n/**\n * Describes the interpreter or compiler of a single frame.\n *\n * @example cpython\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_PROFILE_FRAME_TYPE = 'profile.frame.type';\n/**\n  * Enum value \"beam\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_BEAM = \"beam\";\n/**\n  * Enum value \"cpython\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_CPYTHON = \"cpython\";\n/**\n  * Enum value \"dotnet\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_DOTNET = \"dotnet\";\n/**\n  * Enum value \"jvm\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_JVM = \"jvm\";\n/**\n  * Enum value \"kernel\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_KERNEL = \"kernel\";\n/**\n  * Enum value \"native\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_NATIVE = \"native\";\n/**\n  * Enum value \"perl\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_PERL = \"perl\";\n/**\n  * Enum value \"php\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_PHP = \"php\";\n/**\n  * Enum value \"ruby\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_RUBY = \"ruby\";\n/**\n  * Enum value \"v8js\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport var PROFILE_FRAME_TYPE_VALUE_V8JS = \"v8js\";\n/**\n * The [error codes](https://connect.build/docs/protocol/#error-codes) of the Connect request. Error codes are always string values.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_CONNECT_RPC_ERROR_CODE = 'rpc.connect_rpc.error_code';\n/**\n  * Enum value \"aborted\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_ABORTED = \"aborted\";\n/**\n  * Enum value \"already_exists\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_ALREADY_EXISTS = \"already_exists\";\n/**\n  * Enum value \"cancelled\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_CANCELLED = \"cancelled\";\n/**\n  * Enum value \"data_loss\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_DATA_LOSS = \"data_loss\";\n/**\n  * Enum value \"deadline_exceeded\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_DEADLINE_EXCEEDED = \"deadline_exceeded\";\n/**\n  * Enum value \"failed_precondition\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_FAILED_PRECONDITION = \"failed_precondition\";\n/**\n  * Enum value \"internal\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_INTERNAL = \"internal\";\n/**\n  * Enum value \"invalid_argument\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_INVALID_ARGUMENT = \"invalid_argument\";\n/**\n  * Enum value \"not_found\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_NOT_FOUND = \"not_found\";\n/**\n  * Enum value \"out_of_range\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_OUT_OF_RANGE = \"out_of_range\";\n/**\n  * Enum value \"permission_denied\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_PERMISSION_DENIED = \"permission_denied\";\n/**\n  * Enum value \"resource_exhausted\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_RESOURCE_EXHAUSTED = \"resource_exhausted\";\n/**\n  * Enum value \"unauthenticated\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNAUTHENTICATED = \"unauthenticated\";\n/**\n  * Enum value \"unavailable\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNAVAILABLE = \"unavailable\";\n/**\n  * Enum value \"unimplemented\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNIMPLEMENTED = \"unimplemented\";\n/**\n  * Enum value \"unknown\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport var RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNKNOWN = \"unknown\";\n/**\n * Connect request metadata, `<key>` being the normalized Connect Metadata key (lowercase), the value being the metadata values.\n *\n * @example rpc.request.metadata.my-custom-metadata-attribute=[\"1.2.3.4\", \"1.2.3.5\"]\n *\n * @note Instrumentations **SHOULD** require an explicit configuration of which metadata values are to be captured. Including all request metadata values can be a security risk - explicit configuration helps avoid leaking sensitive information.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_CONNECT_RPC_REQUEST_METADATA = function (key) { return \"rpc.connect_rpc.request.metadata.\".concat(key); };\n/**\n * Connect response metadata, `<key>` being the normalized Connect Metadata key (lowercase), the value being the metadata values.\n *\n * @example rpc.response.metadata.my-custom-metadata-attribute=[\"attribute_value\"]\n *\n * @note Instrumentations **SHOULD** require an explicit configuration of which metadata values are to be captured. Including all response metadata values can be a security risk - explicit configuration helps avoid leaking sensitive information.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_CONNECT_RPC_RESPONSE_METADATA = function (key) { return \"rpc.connect_rpc.response.metadata.\".concat(key); };\n/**\n * gRPC request metadata, `<key>` being the normalized gRPC Metadata key (lowercase), the value being the metadata values.\n *\n * @example rpc.grpc.request.metadata.my-custom-metadata-attribute=[\"1.2.3.4\", \"1.2.3.5\"]\n *\n * @note Instrumentations **SHOULD** require an explicit configuration of which metadata values are to be captured. Including all request metadata values can be a security risk - explicit configuration helps avoid leaking sensitive information.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_GRPC_REQUEST_METADATA = function (key) { return \"rpc.grpc.request.metadata.\".concat(key); };\n/**\n * gRPC response metadata, `<key>` being the normalized gRPC Metadata key (lowercase), the value being the metadata values.\n *\n * @example rpc.grpc.response.metadata.my-custom-metadata-attribute=[\"attribute_value\"]\n *\n * @note Instrumentations **SHOULD** require an explicit configuration of which metadata values are to be captured. Including all response metadata values can be a security risk - explicit configuration helps avoid leaking sensitive information.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_GRPC_RESPONSE_METADATA = function (key) { return \"rpc.grpc.response.metadata.\".concat(key); };\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\n/**\n  * Enum value 0 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_OK = 0;\n/**\n  * Enum value 1 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_CANCELLED = 1;\n/**\n  * Enum value 2 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN = 2;\n/**\n  * Enum value 3 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT = 3;\n/**\n  * Enum value 4 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED = 4;\n/**\n  * Enum value 5 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND = 5;\n/**\n  * Enum value 6 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS = 6;\n/**\n  * Enum value 7 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED = 7;\n/**\n  * Enum value 8 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED = 8;\n/**\n  * Enum value 9 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION = 9;\n/**\n  * Enum value 10 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_ABORTED = 10;\n/**\n  * Enum value 11 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE = 11;\n/**\n  * Enum value 12 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED = 12;\n/**\n  * Enum value 13 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_INTERNAL = 13;\n/**\n  * Enum value 14 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE = 14;\n/**\n  * Enum value 15 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS = 15;\n/**\n  * Enum value 16 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport var RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED = 16;\n/**\n * `error.code` property of response if it is an error response.\n *\n * @example -32700\n * @example 100\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\n/**\n * `error.message` property of response if it is an error response.\n *\n * @example Parse error\n * @example User already exists\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @example 10\n * @example request-7\n * @example\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 doesn't specify this, the value can be omitted.\n *\n * @example 2.0\n * @example 1.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\n/**\n * Compressed size of the message in bytes.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_MESSAGE_COMPRESSED_SIZE = 'rpc.message.compressed_size';\n/**\n * **MUST** be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * @note This way we guarantee that the values will be consistent between different implementations.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_MESSAGE_ID = 'rpc.message.id';\n/**\n * Whether this is a received or sent message.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_MESSAGE_TYPE = 'rpc.message.type';\n/**\n  * Enum value \"RECEIVED\" for attribute {@link ATTR_RPC_MESSAGE_TYPE}.\n  */\nexport var RPC_MESSAGE_TYPE_VALUE_RECEIVED = \"RECEIVED\";\n/**\n  * Enum value \"SENT\" for attribute {@link ATTR_RPC_MESSAGE_TYPE}.\n  */\nexport var RPC_MESSAGE_TYPE_VALUE_SENT = \"SENT\";\n/**\n * Uncompressed size of the message in bytes.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_MESSAGE_UNCOMPRESSED_SIZE = 'rpc.message.uncompressed_size';\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * @example \"exampleMethod\"\n *\n * @note This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function.name` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_METHOD = 'rpc.method';\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * @example \"myservice.EchoService\"\n *\n * @note This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_SERVICE = 'rpc.service';\n/**\n * A string identifying the remoting system. See below for a list of well-known identifiers.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_RPC_SYSTEM = 'rpc.system';\n/**\n  * Enum value \"apache_dubbo\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport var RPC_SYSTEM_VALUE_APACHE_DUBBO = \"apache_dubbo\";\n/**\n  * Enum value \"connect_rpc\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport var RPC_SYSTEM_VALUE_CONNECT_RPC = \"connect_rpc\";\n/**\n  * Enum value \"dotnet_wcf\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport var RPC_SYSTEM_VALUE_DOTNET_WCF = \"dotnet_wcf\";\n/**\n  * Enum value \"grpc\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport var RPC_SYSTEM_VALUE_GRPC = \"grpc\";\n/**\n  * Enum value \"java_rmi\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport var RPC_SYSTEM_VALUE_JAVA_RMI = \"java_rmi\";\n/**\n * A categorization value keyword used by the entity using the rule for detection of this event\n *\n * @example Attempted Information Leak\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SECURITY_RULE_CATEGORY = 'security_rule.category';\n/**\n * The description of the rule generating the event.\n *\n * @example Block requests to public DNS over HTTPS / TLS protocols\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SECURITY_RULE_DESCRIPTION = 'security_rule.description';\n/**\n * Name of the license under which the rule used to generate this event is made available.\n *\n * @example Apache 2.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SECURITY_RULE_LICENSE = 'security_rule.license';\n/**\n * The name of the rule or signature generating the event.\n *\n * @example BLOCK_DNS_over_TLS\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SECURITY_RULE_NAME = 'security_rule.name';\n/**\n * Reference URL to additional information about the rule used to generate this event.\n *\n * @example https://en.wikipedia.org/wiki/DNS_over_TLS\n *\n * @note The URL can point to the vendor’s documentation about the rule. If that’s not available, it can also be a link to a more general page describing this type of alert.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SECURITY_RULE_REFERENCE = 'security_rule.reference';\n/**\n * Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.\n *\n * @example Standard_Protocol_Filters\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SECURITY_RULE_RULESET_NAME = 'security_rule.ruleset.name';\n/**\n * A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.\n *\n * @example 550e8400-e29b-41d4-a716-446655440000\n * @example 1100110011\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SECURITY_RULE_UUID = 'security_rule.uuid';\n/**\n * The version / revision of the rule being used for analysis.\n *\n * @example 1.0.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SECURITY_RULE_VERSION = 'security_rule.version';\n/**\n * The string ID of the service instance.\n *\n * @example 627cc493-f310-47de-96bd-71410b7dec09\n *\n * @note **MUST** be unique for each instance of the same `service.namespace,service.name` pair (in other words\n * `service.namespace,service.name,service.instance.id` triplet **MUST** be globally unique). The ID helps to\n * distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled\n * service).\n *\n * Implementations, such as SDKs, are recommended to generate a random Version 1 or Version 4 [RFC\n * 4122](https://www.ietf.org/rfc/rfc4122.txt) UUID, but are free to use an inherent unique ID as the source of\n * this value if stability is desirable. In that case, the ID **SHOULD** be used as source of a UUID Version 5 and\n * **SHOULD** use the following UUID as the namespace: `4d63009a-8d0f-11ee-aad7-4c796ed8e320`.\n *\n * UUIDs are typically recommended, as only an opaque value for the purposes of identifying a service instance is\n * needed. Similar to what can be seen in the man page for the\n * [`/etc/machine-id`](https://www.freedesktop.org/software/systemd/man/latest/machine-id.html) file, the underlying\n * data, such as pod name and namespace should be treated as confidential, being the user's choice to expose it\n * or not via another resource attribute.\n *\n * For applications running behind an application server (like unicorn), we do not recommend using one identifier\n * for all processes participating in the application. Instead, it's recommended each division (e.g. a worker\n * thread in unicorn) to have its own instance.id.\n *\n * It's not recommended for a Collector to set `service.instance.id` if it can't unambiguously determine the\n * service instance that is generating that telemetry. For instance, creating an UUID based on `pod.name` will\n * likely be wrong, as the Collector might not know from which container within that pod the telemetry originated.\n * However, Collectors can set the `service.instance.id` if they can unambiguously determine the service instance\n * for that telemetry. This is typically the case for scraping receivers, as they know the target address and\n * port.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SERVICE_INSTANCE_ID = 'service.instance.id';\n/**\n * A namespace for `service.name`.\n *\n * @example Shop\n *\n * @note A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SERVICE_NAMESPACE = 'service.namespace';\n/**\n * A unique id to identify a session.\n *\n * @example \"00112233-4455-6677-8899-aabbccddeeff\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SESSION_ID = 'session.id';\n/**\n * The previous `session.id` for this user, when known.\n *\n * @example \"00112233-4455-6677-8899-aabbccddeeff\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SESSION_PREVIOUS_ID = 'session.previous_id';\n/**\n * Source address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n *\n * @example source.example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n *\n * @note When observed from the destination side, and when communicating through an intermediary, `source.address` **SHOULD** represent the source address behind any intermediaries, for example proxies, if it's available.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SOURCE_ADDRESS = 'source.address';\n/**\n * Source port number\n *\n * @example 3389\n * @example 2888\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SOURCE_PORT = 'source.port';\n/**\n * Deprecated, use `db.client.connection.state` instead.\n *\n * @example idle\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `db.client.connection.state`.\n */\nexport var ATTR_STATE = 'state';\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_STATE}.\n  */\nexport var STATE_VALUE_IDLE = \"idle\";\n/**\n  * Enum value \"used\" for attribute {@link ATTR_STATE}.\n  */\nexport var STATE_VALUE_USED = \"used\";\n/**\n * The logical CPU number [0..n-1]\n *\n * @example 1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_CPU_LOGICAL_NUMBER = 'system.cpu.logical_number';\n/**\n * Deprecated, use `cpu.mode` instead.\n *\n * @example idle\n * @example interrupt\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `cpu.mode`\n */\nexport var ATTR_SYSTEM_CPU_STATE = 'system.cpu.state';\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport var SYSTEM_CPU_STATE_VALUE_IDLE = \"idle\";\n/**\n  * Enum value \"interrupt\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport var SYSTEM_CPU_STATE_VALUE_INTERRUPT = \"interrupt\";\n/**\n  * Enum value \"iowait\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport var SYSTEM_CPU_STATE_VALUE_IOWAIT = \"iowait\";\n/**\n  * Enum value \"nice\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport var SYSTEM_CPU_STATE_VALUE_NICE = \"nice\";\n/**\n  * Enum value \"steal\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport var SYSTEM_CPU_STATE_VALUE_STEAL = \"steal\";\n/**\n  * Enum value \"system\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport var SYSTEM_CPU_STATE_VALUE_SYSTEM = \"system\";\n/**\n  * Enum value \"user\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport var SYSTEM_CPU_STATE_VALUE_USER = \"user\";\n/**\n * The device identifier\n *\n * @example (identifier)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_DEVICE = 'system.device';\n/**\n * The filesystem mode\n *\n * @example rw, ro\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_FILESYSTEM_MODE = 'system.filesystem.mode';\n/**\n * The filesystem mount path\n *\n * @example /mnt/data\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_FILESYSTEM_MOUNTPOINT = 'system.filesystem.mountpoint';\n/**\n * The filesystem state\n *\n * @example used\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_FILESYSTEM_STATE = 'system.filesystem.state';\n/**\n  * Enum value \"free\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_STATE}.\n  */\nexport var SYSTEM_FILESYSTEM_STATE_VALUE_FREE = \"free\";\n/**\n  * Enum value \"reserved\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_STATE}.\n  */\nexport var SYSTEM_FILESYSTEM_STATE_VALUE_RESERVED = \"reserved\";\n/**\n  * Enum value \"used\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_STATE}.\n  */\nexport var SYSTEM_FILESYSTEM_STATE_VALUE_USED = \"used\";\n/**\n * The filesystem type\n *\n * @example ext4\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_FILESYSTEM_TYPE = 'system.filesystem.type';\n/**\n  * Enum value \"exfat\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport var SYSTEM_FILESYSTEM_TYPE_VALUE_EXFAT = \"exfat\";\n/**\n  * Enum value \"ext4\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport var SYSTEM_FILESYSTEM_TYPE_VALUE_EXT4 = \"ext4\";\n/**\n  * Enum value \"fat32\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport var SYSTEM_FILESYSTEM_TYPE_VALUE_FAT32 = \"fat32\";\n/**\n  * Enum value \"hfsplus\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport var SYSTEM_FILESYSTEM_TYPE_VALUE_HFSPLUS = \"hfsplus\";\n/**\n  * Enum value \"ntfs\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport var SYSTEM_FILESYSTEM_TYPE_VALUE_NTFS = \"ntfs\";\n/**\n  * Enum value \"refs\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport var SYSTEM_FILESYSTEM_TYPE_VALUE_REFS = \"refs\";\n/**\n * The memory state\n *\n * @example free\n * @example cached\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_MEMORY_STATE = 'system.memory.state';\n/**\n  * Enum value \"buffers\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport var SYSTEM_MEMORY_STATE_VALUE_BUFFERS = \"buffers\";\n/**\n  * Enum value \"cached\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport var SYSTEM_MEMORY_STATE_VALUE_CACHED = \"cached\";\n/**\n  * Enum value \"free\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport var SYSTEM_MEMORY_STATE_VALUE_FREE = \"free\";\n/**\n  * Enum value \"shared\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport var SYSTEM_MEMORY_STATE_VALUE_SHARED = \"shared\";\n/**\n  * Enum value \"used\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport var SYSTEM_MEMORY_STATE_VALUE_USED = \"used\";\n/**\n * Deprecated, use `network.connection.state` instead.\n *\n * @example close_wait\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Removed, report network connection state with `network.connection.state` attribute\n */\nexport var ATTR_SYSTEM_NETWORK_STATE = 'system.network.state';\n/**\n  * Enum value \"close\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_CLOSE = \"close\";\n/**\n  * Enum value \"close_wait\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_CLOSE_WAIT = \"close_wait\";\n/**\n  * Enum value \"closing\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_CLOSING = \"closing\";\n/**\n  * Enum value \"delete\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_DELETE = \"delete\";\n/**\n  * Enum value \"established\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_ESTABLISHED = \"established\";\n/**\n  * Enum value \"fin_wait_1\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_FIN_WAIT_1 = \"fin_wait_1\";\n/**\n  * Enum value \"fin_wait_2\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_FIN_WAIT_2 = \"fin_wait_2\";\n/**\n  * Enum value \"last_ack\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_LAST_ACK = \"last_ack\";\n/**\n  * Enum value \"listen\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_LISTEN = \"listen\";\n/**\n  * Enum value \"syn_recv\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_SYN_RECV = \"syn_recv\";\n/**\n  * Enum value \"syn_sent\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_SYN_SENT = \"syn_sent\";\n/**\n  * Enum value \"time_wait\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport var SYSTEM_NETWORK_STATE_VALUE_TIME_WAIT = \"time_wait\";\n/**\n * The paging access direction\n *\n * @example in\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_PAGING_DIRECTION = 'system.paging.direction';\n/**\n  * Enum value \"in\" for attribute {@link ATTR_SYSTEM_PAGING_DIRECTION}.\n  */\nexport var SYSTEM_PAGING_DIRECTION_VALUE_IN = \"in\";\n/**\n  * Enum value \"out\" for attribute {@link ATTR_SYSTEM_PAGING_DIRECTION}.\n  */\nexport var SYSTEM_PAGING_DIRECTION_VALUE_OUT = \"out\";\n/**\n * The memory paging state\n *\n * @example free\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_PAGING_STATE = 'system.paging.state';\n/**\n  * Enum value \"free\" for attribute {@link ATTR_SYSTEM_PAGING_STATE}.\n  */\nexport var SYSTEM_PAGING_STATE_VALUE_FREE = \"free\";\n/**\n  * Enum value \"used\" for attribute {@link ATTR_SYSTEM_PAGING_STATE}.\n  */\nexport var SYSTEM_PAGING_STATE_VALUE_USED = \"used\";\n/**\n * The memory paging type\n *\n * @example minor\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_PAGING_TYPE = 'system.paging.type';\n/**\n  * Enum value \"major\" for attribute {@link ATTR_SYSTEM_PAGING_TYPE}.\n  */\nexport var SYSTEM_PAGING_TYPE_VALUE_MAJOR = \"major\";\n/**\n  * Enum value \"minor\" for attribute {@link ATTR_SYSTEM_PAGING_TYPE}.\n  */\nexport var SYSTEM_PAGING_TYPE_VALUE_MINOR = \"minor\";\n/**\n * The process state, e.g., [Linux Process State Codes](https://man7.org/linux/man-pages/man1/ps.1.html#PROCESS_STATE_CODES)\n *\n * @example running\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_SYSTEM_PROCESS_STATUS = 'system.process.status';\n/**\n  * Enum value \"defunct\" for attribute {@link ATTR_SYSTEM_PROCESS_STATUS}.\n  */\nexport var SYSTEM_PROCESS_STATUS_VALUE_DEFUNCT = \"defunct\";\n/**\n  * Enum value \"running\" for attribute {@link ATTR_SYSTEM_PROCESS_STATUS}.\n  */\nexport var SYSTEM_PROCESS_STATUS_VALUE_RUNNING = \"running\";\n/**\n  * Enum value \"sleeping\" for attribute {@link ATTR_SYSTEM_PROCESS_STATUS}.\n  */\nexport var SYSTEM_PROCESS_STATUS_VALUE_SLEEPING = \"sleeping\";\n/**\n  * Enum value \"stopped\" for attribute {@link ATTR_SYSTEM_PROCESS_STATUS}.\n  */\nexport var SYSTEM_PROCESS_STATUS_VALUE_STOPPED = \"stopped\";\n/**\n * Deprecated, use `system.process.status` instead.\n *\n * @example running\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `system.process.status`.\n */\nexport var ATTR_SYSTEM_PROCESSES_STATUS = 'system.processes.status';\n/**\n  * Enum value \"defunct\" for attribute {@link ATTR_SYSTEM_PROCESSES_STATUS}.\n  */\nexport var SYSTEM_PROCESSES_STATUS_VALUE_DEFUNCT = \"defunct\";\n/**\n  * Enum value \"running\" for attribute {@link ATTR_SYSTEM_PROCESSES_STATUS}.\n  */\nexport var SYSTEM_PROCESSES_STATUS_VALUE_RUNNING = \"running\";\n/**\n  * Enum value \"sleeping\" for attribute {@link ATTR_SYSTEM_PROCESSES_STATUS}.\n  */\nexport var SYSTEM_PROCESSES_STATUS_VALUE_SLEEPING = \"sleeping\";\n/**\n  * Enum value \"stopped\" for attribute {@link ATTR_SYSTEM_PROCESSES_STATUS}.\n  */\nexport var SYSTEM_PROCESSES_STATUS_VALUE_STOPPED = \"stopped\";\n/**\n * The name of the auto instrumentation agent or distribution, if used.\n *\n * @example parts-unlimited-java\n *\n * @note Official auto instrumentation agents and distributions **SHOULD** set the `telemetry.distro.name` attribute to\n * a string starting with `opentelemetry-`, e.g. `opentelemetry-java-instrumentation`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TELEMETRY_DISTRO_NAME = 'telemetry.distro.name';\n/**\n * The version string of the auto instrumentation agent or distribution, if used.\n *\n * @example 1.2.3\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TELEMETRY_DISTRO_VERSION = 'telemetry.distro.version';\n/**\n * The fully qualified human readable name of the [test case](https://wikipedia.org/wiki/Test_case).\n *\n * @example org.example.TestCase1.test1\n * @example example/tests/TestCase1.test1\n * @example ExampleTestCase1_test1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TEST_CASE_NAME = 'test.case.name';\n/**\n * The status of the actual test case result from test execution.\n *\n * @example pass\n * @example fail\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TEST_CASE_RESULT_STATUS = 'test.case.result.status';\n/**\n  * Enum value \"fail\" for attribute {@link ATTR_TEST_CASE_RESULT_STATUS}.\n  */\nexport var TEST_CASE_RESULT_STATUS_VALUE_FAIL = \"fail\";\n/**\n  * Enum value \"pass\" for attribute {@link ATTR_TEST_CASE_RESULT_STATUS}.\n  */\nexport var TEST_CASE_RESULT_STATUS_VALUE_PASS = \"pass\";\n/**\n * The human readable name of a [test suite](https://wikipedia.org/wiki/Test_suite).\n *\n * @example TestSuite1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TEST_SUITE_NAME = 'test.suite.name';\n/**\n * The status of the test suite run.\n *\n * @example success\n * @example failure\n * @example skipped\n * @example aborted\n * @example timed_out\n * @example in_progress\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TEST_SUITE_RUN_STATUS = 'test.suite.run.status';\n/**\n  * Enum value \"aborted\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport var TEST_SUITE_RUN_STATUS_VALUE_ABORTED = \"aborted\";\n/**\n  * Enum value \"failure\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport var TEST_SUITE_RUN_STATUS_VALUE_FAILURE = \"failure\";\n/**\n  * Enum value \"in_progress\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport var TEST_SUITE_RUN_STATUS_VALUE_IN_PROGRESS = \"in_progress\";\n/**\n  * Enum value \"skipped\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport var TEST_SUITE_RUN_STATUS_VALUE_SKIPPED = \"skipped\";\n/**\n  * Enum value \"success\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport var TEST_SUITE_RUN_STATUS_VALUE_SUCCESS = \"success\";\n/**\n  * Enum value \"timed_out\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport var TEST_SUITE_RUN_STATUS_VALUE_TIMED_OUT = \"timed_out\";\n/**\n * Current \"managed\" thread ID (as opposed to OS thread ID).\n *\n * @example 42\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_THREAD_ID = 'thread.id';\n/**\n * Current thread name.\n *\n * @example \"main\"\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_THREAD_NAME = 'thread.name';\n/**\n * String indicating the [cipher](https://datatracker.ietf.org/doc/html/rfc5246#appendix-A.5) used during the current connection.\n *\n * @example TLS_RSA_WITH_3DES_EDE_CBC_SHA\n * @example TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n *\n * @note The values allowed for `tls.cipher` **MUST** be one of the `Descriptions` of the [registered TLS Cipher Suits](https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#table-tls-parameters-4).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CIPHER = 'tls.cipher';\n/**\n * PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.\n *\n * @example MII...\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_CERTIFICATE = 'tls.client.certificate';\n/**\n * Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.\n *\n * @example [\"MII...\", \"MI...\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_CERTIFICATE_CHAIN = 'tls.client.certificate_chain';\n/**\n * Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.\n *\n * @example 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_HASH_MD5 = 'tls.client.hash.md5';\n/**\n * Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.\n *\n * @example 9E393D93138888D288266C2D915214D1D1CCEB2A\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_HASH_SHA1 = 'tls.client.hash.sha1';\n/**\n * Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.\n *\n * @example 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_HASH_SHA256 = 'tls.client.hash.sha256';\n/**\n * Distinguished name of [subject](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6) of the issuer of the x.509 certificate presented by the client.\n *\n * @example CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_ISSUER = 'tls.client.issuer';\n/**\n * A hash that identifies clients based on how they perform an SSL/TLS handshake.\n *\n * @example d4e5b18d6b55c71272893221c96ba240\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_JA3 = 'tls.client.ja3';\n/**\n * Date/Time indicating when client certificate is no longer considered valid.\n *\n * @example 2021-01-01T00:00:00.000Z\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_NOT_AFTER = 'tls.client.not_after';\n/**\n * Date/Time indicating when client certificate is first considered valid.\n *\n * @example 1970-01-01T00:00:00.000Z\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_NOT_BEFORE = 'tls.client.not_before';\n/**\n * Deprecated, use `server.address` instead.\n *\n * @example opentelemetry.io\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Replaced by `server.address`.\n */\nexport var ATTR_TLS_CLIENT_SERVER_NAME = 'tls.client.server_name';\n/**\n * Distinguished name of subject of the x.509 certificate presented by the client.\n *\n * @example CN=myclient, OU=Documentation Team, DC=example, DC=com\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_SUBJECT = 'tls.client.subject';\n/**\n * Array of ciphers offered by the client during the client hello.\n *\n * @example [\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CLIENT_SUPPORTED_CIPHERS = 'tls.client.supported_ciphers';\n/**\n * String indicating the curve used for the given cipher, when applicable\n *\n * @example secp256r1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_CURVE = 'tls.curve';\n/**\n * Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.\n *\n * @example true\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_ESTABLISHED = 'tls.established';\n/**\n * String indicating the protocol being tunneled. Per the values in the [IANA registry](https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.\n *\n * @example http/1.1\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_NEXT_PROTOCOL = 'tls.next_protocol';\n/**\n * Normalized lowercase protocol name parsed from original string of the negotiated [SSL/TLS protocol version](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html#RETURN-VALUES)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_PROTOCOL_NAME = 'tls.protocol.name';\n/**\n  * Enum value \"ssl\" for attribute {@link ATTR_TLS_PROTOCOL_NAME}.\n  */\nexport var TLS_PROTOCOL_NAME_VALUE_SSL = \"ssl\";\n/**\n  * Enum value \"tls\" for attribute {@link ATTR_TLS_PROTOCOL_NAME}.\n  */\nexport var TLS_PROTOCOL_NAME_VALUE_TLS = \"tls\";\n/**\n * Numeric part of the version parsed from the original string of the negotiated [SSL/TLS protocol version](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html#RETURN-VALUES)\n *\n * @example 1.2\n * @example 3\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_PROTOCOL_VERSION = 'tls.protocol.version';\n/**\n * Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.\n *\n * @example true\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_RESUMED = 'tls.resumed';\n/**\n * PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.\n *\n * @example MII...\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_CERTIFICATE = 'tls.server.certificate';\n/**\n * Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.\n *\n * @example [\"MII...\", \"MI...\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_CERTIFICATE_CHAIN = 'tls.server.certificate_chain';\n/**\n * Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.\n *\n * @example 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_HASH_MD5 = 'tls.server.hash.md5';\n/**\n * Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.\n *\n * @example 9E393D93138888D288266C2D915214D1D1CCEB2A\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_HASH_SHA1 = 'tls.server.hash.sha1';\n/**\n * Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.\n *\n * @example 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_HASH_SHA256 = 'tls.server.hash.sha256';\n/**\n * Distinguished name of [subject](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6) of the issuer of the x.509 certificate presented by the client.\n *\n * @example CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_ISSUER = 'tls.server.issuer';\n/**\n * A hash that identifies servers based on how they perform an SSL/TLS handshake.\n *\n * @example d4e5b18d6b55c71272893221c96ba240\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_JA3S = 'tls.server.ja3s';\n/**\n * Date/Time indicating when server certificate is no longer considered valid.\n *\n * @example 2021-01-01T00:00:00.000Z\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_NOT_AFTER = 'tls.server.not_after';\n/**\n * Date/Time indicating when server certificate is first considered valid.\n *\n * @example 1970-01-01T00:00:00.000Z\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_NOT_BEFORE = 'tls.server.not_before';\n/**\n * Distinguished name of subject of the x.509 certificate presented by the server.\n *\n * @example CN=myserver, OU=Documentation Team, DC=example, DC=com\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_TLS_SERVER_SUBJECT = 'tls.server.subject';\n/**\n * Domain extracted from the `url.full`, such as \"opentelemetry.io\".\n *\n * @example www.foo.bar\n * @example opentelemetry.io\n * @example 3.12.167.2\n * @example [1080:0:0:0:8:800:200C:417A]\n *\n * @note In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the domain field. If the URL contains a [literal IPv6 address](https://www.rfc-editor.org/rfc/rfc2732#section-2) enclosed by `[` and `]`, the `[` and `]` characters should also be captured in the domain field.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_URL_DOMAIN = 'url.domain';\n/**\n * The file extension extracted from the `url.full`, excluding the leading dot.\n *\n * @example png\n * @example gz\n *\n * @note The file extension is only set if it exists, as not every url has a file extension. When the file name has multiple extensions `example.tar.gz`, only the last one should be captured `gz`, not `tar.gz`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_URL_EXTENSION = 'url.extension';\n/**\n * Unmodified original URL as seen in the event source.\n *\n * @example https://www.foo.bar/search?q=OpenTelemetry#SemConv\n * @example search?q=OpenTelemetry\n *\n * @note In network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path. This field is meant to represent the URL as it was observed, complete or not.\n * `url.original` might contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case password and username **SHOULD NOT** be redacted and attribute's value **SHOULD** remain the same.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_URL_ORIGINAL = 'url.original';\n/**\n * Port extracted from the `url.full`\n *\n * @example 443\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_URL_PORT = 'url.port';\n/**\n * The highest registered url domain, stripped of the subdomain.\n *\n * @example example.com\n * @example foo.co.uk\n *\n * @note This value can be determined precisely with the [public suffix list](http://publicsuffix.org). For example, the registered domain for `foo.example.com` is `example.com`. Trying to approximate this by simply taking the last two labels will not work well for TLDs such as `co.uk`.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_URL_REGISTERED_DOMAIN = 'url.registered_domain';\n/**\n * The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain. In a partially qualified domain, or if the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\n *\n * @example east\n * @example sub2.sub1\n *\n * @note The subdomain portion of `www.east.mydomain.co.uk` is `east`. If the domain has multiple levels of subdomain, such as `sub2.sub1.example.com`, the subdomain field should contain `sub2.sub1`, with no trailing period.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_URL_SUBDOMAIN = 'url.subdomain';\n/**\n * The low-cardinality template of an [absolute path reference](https://www.rfc-editor.org/rfc/rfc3986#section-4.2).\n *\n * @example /users/{id}\n * @example /users/:id\n * @example /users?id={id}\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_URL_TEMPLATE = 'url.template';\n/**\n * The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is `com`.\n *\n * @example com\n * @example co.uk\n *\n * @note This value can be determined precisely with the [public suffix list](http://publicsuffix.org).\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_URL_TOP_LEVEL_DOMAIN = 'url.top_level_domain';\n/**\n * User email address.\n *\n * @example a.einstein@example.com\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_EMAIL = 'user.email';\n/**\n * User's full name\n *\n * @example Albert Einstein\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_FULL_NAME = 'user.full_name';\n/**\n * Unique user hash to correlate information for a user in anonymized form.\n *\n * @example 364fc68eaf4c8acec74a4e52d7d1feaa\n *\n * @note Useful if `user.id` or `user.name` contain confidential information and cannot be used.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_HASH = 'user.hash';\n/**\n * Unique identifier of the user.\n *\n * @example S-1-5-21-202424912787-2692429404-2351956786-1000\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_ID = 'user.id';\n/**\n * Short name or login/username of the user.\n *\n * @example a.einstein\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_NAME = 'user.name';\n/**\n * Array of user roles at the time of the event.\n *\n * @example [\"admin\", \"reporting_user\"]\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_ROLES = 'user.roles';\n/**\n * Name of the user-agent extracted from original. Usually refers to the browser's name.\n *\n * @example Safari\n * @example YourApp\n *\n * @note [Example](https://www.whatsmyua.info) of extracting browser's name from original string. In the case of using a user-agent for non-browser products, such as microservices with multiple names/versions inside the `user_agent.original`, the most significant name **SHOULD** be selected. In such a scenario it should align with `user_agent.version`\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_AGENT_NAME = 'user_agent.name';\n/**\n * Specifies the category of synthetic traffic, such as tests or bots.\n *\n * @note This attribute **MAY** be derived from the contents of the `user_agent.original` attribute. Components that populate the attribute are responsible for determining what they consider to be synthetic bot or test traffic. This attribute can either be set for self-identification purposes, or on telemetry detected to be generated as a result of a synthetic request. This attribute is useful for distinguishing between genuine client traffic and synthetic traffic generated by bots or tests.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_AGENT_SYNTHETIC_TYPE = 'user_agent.synthetic.type';\n/**\n  * Enum value \"bot\" for attribute {@link ATTR_USER_AGENT_SYNTHETIC_TYPE}.\n  */\nexport var USER_AGENT_SYNTHETIC_TYPE_VALUE_BOT = \"bot\";\n/**\n  * Enum value \"test\" for attribute {@link ATTR_USER_AGENT_SYNTHETIC_TYPE}.\n  */\nexport var USER_AGENT_SYNTHETIC_TYPE_VALUE_TEST = \"test\";\n/**\n * Version of the user-agent extracted from original. Usually refers to the browser's version\n *\n * @example 14.1.2\n * @example 1.0.0\n *\n * @note [Example](https://www.whatsmyua.info) of extracting browser's version from original string. In the case of using a user-agent for non-browser products, such as microservices with multiple names/versions inside the `user_agent.original`, the most significant version **SHOULD** be selected. In such a scenario it should align with `user_agent.name`\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_USER_AGENT_VERSION = 'user_agent.version';\n/**\n * The type of garbage collection.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_V8JS_GC_TYPE = 'v8js.gc.type';\n/**\n  * Enum value \"incremental\" for attribute {@link ATTR_V8JS_GC_TYPE}.\n  */\nexport var V8JS_GC_TYPE_VALUE_INCREMENTAL = \"incremental\";\n/**\n  * Enum value \"major\" for attribute {@link ATTR_V8JS_GC_TYPE}.\n  */\nexport var V8JS_GC_TYPE_VALUE_MAJOR = \"major\";\n/**\n  * Enum value \"minor\" for attribute {@link ATTR_V8JS_GC_TYPE}.\n  */\nexport var V8JS_GC_TYPE_VALUE_MINOR = \"minor\";\n/**\n  * Enum value \"weakcb\" for attribute {@link ATTR_V8JS_GC_TYPE}.\n  */\nexport var V8JS_GC_TYPE_VALUE_WEAKCB = \"weakcb\";\n/**\n * The name of the space type of heap memory.\n *\n * @note Value can be retrieved from value `space_name` of [`v8.getHeapSpaceStatistics()`](https://nodejs.org/api/v8.html#v8getheapspacestatistics)\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_V8JS_HEAP_SPACE_NAME = 'v8js.heap.space.name';\n/**\n  * Enum value \"code_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport var V8JS_HEAP_SPACE_NAME_VALUE_CODE_SPACE = \"code_space\";\n/**\n  * Enum value \"large_object_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport var V8JS_HEAP_SPACE_NAME_VALUE_LARGE_OBJECT_SPACE = \"large_object_space\";\n/**\n  * Enum value \"map_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport var V8JS_HEAP_SPACE_NAME_VALUE_MAP_SPACE = \"map_space\";\n/**\n  * Enum value \"new_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport var V8JS_HEAP_SPACE_NAME_VALUE_NEW_SPACE = \"new_space\";\n/**\n  * Enum value \"old_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport var V8JS_HEAP_SPACE_NAME_VALUE_OLD_SPACE = \"old_space\";\n/**\n * The ID of the change (pull request/merge request/changelist) if applicable. This is usually a unique (within repository) identifier generated by the VCS system.\n *\n * @example 123\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_CHANGE_ID = 'vcs.change.id';\n/**\n * The state of the change (pull request/merge request/changelist).\n *\n * @example open\n * @example closed\n * @example merged\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_CHANGE_STATE = 'vcs.change.state';\n/**\n  * Enum value \"closed\" for attribute {@link ATTR_VCS_CHANGE_STATE}.\n  */\nexport var VCS_CHANGE_STATE_VALUE_CLOSED = \"closed\";\n/**\n  * Enum value \"merged\" for attribute {@link ATTR_VCS_CHANGE_STATE}.\n  */\nexport var VCS_CHANGE_STATE_VALUE_MERGED = \"merged\";\n/**\n  * Enum value \"open\" for attribute {@link ATTR_VCS_CHANGE_STATE}.\n  */\nexport var VCS_CHANGE_STATE_VALUE_OPEN = \"open\";\n/**\n  * Enum value \"wip\" for attribute {@link ATTR_VCS_CHANGE_STATE}.\n  */\nexport var VCS_CHANGE_STATE_VALUE_WIP = \"wip\";\n/**\n * The human readable title of the change (pull request/merge request/changelist). This title is often a brief summary of the change and may get merged in to a ref as the commit summary.\n *\n * @example Fixes broken thing\n * @example feat: add my new feature\n * @example [chore] update dependency\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_CHANGE_TITLE = 'vcs.change.title';\n/**\n * The type of line change being measured on a branch or change.\n *\n * @example added\n * @example removed\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_LINE_CHANGE_TYPE = 'vcs.line_change.type';\n/**\n  * Enum value \"added\" for attribute {@link ATTR_VCS_LINE_CHANGE_TYPE}.\n  */\nexport var VCS_LINE_CHANGE_TYPE_VALUE_ADDED = \"added\";\n/**\n  * Enum value \"removed\" for attribute {@link ATTR_VCS_LINE_CHANGE_TYPE}.\n  */\nexport var VCS_LINE_CHANGE_TYPE_VALUE_REMOVED = \"removed\";\n/**\n * The name of the [reference](https://git-scm.com/docs/gitglossary#def_ref) such as **branch** or **tag** in the repository.\n *\n * @example my-feature-branch\n * @example tag-1-test\n *\n * @note `base` refers to the starting point of a change. For example, `main`\n * would be the base reference of type branch if you've created a new\n * reference of type branch from it and created new commits.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REF_BASE_NAME = 'vcs.ref.base.name';\n/**\n * The revision, literally [revised version](https://www.merriam-webster.com/dictionary/revision), The revision most often refers to a commit object in Git, or a revision number in SVN.\n *\n * @example 9d59409acf479dfa0df1aa568182e43e43df8bbe28d60fcf2bc52e30068802cc\n * @example main\n * @example 123\n * @example HEAD\n *\n * @note `base` refers to the starting point of a change. For example, `main`\n * would be the base reference of type branch if you've created a new\n * reference of type branch from it and created new commits. The\n * revision can be a full [hash value (see\n * glossary)](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf),\n * of the recorded change to a ref within a repository pointing to a\n * commit [commit](https://git-scm.com/docs/git-commit) object. It does\n * not necessarily have to be a hash; it can simply define a [revision\n * number](https://svnbook.red-bean.com/en/1.7/svn.tour.revs.specifiers.html)\n * which is an integer that is monotonically increasing. In cases where\n * it is identical to the `ref.base.name`, it **SHOULD** still be included.\n * It is up to the implementer to decide which value to set as the\n * revision based on the VCS system and situational context.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REF_BASE_REVISION = 'vcs.ref.base.revision';\n/**\n * The type of the [reference](https://git-scm.com/docs/gitglossary#def_ref) in the repository.\n *\n * @example branch\n * @example tag\n *\n * @note `base` refers to the starting point of a change. For example, `main`\n * would be the base reference of type branch if you've created a new\n * reference of type branch from it and created new commits.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REF_BASE_TYPE = 'vcs.ref.base.type';\n/**\n  * Enum value \"branch\" for attribute {@link ATTR_VCS_REF_BASE_TYPE}.\n  */\nexport var VCS_REF_BASE_TYPE_VALUE_BRANCH = \"branch\";\n/**\n  * Enum value \"tag\" for attribute {@link ATTR_VCS_REF_BASE_TYPE}.\n  */\nexport var VCS_REF_BASE_TYPE_VALUE_TAG = \"tag\";\n/**\n * The name of the [reference](https://git-scm.com/docs/gitglossary#def_ref) such as **branch** or **tag** in the repository.\n *\n * @example my-feature-branch\n * @example tag-1-test\n *\n * @note `head` refers to where you are right now; the current reference at a\n * given time.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REF_HEAD_NAME = 'vcs.ref.head.name';\n/**\n * The revision, literally [revised version](https://www.merriam-webster.com/dictionary/revision), The revision most often refers to a commit object in Git, or a revision number in SVN.\n *\n * @example 9d59409acf479dfa0df1aa568182e43e43df8bbe28d60fcf2bc52e30068802cc\n * @example main\n * @example 123\n * @example HEAD\n *\n * @note `head` refers to where you are right now; the current reference at a\n * given time.The revision can be a full [hash value (see\n * glossary)](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf),\n * of the recorded change to a ref within a repository pointing to a\n * commit [commit](https://git-scm.com/docs/git-commit) object. It does\n * not necessarily have to be a hash; it can simply define a [revision\n * number](https://svnbook.red-bean.com/en/1.7/svn.tour.revs.specifiers.html)\n * which is an integer that is monotonically increasing. In cases where\n * it is identical to the `ref.head.name`, it **SHOULD** still be included.\n * It is up to the implementer to decide which value to set as the\n * revision based on the VCS system and situational context.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REF_HEAD_REVISION = 'vcs.ref.head.revision';\n/**\n * The type of the [reference](https://git-scm.com/docs/gitglossary#def_ref) in the repository.\n *\n * @example branch\n * @example tag\n *\n * @note `head` refers to where you are right now; the current reference at a\n * given time.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REF_HEAD_TYPE = 'vcs.ref.head.type';\n/**\n  * Enum value \"branch\" for attribute {@link ATTR_VCS_REF_HEAD_TYPE}.\n  */\nexport var VCS_REF_HEAD_TYPE_VALUE_BRANCH = \"branch\";\n/**\n  * Enum value \"tag\" for attribute {@link ATTR_VCS_REF_HEAD_TYPE}.\n  */\nexport var VCS_REF_HEAD_TYPE_VALUE_TAG = \"tag\";\n/**\n * The type of the [reference](https://git-scm.com/docs/gitglossary#def_ref) in the repository.\n *\n * @example branch\n * @example tag\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REF_TYPE = 'vcs.ref.type';\n/**\n  * Enum value \"branch\" for attribute {@link ATTR_VCS_REF_TYPE}.\n  */\nexport var VCS_REF_TYPE_VALUE_BRANCH = \"branch\";\n/**\n  * Enum value \"tag\" for attribute {@link ATTR_VCS_REF_TYPE}.\n  */\nexport var VCS_REF_TYPE_VALUE_TAG = \"tag\";\n/**\n * Deprecated, use `vcs.change.id` instead.\n *\n * @example 123\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Deprecated, use `vcs.change.id` instead.\n */\nexport var ATTR_VCS_REPOSITORY_CHANGE_ID = 'vcs.repository.change.id';\n/**\n * Deprecated, use `vcs.change.title` instead.\n *\n * @example Fixes broken thing\n * @example feat: add my new feature\n * @example [chore] update dependency\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Deprecated, use `vcs.change.title` instead.\n */\nexport var ATTR_VCS_REPOSITORY_CHANGE_TITLE = 'vcs.repository.change.title';\n/**\n * The human readable name of the repository. It **SHOULD NOT** include any additional identifier like Group/SubGroup in GitLab or organization in GitHub.\n *\n * @example semantic-conventions\n * @example my-cool-repo\n *\n * @note Due to it only being the name, it can clash with forks of the same\n * repository if collecting telemetry across multiple orgs or groups in\n * the same backends.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REPOSITORY_NAME = 'vcs.repository.name';\n/**\n * Deprecated, use `vcs.ref.head.name` instead.\n *\n * @example my-feature-branch\n * @example tag-1-test\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Deprecated, use `vcs.ref.head.name` instead.\n */\nexport var ATTR_VCS_REPOSITORY_REF_NAME = 'vcs.repository.ref.name';\n/**\n * Deprecated, use `vcs.ref.head.revision` instead.\n *\n * @example 9d59409acf479dfa0df1aa568182e43e43df8bbe28d60fcf2bc52e30068802cc\n * @example main\n * @example 123\n * @example HEAD\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Deprecated, use `vcs.ref.head.revision` instead.\n */\nexport var ATTR_VCS_REPOSITORY_REF_REVISION = 'vcs.repository.ref.revision';\n/**\n * Deprecated, use `vcs.ref.head.type` instead.\n *\n * @example branch\n * @example tag\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n *\n * @deprecated Deprecated, use `vcs.ref.head.type` instead.\n */\nexport var ATTR_VCS_REPOSITORY_REF_TYPE = 'vcs.repository.ref.type';\n/**\n  * Enum value \"branch\" for attribute {@link ATTR_VCS_REPOSITORY_REF_TYPE}.\n  */\nexport var VCS_REPOSITORY_REF_TYPE_VALUE_BRANCH = \"branch\";\n/**\n  * Enum value \"tag\" for attribute {@link ATTR_VCS_REPOSITORY_REF_TYPE}.\n  */\nexport var VCS_REPOSITORY_REF_TYPE_VALUE_TAG = \"tag\";\n/**\n * The [canonical URL](https://support.google.com/webmasters/answer/10347851?hl=en#:~:text=A%20canonical%20URL%20is%20the,Google%20chooses%20one%20as%20canonical.) of the repository providing the complete HTTP(S) address in order to locate and identify the repository through a browser.\n *\n * @example https://github.com/opentelemetry/open-telemetry-collector-contrib\n * @example https://gitlab.com/my-org/my-project/my-projects-project/repo\n *\n * @note In Git Version Control Systems, the canonical URL **SHOULD NOT** include\n * the `.git` extension.\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REPOSITORY_URL_FULL = 'vcs.repository.url.full';\n/**\n * The type of revision comparison.\n *\n * @example ahead\n * @example behind\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_VCS_REVISION_DELTA_DIRECTION = 'vcs.revision_delta.direction';\n/**\n  * Enum value \"ahead\" for attribute {@link ATTR_VCS_REVISION_DELTA_DIRECTION}.\n  */\nexport var VCS_REVISION_DELTA_DIRECTION_VALUE_AHEAD = \"ahead\";\n/**\n  * Enum value \"behind\" for attribute {@link ATTR_VCS_REVISION_DELTA_DIRECTION}.\n  */\nexport var VCS_REVISION_DELTA_DIRECTION_VALUE_BEHIND = \"behind\";\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @example WildFly Full 21.0.0.Final (WildFly Core 13.0.1.Final) - 2.2.2.Final\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_WEBENGINE_DESCRIPTION = 'webengine.description';\n/**\n * The name of the web engine.\n *\n * @example WildFly\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_WEBENGINE_NAME = 'webengine.name';\n/**\n * The version of the web engine.\n *\n * @example 21.0.0\n *\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport var ATTR_WEBENGINE_VERSION = 'webengine.version';\n//# sourceMappingURL=experimental_attributes.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"DOCUMENT_LOAD\"] = \"documentLoad\";\n    AttributeNames[\"DOCUMENT_FETCH\"] = \"documentFetch\";\n    AttributeNames[\"RESOURCE_FETCH\"] = \"resourceFetch\";\n})(AttributeNames || (AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.45.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-document-load';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var EventNames;\n(function (EventNames) {\n    EventNames[\"FIRST_PAINT\"] = \"firstPaint\";\n    EventNames[\"FIRST_CONTENTFUL_PAINT\"] = \"firstContentfulPaint\";\n})(EventNames || (EventNames = {}));\n//# sourceMappingURL=EventNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { otperformance } from '@opentelemetry/core';\nimport { hasKey, PerformanceTimingNames as PTN, } from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nexport const getPerformanceNavigationEntries = () => {\n    const entries = {};\n    const performanceNavigationTiming = otperformance.getEntriesByType?.('navigation')[0];\n    if (performanceNavigationTiming) {\n        const keys = Object.values(PTN);\n        keys.forEach((key) => {\n            if (hasKey(performanceNavigationTiming, key)) {\n                const value = performanceNavigationTiming[key];\n                if (typeof value === 'number') {\n                    entries[key] = value;\n                }\n            }\n        });\n    }\n    else {\n        // // fallback to previous version\n        const perf = otperformance;\n        const performanceTiming = perf.timing;\n        if (performanceTiming) {\n            const keys = Object.values(PTN);\n            keys.forEach((key) => {\n                if (hasKey(performanceTiming, key)) {\n                    const value = performanceTiming[key];\n                    if (typeof value === 'number') {\n                        entries[key] = value;\n                    }\n                }\n            });\n        }\n    }\n    return entries;\n};\nconst performancePaintNames = {\n    'first-paint': EventNames.FIRST_PAINT,\n    'first-contentful-paint': EventNames.FIRST_CONTENTFUL_PAINT,\n};\nexport const addSpanPerformancePaintEvents = (span) => {\n    const performancePaintTiming = otperformance.getEntriesByType?.('paint');\n    if (performancePaintTiming) {\n        performancePaintTiming.forEach(({ name, startTime }) => {\n            if (hasKey(performancePaintNames, name)) {\n                span.addEvent(performancePaintNames[name], startTime);\n            }\n        });\n    }\n};\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { context, propagation, trace, ROOT_CONTEXT, } from '@opentelemetry/api';\nimport { otperformance, TRACE_PARENT_HEADER } from '@opentelemetry/core';\nimport { addSpanNetworkEvent, addSpanNetworkEvents, hasKey, PerformanceTimingNames as PTN, } from '@opentelemetry/sdk-trace-web';\nimport { InstrumentationBase, safeExecuteInTheMiddle, } from '@opentelemetry/instrumentation';\nimport { AttributeNames } from './enums/AttributeNames';\n/** @knipignore */\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { SEMATTRS_HTTP_URL, SEMATTRS_HTTP_USER_AGENT, } from '@opentelemetry/semantic-conventions';\nimport { addSpanPerformancePaintEvents, getPerformanceNavigationEntries, } from './utils';\n/**\n * This class represents a document load plugin\n */\nexport class DocumentLoadInstrumentation extends InstrumentationBase {\n    component = 'document-load';\n    version = '1';\n    moduleName = this.component;\n    constructor(config = {}) {\n        super(PACKAGE_NAME, PACKAGE_VERSION, config);\n    }\n    init() { }\n    /**\n     * callback to be executed when page is loaded\n     */\n    _onDocumentLoaded() {\n        // Timeout is needed as load event doesn't have yet the performance metrics for loadEnd.\n        // Support for event \"loadend\" is very limited and cannot be used\n        window.setTimeout(() => {\n            this._collectPerformance();\n        });\n    }\n    /**\n     * Adds spans for all resources\n     * @param rootSpan\n     */\n    _addResourcesSpans(rootSpan) {\n        const resources = otperformance.getEntriesByType?.('resource');\n        if (resources) {\n            resources.forEach(resource => {\n                this._initResourceSpan(resource, rootSpan);\n            });\n        }\n    }\n    /**\n     * Collects information about performance and creates appropriate spans\n     */\n    _collectPerformance() {\n        const metaElement = Array.from(document.getElementsByTagName('meta')).find(e => e.getAttribute('name') === TRACE_PARENT_HEADER);\n        const entries = getPerformanceNavigationEntries();\n        const traceparent = (metaElement && metaElement.content) || '';\n        context.with(propagation.extract(ROOT_CONTEXT, { traceparent }), () => {\n            const rootSpan = this._startSpan(AttributeNames.DOCUMENT_LOAD, PTN.FETCH_START, entries);\n            if (!rootSpan) {\n                return;\n            }\n            context.with(trace.setSpan(context.active(), rootSpan), () => {\n                const fetchSpan = this._startSpan(AttributeNames.DOCUMENT_FETCH, PTN.FETCH_START, entries);\n                if (fetchSpan) {\n                    fetchSpan.setAttribute(SEMATTRS_HTTP_URL, location.href);\n                    context.with(trace.setSpan(context.active(), fetchSpan), () => {\n                        if (!this.getConfig().ignoreNetworkEvents) {\n                            addSpanNetworkEvents(fetchSpan, entries);\n                        }\n                        this._addCustomAttributesOnSpan(fetchSpan, this.getConfig().applyCustomAttributesOnSpan?.documentFetch);\n                        this._endSpan(fetchSpan, PTN.RESPONSE_END, entries);\n                    });\n                }\n            });\n            rootSpan.setAttribute(SEMATTRS_HTTP_URL, location.href);\n            rootSpan.setAttribute(SEMATTRS_HTTP_USER_AGENT, navigator.userAgent);\n            this._addResourcesSpans(rootSpan);\n            if (!this.getConfig().ignoreNetworkEvents) {\n                addSpanNetworkEvent(rootSpan, PTN.FETCH_START, entries);\n                addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_START, entries);\n                addSpanNetworkEvent(rootSpan, PTN.UNLOAD_EVENT_END, entries);\n                addSpanNetworkEvent(rootSpan, PTN.DOM_INTERACTIVE, entries);\n                addSpanNetworkEvent(rootSpan, PTN.DOM_CONTENT_LOADED_EVENT_START, entries);\n                addSpanNetworkEvent(rootSpan, PTN.DOM_CONTENT_LOADED_EVENT_END, entries);\n                addSpanNetworkEvent(rootSpan, PTN.DOM_COMPLETE, entries);\n                addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_START, entries);\n                addSpanNetworkEvent(rootSpan, PTN.LOAD_EVENT_END, entries);\n            }\n            if (!this.getConfig().ignorePerformancePaintEvents) {\n                addSpanPerformancePaintEvents(rootSpan);\n            }\n            this._addCustomAttributesOnSpan(rootSpan, this.getConfig().applyCustomAttributesOnSpan?.documentLoad);\n            this._endSpan(rootSpan, PTN.LOAD_EVENT_END, entries);\n        });\n    }\n    /**\n     * Helper function for ending span\n     * @param span\n     * @param performanceName name of performance entry for time end\n     * @param entries\n     */\n    _endSpan(span, performanceName, entries) {\n        // span can be undefined when entries are missing the certain performance - the span will not be created\n        if (span) {\n            if (hasKey(entries, performanceName)) {\n                span.end(entries[performanceName]);\n            }\n            else {\n                // just end span\n                span.end();\n            }\n        }\n    }\n    /**\n     * Creates and ends a span with network information about resource added as timed events\n     * @param resource\n     * @param parentSpan\n     */\n    _initResourceSpan(resource, parentSpan) {\n        const span = this._startSpan(AttributeNames.RESOURCE_FETCH, PTN.FETCH_START, resource, parentSpan);\n        if (span) {\n            span.setAttribute(SEMATTRS_HTTP_URL, resource.name);\n            if (!this.getConfig().ignoreNetworkEvents) {\n                addSpanNetworkEvents(span, resource);\n            }\n            this._addCustomAttributesOnResourceSpan(span, resource, this.getConfig().applyCustomAttributesOnSpan?.resourceFetch);\n            this._endSpan(span, PTN.RESPONSE_END, resource);\n        }\n    }\n    /**\n     * Helper function for starting a span\n     * @param spanName name of span\n     * @param performanceName name of performance entry for time start\n     * @param entries\n     * @param parentSpan\n     */\n    _startSpan(spanName, performanceName, entries, parentSpan) {\n        if (hasKey(entries, performanceName) &&\n            typeof entries[performanceName] === 'number') {\n            const span = this.tracer.startSpan(spanName, {\n                startTime: entries[performanceName],\n            }, parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined);\n            return span;\n        }\n        return undefined;\n    }\n    /**\n     * executes callback {_onDocumentLoaded} when the page is loaded\n     */\n    _waitForPageLoad() {\n        if (window.document.readyState === 'complete') {\n            this._onDocumentLoaded();\n        }\n        else {\n            this._onDocumentLoaded = this._onDocumentLoaded.bind(this);\n            window.addEventListener('load', this._onDocumentLoaded);\n        }\n    }\n    /**\n     * adds custom attributes to root span if configured\n     */\n    _addCustomAttributesOnSpan(span, applyCustomAttributesOnSpan) {\n        if (applyCustomAttributesOnSpan) {\n            safeExecuteInTheMiddle(() => applyCustomAttributesOnSpan(span), error => {\n                if (!error) {\n                    return;\n                }\n                this._diag.error('addCustomAttributesOnSpan', error);\n            }, true);\n        }\n    }\n    /**\n     * adds custom attributes to span if configured\n     */\n    _addCustomAttributesOnResourceSpan(span, resource, applyCustomAttributesOnSpan) {\n        if (applyCustomAttributesOnSpan) {\n            safeExecuteInTheMiddle(() => applyCustomAttributesOnSpan(span, resource), error => {\n                if (!error) {\n                    return;\n                }\n                this._diag.error('addCustomAttributesOnResourceSpan', error);\n            }, true);\n        }\n    }\n    /**\n     * implements enable function\n     */\n    enable() {\n        // remove previously attached load to avoid adding the same event twice\n        // in case of multiple enable calling.\n        window.removeEventListener('load', this._onDocumentLoaded);\n        this._waitForPageLoad();\n    }\n    /**\n     * implements disable function\n     */\n    disable() {\n        window.removeEventListener('load', this._onDocumentLoaded);\n    }\n}\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport var AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"COMPONENT\"] = \"component\";\n    AttributeNames[\"HTTP_ERROR_NAME\"] = \"http.error_name\";\n    AttributeNames[\"HTTP_STATUS_TEXT\"] = \"http.status_text\";\n})(AttributeNames || (AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Much of the logic here overlaps with the same utils file in opentelemetry-instrumentation-xml-http-request\n// These may be unified in the future.\nimport * as api from '@opentelemetry/api';\nconst DIAG_LOGGER = api.diag.createComponentLogger({\n    namespace: '@opentelemetry/opentelemetry-instrumentation-fetch/utils',\n});\n/**\n * Helper function to determine payload content length for fetch requests\n *\n * The fetch API is kinda messy: there are a couple of ways the body can be passed in.\n *\n * In all cases, the body param can be some variation of ReadableStream,\n * and ReadableStreams can only be read once! We want to avoid consuming the body here,\n * because that would mean that the body never gets sent with the actual fetch request.\n *\n * Either the first arg is a Request object, which can be cloned\n *   so we can clone that object and read the body of the clone\n *   without disturbing the original argument\n *   However, reading the body here can only be done async; the body() method returns a promise\n *   this means this entire function has to return a promise\n *\n * OR the first arg is a url/string\n *   in which case the second arg has type RequestInit\n *   RequestInit is NOT cloneable, but RequestInit.body is writable\n *   so we can chain it into ReadableStream.pipeThrough()\n *\n *   ReadableStream.pipeThrough() lets us process a stream and returns a new stream\n *   So we can measure the body length as it passes through the pie, but need to attach\n *   the new stream to the original request\n *   so that the browser still has access to the body.\n *\n * @param body\n * @returns promise that resolves to the content length of the body\n */\nexport function getFetchBodyLength(...args) {\n    if (args[0] instanceof URL || typeof args[0] === 'string') {\n        const requestInit = args[1];\n        if (!requestInit?.body) {\n            return Promise.resolve();\n        }\n        if (requestInit.body instanceof ReadableStream) {\n            const { body, length } = _getBodyNonDestructively(requestInit.body);\n            requestInit.body = body;\n            return length;\n        }\n        else {\n            return Promise.resolve(getXHRBodyLength(requestInit.body));\n        }\n    }\n    else {\n        const info = args[0];\n        if (!info?.body) {\n            return Promise.resolve();\n        }\n        return info\n            .clone()\n            .text()\n            .then(t => getByteLength(t));\n    }\n}\nfunction _getBodyNonDestructively(body) {\n    // can't read a ReadableStream without destroying it\n    // but we CAN pipe it through and return a new ReadableStream\n    // some (older) platforms don't expose the pipeThrough method and in that scenario, we're out of luck;\n    //   there's no way to read the stream without consuming it.\n    if (!body.pipeThrough) {\n        DIAG_LOGGER.warn('Platform has ReadableStream but not pipeThrough!');\n        return {\n            body,\n            length: Promise.resolve(undefined),\n        };\n    }\n    let length = 0;\n    let resolveLength;\n    const lengthPromise = new Promise(resolve => {\n        resolveLength = resolve;\n    });\n    const transform = new TransformStream({\n        start() { },\n        async transform(chunk, controller) {\n            const bytearray = (await chunk);\n            length += bytearray.byteLength;\n            controller.enqueue(chunk);\n        },\n        flush() {\n            resolveLength(length);\n        },\n    });\n    return {\n        body: body.pipeThrough(transform),\n        length: lengthPromise,\n    };\n}\nfunction isDocument(value) {\n    return typeof Document !== 'undefined' && value instanceof Document;\n}\n/**\n * Helper function to determine payload content length for XHR requests\n * @param body\n * @returns content length\n */\nexport function getXHRBodyLength(body) {\n    if (isDocument(body)) {\n        return new XMLSerializer().serializeToString(document).length;\n    }\n    // XMLHttpRequestBodyInit expands to the following:\n    if (typeof body === 'string') {\n        return getByteLength(body);\n    }\n    if (body instanceof Blob) {\n        return body.size;\n    }\n    if (body instanceof FormData) {\n        return getFormDataSize(body);\n    }\n    if (body instanceof URLSearchParams) {\n        return getByteLength(body.toString());\n    }\n    // ArrayBuffer | ArrayBufferView\n    if (body.byteLength !== undefined) {\n        return body.byteLength;\n    }\n    DIAG_LOGGER.warn('unknown body type');\n    return undefined;\n}\nconst TEXT_ENCODER = new TextEncoder();\nfunction getByteLength(s) {\n    return TEXT_ENCODER.encode(s).byteLength;\n}\nfunction getFormDataSize(formData) {\n    let size = 0;\n    for (const [key, value] of formData.entries()) {\n        size += key.length;\n        if (value instanceof Blob) {\n            size += value.size;\n        }\n        else {\n            size += value.length;\n        }\n    }\n    return size;\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.200.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { isWrapped, InstrumentationBase, safeExecuteInTheMiddle, } from '@opentelemetry/instrumentation';\nimport * as core from '@opentelemetry/core';\nimport * as web from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\nimport { SEMATTRS_HTTP_STATUS_CODE, SEMATTRS_HTTP_HOST, SEMATTRS_HTTP_USER_AGENT, SEMATTRS_HTTP_SCHEME, SEMATTRS_HTTP_URL, SEMATTRS_HTTP_METHOD, SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED, } from '@opentelemetry/semantic-conventions';\nimport { getFetchBodyLength } from './utils';\nimport { VERSION } from './version';\nimport { _globalThis } from '@opentelemetry/core';\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\nconst isNode = typeof process === 'object' && process.release?.name === 'node';\n/**\n * This class represents a fetch plugin for auto instrumentation\n */\nexport class FetchInstrumentation extends InstrumentationBase {\n    component = 'fetch';\n    version = VERSION;\n    moduleName = this.component;\n    _usedResources = new WeakSet();\n    _tasksCount = 0;\n    constructor(config = {}) {\n        super('@opentelemetry/instrumentation-fetch', VERSION, config);\n    }\n    init() { }\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     */\n    _addChildSpan(span, corsPreFlightRequest) {\n        const childSpan = this.tracer.startSpan('CORS Preflight', {\n            startTime: corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START],\n        }, api.trace.setSpan(api.context.active(), span));\n        web.addSpanNetworkEvents(childSpan, corsPreFlightRequest, this.getConfig().ignoreNetworkEvents);\n        childSpan.end(corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END]);\n    }\n    /**\n     * Adds more attributes to span just before ending it\n     * @param span\n     * @param response\n     */\n    _addFinalSpanAttributes(span, response) {\n        const parsedUrl = web.parseUrl(response.url);\n        span.setAttribute(SEMATTRS_HTTP_STATUS_CODE, response.status);\n        if (response.statusText != null) {\n            span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, response.statusText);\n        }\n        span.setAttribute(SEMATTRS_HTTP_HOST, parsedUrl.host);\n        span.setAttribute(SEMATTRS_HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n        if (typeof navigator !== 'undefined') {\n            span.setAttribute(SEMATTRS_HTTP_USER_AGENT, navigator.userAgent);\n        }\n    }\n    /**\n     * Add headers\n     * @param options\n     * @param spanUrl\n     */\n    _addHeaders(options, spanUrl) {\n        if (!web.shouldPropagateTraceHeaders(spanUrl, this.getConfig().propagateTraceHeaderCorsUrls)) {\n            const headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            if (Object.keys(headers).length > 0) {\n                this._diag.debug('headers inject skipped due to CORS policy');\n            }\n            return;\n        }\n        if (options instanceof Request) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n            });\n        }\n        else if (options.headers instanceof Headers) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n            });\n        }\n        else if (options.headers instanceof Map) {\n            api.propagation.inject(api.context.active(), options.headers, {\n                set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n            });\n        }\n        else {\n            const headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            options.headers = Object.assign({}, headers, options.headers || {});\n        }\n    }\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link FetchPluginConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    _clearResources() {\n        if (this._tasksCount === 0 && this.getConfig().clearTimingResources) {\n            performance.clearResourceTimings();\n            this._usedResources = new WeakSet();\n        }\n    }\n    /**\n     * Creates a new span\n     * @param url\n     * @param options\n     */\n    _createSpan(url, options = {}) {\n        if (core.isUrlIgnored(url, this.getConfig().ignoreUrls)) {\n            this._diag.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        const method = (options.method || 'GET').toUpperCase();\n        const spanName = `HTTP ${method}`;\n        return this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: {\n                [AttributeNames.COMPONENT]: this.moduleName,\n                [SEMATTRS_HTTP_METHOD]: method,\n                [SEMATTRS_HTTP_URL]: url,\n            },\n        });\n    }\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     * @param resourcesObserver\n     * @param endTime\n     */\n    _findResourceAndAddNetworkEvents(span, resourcesObserver, endTime) {\n        let resources = resourcesObserver.entries;\n        if (!resources.length) {\n            if (!performance.getEntriesByType) {\n                return;\n            }\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            resources = performance.getEntriesByType('resource');\n        }\n        const resource = web.getResource(resourcesObserver.spanUrl, resourcesObserver.startTime, endTime, resources, this._usedResources, 'fetch');\n        if (resource.mainRequest) {\n            const mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            const corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            web.addSpanNetworkEvents(span, mainRequest, this.getConfig().ignoreNetworkEvents);\n        }\n    }\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     */\n    _markResourceAsUsed(resource) {\n        this._usedResources.add(resource);\n    }\n    /**\n     * Finish span, add attributes, network events etc.\n     * @param span\n     * @param spanData\n     * @param response\n     */\n    _endSpan(span, spanData, response) {\n        const endTime = core.millisToHrTime(Date.now());\n        const performanceEndTime = core.hrTime();\n        this._addFinalSpanAttributes(span, response);\n        setTimeout(() => {\n            spanData.observer?.disconnect();\n            this._findResourceAndAddNetworkEvents(span, spanData, performanceEndTime);\n            this._tasksCount--;\n            this._clearResources();\n            span.end(endTime);\n        }, OBSERVER_WAIT_TIME_MS);\n    }\n    /**\n     * Patches the constructor of fetch\n     */\n    _patchConstructor() {\n        return original => {\n            const plugin = this;\n            return function patchConstructor(...args) {\n                const self = this;\n                const url = web.parseUrl(args[0] instanceof Request ? args[0].url : String(args[0])).href;\n                const options = args[0] instanceof Request ? args[0] : args[1] || {};\n                const createdSpan = plugin._createSpan(url, options);\n                if (!createdSpan) {\n                    return original.apply(this, args);\n                }\n                const spanData = plugin._prepareSpanData(url);\n                if (plugin.getConfig().measureRequestSize) {\n                    getFetchBodyLength(...args)\n                        .then(length => {\n                        if (!length)\n                            return;\n                        createdSpan.setAttribute(SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED, length);\n                    })\n                        .catch(error => {\n                        plugin._diag.warn('getFetchBodyLength', error);\n                    });\n                }\n                function endSpanOnError(span, error) {\n                    plugin._applyAttributesAfterFetch(span, options, error);\n                    plugin._endSpan(span, spanData, {\n                        status: error.status || 0,\n                        statusText: error.message,\n                        url,\n                    });\n                }\n                function endSpanOnSuccess(span, response) {\n                    plugin._applyAttributesAfterFetch(span, options, response);\n                    if (response.status >= 200 && response.status < 400) {\n                        plugin._endSpan(span, spanData, response);\n                    }\n                    else {\n                        plugin._endSpan(span, spanData, {\n                            status: response.status,\n                            statusText: response.statusText,\n                            url,\n                        });\n                    }\n                }\n                function onSuccess(span, resolve, response) {\n                    try {\n                        const resClone = response.clone();\n                        const body = resClone.body;\n                        if (body) {\n                            const reader = body.getReader();\n                            const read = () => {\n                                reader.read().then(({ done }) => {\n                                    if (done) {\n                                        endSpanOnSuccess(span, response);\n                                    }\n                                    else {\n                                        read();\n                                    }\n                                }, error => {\n                                    endSpanOnError(span, error);\n                                });\n                            };\n                            read();\n                        }\n                        else {\n                            // some older browsers don't have .body implemented\n                            endSpanOnSuccess(span, response);\n                        }\n                    }\n                    finally {\n                        resolve(response);\n                    }\n                }\n                function onError(span, reject, error) {\n                    try {\n                        endSpanOnError(span, error);\n                    }\n                    finally {\n                        reject(error);\n                    }\n                }\n                return new Promise((resolve, reject) => {\n                    return api.context.with(api.trace.setSpan(api.context.active(), createdSpan), () => {\n                        plugin._addHeaders(options, url);\n                        // Important to execute \"_callRequestHook\" after \"_addHeaders\", allowing the consumer code to override the request headers.\n                        plugin._callRequestHook(createdSpan, options);\n                        plugin._tasksCount++;\n                        // TypeScript complains about arrow function captured a this typed as globalThis\n                        // ts(7041)\n                        return original\n                            .apply(self, options instanceof Request ? [options] : [url, options])\n                            .then(onSuccess.bind(self, createdSpan, resolve), onError.bind(self, createdSpan, reject));\n                    });\n                });\n            };\n        };\n    }\n    _applyAttributesAfterFetch(span, request, result) {\n        const applyCustomAttributesOnSpan = this.getConfig().applyCustomAttributesOnSpan;\n        if (applyCustomAttributesOnSpan) {\n            safeExecuteInTheMiddle(() => applyCustomAttributesOnSpan(span, request, result), error => {\n                if (!error) {\n                    return;\n                }\n                this._diag.error('applyCustomAttributesOnSpan', error);\n            }, true);\n        }\n    }\n    _callRequestHook(span, request) {\n        const requestHook = this.getConfig().requestHook;\n        if (requestHook) {\n            safeExecuteInTheMiddle(() => requestHook(span, request), error => {\n                if (!error) {\n                    return;\n                }\n                this._diag.error('requestHook', error);\n            }, true);\n        }\n    }\n    /**\n     * Prepares a span data - needed later for matching appropriate network\n     *     resources\n     * @param spanUrl\n     */\n    _prepareSpanData(spanUrl) {\n        const startTime = core.hrTime();\n        const entries = [];\n        if (typeof PerformanceObserver !== 'function') {\n            return { entries, startTime, spanUrl };\n        }\n        const observer = new PerformanceObserver(list => {\n            const perfObsEntries = list.getEntries();\n            perfObsEntries.forEach(entry => {\n                if (entry.initiatorType === 'fetch' && entry.name === spanUrl) {\n                    entries.push(entry);\n                }\n            });\n        });\n        observer.observe({\n            entryTypes: ['resource'],\n        });\n        return { entries, observer, startTime, spanUrl };\n    }\n    /**\n     * implements enable function\n     */\n    enable() {\n        if (isNode) {\n            // Node.js v18+ *does* have a global `fetch()`, but this package does not\n            // support instrumenting it.\n            this._diag.warn(\"this instrumentation is intended for web usage only, it does not instrument Node.js's fetch()\");\n            return;\n        }\n        if (isWrapped(fetch)) {\n            this._unwrap(_globalThis, 'fetch');\n            this._diag.debug('removing previous patch for constructor');\n        }\n        this._wrap(_globalThis, 'fetch', this._patchConstructor());\n    }\n    /**\n     * implements unpatch function\n     */\n    disable() {\n        if (isNode) {\n            return;\n        }\n        this._unwrap(_globalThis, 'fetch');\n        this._usedResources = new WeakSet();\n    }\n}\n//# sourceMappingURL=fetch.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"EVENT_TYPE\"] = \"event_type\";\n    AttributeNames[\"TARGET_ELEMENT\"] = \"target_element\";\n    AttributeNames[\"TARGET_XPATH\"] = \"target_xpath\";\n    AttributeNames[\"HTTP_URL\"] = \"http.url\";\n})(AttributeNames || (AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport const PACKAGE_VERSION = '0.45.0';\nexport const PACKAGE_NAME = '@opentelemetry/instrumentation-user-interaction';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/// <reference types=\"zone.js\" />\nimport { isWrapped, InstrumentationBase } from '@opentelemetry/instrumentation';\nimport * as api from '@opentelemetry/api';\nimport { hrTime } from '@opentelemetry/core';\nimport { getElementXPath } from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\n/** @knipignore */\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nconst ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\nconst EVENT_NAVIGATION_NAME = 'Navigation:';\nconst DEFAULT_EVENT_NAMES = ['click'];\nfunction defaultShouldPreventSpanCreation() {\n    return false;\n}\n/**\n * This class represents a UserInteraction plugin for auto instrumentation.\n * If zone.js is available then it patches the zone otherwise it patches\n * addEventListener of HTMLElement\n */\nexport class UserInteractionInstrumentation extends InstrumentationBase {\n    version = PACKAGE_VERSION;\n    moduleName = 'user-interaction';\n    _spansData = new WeakMap();\n    // for addEventListener/removeEventListener state\n    _wrappedListeners = new WeakMap();\n    // for event bubbling\n    _eventsSpanMap = new WeakMap();\n    _eventNames;\n    _shouldPreventSpanCreation;\n    constructor(config = {}) {\n        super(PACKAGE_NAME, PACKAGE_VERSION, config);\n        this._eventNames = new Set(config?.eventNames ?? DEFAULT_EVENT_NAMES);\n        this._shouldPreventSpanCreation =\n            typeof config?.shouldPreventSpanCreation === 'function'\n                ? config.shouldPreventSpanCreation\n                : defaultShouldPreventSpanCreation;\n    }\n    init() { }\n    /**\n     * This will check if last task was timeout and will save the time to\n     * fix the user interaction when nothing happens\n     * This timeout comes from xhr plugin which is needed to collect information\n     * about last xhr main request from observer\n     * @param task\n     * @param span\n     */\n    _checkForTimeout(task, span) {\n        const spanData = this._spansData.get(span);\n        if (spanData) {\n            if (task.source === 'setTimeout') {\n                spanData.hrTimeLastTimeout = hrTime();\n            }\n            else if (task.source !== 'Promise.then' &&\n                task.source !== 'setTimeout') {\n                spanData.hrTimeLastTimeout = undefined;\n            }\n        }\n    }\n    /**\n     * Controls whether or not to create a span, based on the event type.\n     */\n    _allowEventName(eventName) {\n        return this._eventNames.has(eventName);\n    }\n    /**\n     * Creates a new span\n     * @param element\n     * @param eventName\n     * @param parentSpan\n     */\n    _createSpan(element, eventName, parentSpan) {\n        if (!(element instanceof HTMLElement)) {\n            return undefined;\n        }\n        if (!element.getAttribute) {\n            return undefined;\n        }\n        if (element.hasAttribute('disabled')) {\n            return undefined;\n        }\n        if (!this._allowEventName(eventName)) {\n            return undefined;\n        }\n        const xpath = getElementXPath(element, true);\n        try {\n            const span = this.tracer.startSpan(eventName, {\n                attributes: {\n                    [AttributeNames.EVENT_TYPE]: eventName,\n                    [AttributeNames.TARGET_ELEMENT]: element.tagName,\n                    [AttributeNames.TARGET_XPATH]: xpath,\n                    [AttributeNames.HTTP_URL]: window.location.href,\n                },\n            }, parentSpan\n                ? api.trace.setSpan(api.context.active(), parentSpan)\n                : undefined);\n            if (this._shouldPreventSpanCreation(eventName, element, span) === true) {\n                return undefined;\n            }\n            this._spansData.set(span, {\n                taskCount: 0,\n            });\n            return span;\n        }\n        catch (e) {\n            this._diag.error('failed to start create new user interaction span', e);\n        }\n        return undefined;\n    }\n    /**\n     * Decrement number of tasks that left in zone,\n     * This is needed to be able to end span when no more tasks left\n     * @param span\n     */\n    _decrementTask(span) {\n        const spanData = this._spansData.get(span);\n        if (spanData) {\n            spanData.taskCount--;\n            if (spanData.taskCount === 0) {\n                this._tryToEndSpan(span, spanData.hrTimeLastTimeout);\n            }\n        }\n    }\n    /**\n     * Return the current span\n     * @param zone\n     * @private\n     */\n    _getCurrentSpan(zone) {\n        const context = zone.get(ZONE_CONTEXT_KEY);\n        if (context) {\n            return api.trace.getSpan(context);\n        }\n        return context;\n    }\n    /**\n     * Increment number of tasks that are run within the same zone.\n     *     This is needed to be able to end span when no more tasks left\n     * @param span\n     */\n    _incrementTask(span) {\n        const spanData = this._spansData.get(span);\n        if (spanData) {\n            spanData.taskCount++;\n        }\n    }\n    /**\n     * Returns true iff we should use the patched callback; false if it's already been patched\n     */\n    addPatchedListener(on, type, listener, wrappedListener) {\n        let listener2Type = this._wrappedListeners.get(listener);\n        if (!listener2Type) {\n            listener2Type = new Map();\n            this._wrappedListeners.set(listener, listener2Type);\n        }\n        let element2patched = listener2Type.get(type);\n        if (!element2patched) {\n            element2patched = new Map();\n            listener2Type.set(type, element2patched);\n        }\n        if (element2patched.has(on)) {\n            return false;\n        }\n        element2patched.set(on, wrappedListener);\n        return true;\n    }\n    /**\n     * Returns the patched version of the callback (or undefined)\n     */\n    removePatchedListener(on, type, listener) {\n        const listener2Type = this._wrappedListeners.get(listener);\n        if (!listener2Type) {\n            return undefined;\n        }\n        const element2patched = listener2Type.get(type);\n        if (!element2patched) {\n            return undefined;\n        }\n        const patched = element2patched.get(on);\n        if (patched) {\n            element2patched.delete(on);\n            if (element2patched.size === 0) {\n                listener2Type.delete(type);\n                if (listener2Type.size === 0) {\n                    this._wrappedListeners.delete(listener);\n                }\n            }\n        }\n        return patched;\n    }\n    // utility method to deal with the Function|EventListener nature of addEventListener\n    _invokeListener(listener, target, args) {\n        if (typeof listener === 'function') {\n            return listener.apply(target, args);\n        }\n        else {\n            return listener.handleEvent(args[0]);\n        }\n    }\n    /**\n     * This patches the addEventListener of HTMLElement to be able to\n     * auto instrument the click events\n     * This is done when zone is not available\n     */\n    _patchAddEventListener() {\n        const plugin = this;\n        return (original) => {\n            return function addEventListenerPatched(type, listener, useCapture) {\n                // Forward calls with listener = null\n                if (!listener) {\n                    return original.call(this, type, listener, useCapture);\n                }\n                // filter out null (typeof null === 'object')\n                const once = useCapture && typeof useCapture === 'object' && useCapture.once;\n                const patchedListener = function (...args) {\n                    let parentSpan;\n                    const event = args[0];\n                    const target = event?.target;\n                    if (event) {\n                        parentSpan = plugin._eventsSpanMap.get(event);\n                    }\n                    if (once) {\n                        plugin.removePatchedListener(this, type, listener);\n                    }\n                    const span = plugin._createSpan(target, type, parentSpan);\n                    if (span) {\n                        if (event) {\n                            plugin._eventsSpanMap.set(event, span);\n                        }\n                        return api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n                            const result = plugin._invokeListener(listener, this, args);\n                            // no zone so end span immediately\n                            span.end();\n                            return result;\n                        });\n                    }\n                    else {\n                        return plugin._invokeListener(listener, this, args);\n                    }\n                };\n                if (plugin.addPatchedListener(this, type, listener, patchedListener)) {\n                    return original.call(this, type, patchedListener, useCapture);\n                }\n            };\n        };\n    }\n    /**\n     * This patches the removeEventListener of HTMLElement to handle the fact that\n     * we patched the original callbacks\n     * This is done when zone is not available\n     */\n    _patchRemoveEventListener() {\n        const plugin = this;\n        return (original) => {\n            return function removeEventListenerPatched(type, listener, useCapture) {\n                const wrappedListener = plugin.removePatchedListener(this, type, listener);\n                if (wrappedListener) {\n                    return original.call(this, type, wrappedListener, useCapture);\n                }\n                else {\n                    return original.call(this, type, listener, useCapture);\n                }\n            };\n        };\n    }\n    /**\n     * Most browser provide event listener api via EventTarget in prototype chain.\n     * Exception to this is IE 11 which has it on the prototypes closest to EventTarget:\n     *\n     * * - has addEventListener in IE\n     * ** - has addEventListener in all other browsers\n     * ! - missing in IE\n     *\n     * HTMLElement -> Element -> Node * -> EventTarget **! -> Object\n     * Document -> Node * -> EventTarget **! -> Object\n     * Window * -> WindowProperties ! -> EventTarget **! -> Object\n     */\n    _getPatchableEventTargets() {\n        return window.EventTarget\n            ? [EventTarget.prototype]\n            : [Node.prototype, Window.prototype];\n    }\n    /**\n     * Patches the history api\n     */\n    _patchHistoryApi() {\n        this._unpatchHistoryApi();\n        this._wrap(history, 'replaceState', this._patchHistoryMethod());\n        this._wrap(history, 'pushState', this._patchHistoryMethod());\n        this._wrap(history, 'back', this._patchHistoryMethod());\n        this._wrap(history, 'forward', this._patchHistoryMethod());\n        this._wrap(history, 'go', this._patchHistoryMethod());\n    }\n    /**\n     * Patches the certain history api method\n     */\n    _patchHistoryMethod() {\n        const plugin = this;\n        return (original) => {\n            return function patchHistoryMethod(...args) {\n                const url = `${location.pathname}${location.hash}${location.search}`;\n                const result = original.apply(this, args);\n                const urlAfter = `${location.pathname}${location.hash}${location.search}`;\n                if (url !== urlAfter) {\n                    plugin._updateInteractionName(urlAfter);\n                }\n                return result;\n            };\n        };\n    }\n    /**\n     * unpatch the history api methods\n     */\n    _unpatchHistoryApi() {\n        if (isWrapped(history.replaceState))\n            this._unwrap(history, 'replaceState');\n        if (isWrapped(history.pushState))\n            this._unwrap(history, 'pushState');\n        if (isWrapped(history.back))\n            this._unwrap(history, 'back');\n        if (isWrapped(history.forward))\n            this._unwrap(history, 'forward');\n        if (isWrapped(history.go))\n            this._unwrap(history, 'go');\n    }\n    /**\n     * Updates interaction span name\n     * @param url\n     */\n    _updateInteractionName(url) {\n        const span = api.trace.getSpan(api.context.active());\n        if (span && typeof span.updateName === 'function') {\n            span.updateName(`${EVENT_NAVIGATION_NAME} ${url}`);\n        }\n    }\n    /**\n     * Patches zone cancel task - this is done to be able to correctly\n     * decrement the number of remaining tasks\n     */\n    _patchZoneCancelTask() {\n        const plugin = this;\n        return (original) => {\n            return function patchCancelTask(task) {\n                const currentZone = Zone.current;\n                const currentSpan = plugin._getCurrentSpan(currentZone);\n                if (currentSpan && plugin._shouldCountTask(task, currentZone)) {\n                    plugin._decrementTask(currentSpan);\n                }\n                return original.call(this, task);\n            };\n        };\n    }\n    /**\n     * Patches zone schedule task - this is done to be able to correctly\n     * increment the number of tasks running within current zone but also to\n     * save time in case of timeout running from xhr plugin when waiting for\n     * main request from PerformanceResourceTiming\n     */\n    _patchZoneScheduleTask() {\n        const plugin = this;\n        return (original) => {\n            return function patchScheduleTask(task) {\n                const currentZone = Zone.current;\n                const currentSpan = plugin._getCurrentSpan(currentZone);\n                if (currentSpan && plugin._shouldCountTask(task, currentZone)) {\n                    plugin._incrementTask(currentSpan);\n                    plugin._checkForTimeout(task, currentSpan);\n                }\n                return original.call(this, task);\n            };\n        };\n    }\n    /**\n     * Patches zone run task - this is done to be able to create a span when\n     * user interaction starts\n     * @private\n     */\n    _patchZoneRunTask() {\n        const plugin = this;\n        return (original) => {\n            return function patchRunTask(task, applyThis, applyArgs) {\n                const event = Array.isArray(applyArgs) && applyArgs[0] instanceof Event\n                    ? applyArgs[0]\n                    : undefined;\n                const target = event?.target;\n                let span;\n                const activeZone = this;\n                if (target) {\n                    span = plugin._createSpan(target, task.eventName);\n                    if (span) {\n                        plugin._incrementTask(span);\n                        return activeZone.run(() => {\n                            try {\n                                return api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n                                    const currentZone = Zone.current;\n                                    task._zone = currentZone;\n                                    return original.call(currentZone, task, applyThis, applyArgs);\n                                });\n                            }\n                            finally {\n                                plugin._decrementTask(span);\n                            }\n                        });\n                    }\n                }\n                else {\n                    span = plugin._getCurrentSpan(activeZone);\n                }\n                try {\n                    return original.call(activeZone, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (span && plugin._shouldCountTask(task, activeZone)) {\n                        plugin._decrementTask(span);\n                    }\n                }\n            };\n        };\n    }\n    /**\n     * Decides if task should be counted.\n     * @param task\n     * @param currentZone\n     * @private\n     */\n    _shouldCountTask(task, currentZone) {\n        if (task._zone) {\n            currentZone = task._zone;\n        }\n        if (!currentZone || !task.data || task.data.isPeriodic) {\n            return false;\n        }\n        const currentSpan = this._getCurrentSpan(currentZone);\n        if (!currentSpan) {\n            return false;\n        }\n        if (!this._spansData.get(currentSpan)) {\n            return false;\n        }\n        return task.type === 'macroTask' || task.type === 'microTask';\n    }\n    /**\n     * Will try to end span when such span still exists.\n     * @param span\n     * @param endTime\n     * @private\n     */\n    _tryToEndSpan(span, endTime) {\n        if (span) {\n            const spanData = this._spansData.get(span);\n            if (spanData) {\n                span.end(endTime);\n                this._spansData.delete(span);\n            }\n        }\n    }\n    /**\n     * implements enable function\n     */\n    enable() {\n        const ZoneWithPrototype = this._getZoneWithPrototype();\n        this._diag.debug('applying patch to', this.moduleName, this.version, 'zone:', !!ZoneWithPrototype);\n        if (ZoneWithPrototype) {\n            if (isWrapped(ZoneWithPrototype.prototype.runTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'runTask');\n                this._diag.debug('removing previous patch from method runTask');\n            }\n            if (isWrapped(ZoneWithPrototype.prototype.scheduleTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'scheduleTask');\n                this._diag.debug('removing previous patch from method scheduleTask');\n            }\n            if (isWrapped(ZoneWithPrototype.prototype.cancelTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'cancelTask');\n                this._diag.debug('removing previous patch from method cancelTask');\n            }\n            this._zonePatched = true;\n            this._wrap(ZoneWithPrototype.prototype, 'runTask', this._patchZoneRunTask());\n            this._wrap(ZoneWithPrototype.prototype, 'scheduleTask', this._patchZoneScheduleTask());\n            this._wrap(ZoneWithPrototype.prototype, 'cancelTask', this._patchZoneCancelTask());\n        }\n        else {\n            this._zonePatched = false;\n            const targets = this._getPatchableEventTargets();\n            targets.forEach(target => {\n                if (isWrapped(target.addEventListener)) {\n                    this._unwrap(target, 'addEventListener');\n                    this._diag.debug('removing previous patch from method addEventListener');\n                }\n                if (isWrapped(target.removeEventListener)) {\n                    this._unwrap(target, 'removeEventListener');\n                    this._diag.debug('removing previous patch from method removeEventListener');\n                }\n                this._wrap(target, 'addEventListener', this._patchAddEventListener());\n                this._wrap(target, 'removeEventListener', this._patchRemoveEventListener());\n            });\n        }\n        this._patchHistoryApi();\n    }\n    /**\n     * implements unpatch function\n     */\n    disable() {\n        const ZoneWithPrototype = this._getZoneWithPrototype();\n        this._diag.debug('removing patch from', this.moduleName, this.version, 'zone:', !!ZoneWithPrototype);\n        if (ZoneWithPrototype && this._zonePatched) {\n            if (isWrapped(ZoneWithPrototype.prototype.runTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'runTask');\n            }\n            if (isWrapped(ZoneWithPrototype.prototype.scheduleTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'scheduleTask');\n            }\n            if (isWrapped(ZoneWithPrototype.prototype.cancelTask)) {\n                this._unwrap(ZoneWithPrototype.prototype, 'cancelTask');\n            }\n        }\n        else {\n            const targets = this._getPatchableEventTargets();\n            targets.forEach(target => {\n                if (isWrapped(target.addEventListener)) {\n                    this._unwrap(target, 'addEventListener');\n                }\n                if (isWrapped(target.removeEventListener)) {\n                    this._unwrap(target, 'removeEventListener');\n                }\n            });\n        }\n        this._unpatchHistoryApi();\n    }\n    /**\n     * returns Zone\n     */\n    _getZoneWithPrototype() {\n        const _window = window;\n        return _window.Zone;\n    }\n}\n//# sourceMappingURL=instrumentation.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var EventNames;\n(function (EventNames) {\n    EventNames[\"METHOD_OPEN\"] = \"open\";\n    EventNames[\"METHOD_SEND\"] = \"send\";\n    EventNames[\"EVENT_ABORT\"] = \"abort\";\n    EventNames[\"EVENT_ERROR\"] = \"error\";\n    EventNames[\"EVENT_LOAD\"] = \"loaded\";\n    EventNames[\"EVENT_TIMEOUT\"] = \"timeout\";\n})(EventNames || (EventNames = {}));\n//# sourceMappingURL=EventNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Much of the logic here overlaps with the same utils file in opentelemetry-instrumentation-fetch\n// These may be unified in the future.\nimport * as api from '@opentelemetry/api';\nconst DIAG_LOGGER = api.diag.createComponentLogger({\n    namespace: '@opentelemetry/opentelemetry-instrumentation-xml-http-request/utils',\n});\nfunction isDocument(value) {\n    return typeof Document !== 'undefined' && value instanceof Document;\n}\n/**\n * Helper function to determine payload content length for XHR requests\n * @param body\n * @returns content length\n */\nexport function getXHRBodyLength(body) {\n    if (isDocument(body)) {\n        return new XMLSerializer().serializeToString(document).length;\n    }\n    // XMLHttpRequestBodyInit expands to the following:\n    if (typeof body === 'string') {\n        return getByteLength(body);\n    }\n    if (body instanceof Blob) {\n        return body.size;\n    }\n    if (body instanceof FormData) {\n        return getFormDataSize(body);\n    }\n    if (body instanceof URLSearchParams) {\n        return getByteLength(body.toString());\n    }\n    // ArrayBuffer | ArrayBufferView\n    if (body.byteLength !== undefined) {\n        return body.byteLength;\n    }\n    DIAG_LOGGER.warn('unknown body type');\n    return undefined;\n}\nconst TEXT_ENCODER = new TextEncoder();\nfunction getByteLength(s) {\n    return TEXT_ENCODER.encode(s).byteLength;\n}\nfunction getFormDataSize(formData) {\n    let size = 0;\n    for (const [key, value] of formData.entries()) {\n        size += key.length;\n        if (value instanceof Blob) {\n            size += value.size;\n        }\n        else {\n            size += value.length;\n        }\n    }\n    return size;\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.200.0';\n//# sourceMappingURL=version.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport var AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"HTTP_STATUS_TEXT\"] = \"http.status_text\";\n})(AttributeNames || (AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as api from '@opentelemetry/api';\nimport { isWrapped, InstrumentationBase, safeExecuteInTheMiddle, } from '@opentelemetry/instrumentation';\nimport { hrTime, isUrlIgnored, otperformance } from '@opentelemetry/core';\nimport { SEMATTRS_HTTP_HOST, SEMATTRS_HTTP_METHOD, SEMATTRS_HTTP_SCHEME, SEMATTRS_HTTP_STATUS_CODE, SEMATTRS_HTTP_URL, SEMATTRS_HTTP_USER_AGENT, SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED, } from '@opentelemetry/semantic-conventions';\nimport { addSpanNetworkEvents, getResource, PerformanceTimingNames as PTN, shouldPropagateTraceHeaders, parseUrl, } from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nimport { getXHRBodyLength } from './utils';\nimport { VERSION } from './version';\nimport { AttributeNames } from './enums/AttributeNames';\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\n/**\n * This class represents a XMLHttpRequest plugin for auto instrumentation\n */\nexport class XMLHttpRequestInstrumentation extends InstrumentationBase {\n    component = 'xml-http-request';\n    version = VERSION;\n    moduleName = this.component;\n    _tasksCount = 0;\n    _xhrMem = new WeakMap();\n    _usedResources = new WeakSet();\n    constructor(config = {}) {\n        super('@opentelemetry/instrumentation-xml-http-request', VERSION, config);\n    }\n    init() { }\n    /**\n     * Adds custom headers to XMLHttpRequest\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    _addHeaders(xhr, spanUrl) {\n        const url = parseUrl(spanUrl).href;\n        if (!shouldPropagateTraceHeaders(url, this.getConfig().propagateTraceHeaderCorsUrls)) {\n            const headers = {};\n            api.propagation.inject(api.context.active(), headers);\n            if (Object.keys(headers).length > 0) {\n                this._diag.debug('headers inject skipped due to CORS policy');\n            }\n            return;\n        }\n        const headers = {};\n        api.propagation.inject(api.context.active(), headers);\n        Object.keys(headers).forEach(key => {\n            xhr.setRequestHeader(key, String(headers[key]));\n        });\n    }\n    /**\n     * Add cors pre flight child span\n     * @param span\n     * @param corsPreFlightRequest\n     * @private\n     */\n    _addChildSpan(span, corsPreFlightRequest) {\n        api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n            const childSpan = this.tracer.startSpan('CORS Preflight', {\n                startTime: corsPreFlightRequest[PTN.FETCH_START],\n            });\n            addSpanNetworkEvents(childSpan, corsPreFlightRequest, this.getConfig().ignoreNetworkEvents);\n            childSpan.end(corsPreFlightRequest[PTN.RESPONSE_END]);\n        });\n    }\n    /**\n     * Add attributes when span is going to end\n     * @param span\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    _addFinalSpanAttributes(span, xhrMem, spanUrl) {\n        if (typeof spanUrl === 'string') {\n            const parsedUrl = parseUrl(spanUrl);\n            if (xhrMem.status !== undefined) {\n                span.setAttribute(SEMATTRS_HTTP_STATUS_CODE, xhrMem.status);\n            }\n            if (xhrMem.statusText !== undefined) {\n                span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, xhrMem.statusText);\n            }\n            span.setAttribute(SEMATTRS_HTTP_HOST, parsedUrl.host);\n            span.setAttribute(SEMATTRS_HTTP_SCHEME, parsedUrl.protocol.replace(':', ''));\n            // @TODO do we want to collect this or it will be collected earlier once only or\n            //    maybe when parent span is not available ?\n            span.setAttribute(SEMATTRS_HTTP_USER_AGENT, navigator.userAgent);\n        }\n    }\n    _applyAttributesAfterXHR(span, xhr) {\n        const applyCustomAttributesOnSpan = this.getConfig().applyCustomAttributesOnSpan;\n        if (typeof applyCustomAttributesOnSpan === 'function') {\n            safeExecuteInTheMiddle(() => applyCustomAttributesOnSpan(span, xhr), error => {\n                if (!error) {\n                    return;\n                }\n                this._diag.error('applyCustomAttributesOnSpan', error);\n            }, true);\n        }\n    }\n    /**\n     * will collect information about all resources created\n     * between \"send\" and \"end\" with additional waiting for main resource\n     * @param xhr\n     * @param spanUrl\n     * @private\n     */\n    _addResourceObserver(xhr, spanUrl) {\n        const xhrMem = this._xhrMem.get(xhr);\n        if (!xhrMem ||\n            typeof PerformanceObserver !== 'function' ||\n            typeof PerformanceResourceTiming !== 'function') {\n            return;\n        }\n        xhrMem.createdResources = {\n            observer: new PerformanceObserver(list => {\n                const entries = list.getEntries();\n                const parsedUrl = parseUrl(spanUrl);\n                entries.forEach(entry => {\n                    if (entry.initiatorType === 'xmlhttprequest' &&\n                        entry.name === parsedUrl.href) {\n                        if (xhrMem.createdResources) {\n                            xhrMem.createdResources.entries.push(entry);\n                        }\n                    }\n                });\n            }),\n            entries: [],\n        };\n        xhrMem.createdResources.observer.observe({\n            entryTypes: ['resource'],\n        });\n    }\n    /**\n     * Clears the resource timings and all resources assigned with spans\n     *     when {@link XMLHttpRequestInstrumentationConfig.clearTimingResources} is\n     *     set to true (default false)\n     * @private\n     */\n    _clearResources() {\n        if (this._tasksCount === 0 && this.getConfig().clearTimingResources) {\n            otperformance.clearResourceTimings();\n            this._xhrMem = new WeakMap();\n            this._usedResources = new WeakSet();\n        }\n    }\n    /**\n     * Finds appropriate resource and add network events to the span\n     * @param span\n     */\n    _findResourceAndAddNetworkEvents(xhrMem, span, spanUrl, startTime, endTime) {\n        if (!spanUrl || !startTime || !endTime || !xhrMem.createdResources) {\n            return;\n        }\n        let resources = xhrMem.createdResources.entries;\n        if (!resources || !resources.length) {\n            // fallback - either Observer is not available or it took longer\n            // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n            // information\n            // ts thinks this is the perf_hooks module, but it is the browser performance api\n            resources = otperformance.getEntriesByType('resource');\n        }\n        const resource = getResource(parseUrl(spanUrl).href, startTime, endTime, resources, this._usedResources);\n        if (resource.mainRequest) {\n            const mainRequest = resource.mainRequest;\n            this._markResourceAsUsed(mainRequest);\n            const corsPreFlightRequest = resource.corsPreFlightRequest;\n            if (corsPreFlightRequest) {\n                this._addChildSpan(span, corsPreFlightRequest);\n                this._markResourceAsUsed(corsPreFlightRequest);\n            }\n            addSpanNetworkEvents(span, mainRequest, this.getConfig().ignoreNetworkEvents);\n        }\n    }\n    /**\n     * Removes the previous information about span.\n     * This might happened when the same xhr is used again.\n     * @param xhr\n     * @private\n     */\n    _cleanPreviousSpanInformation(xhr) {\n        const xhrMem = this._xhrMem.get(xhr);\n        if (xhrMem) {\n            const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n            if (callbackToRemoveEvents) {\n                callbackToRemoveEvents();\n            }\n            this._xhrMem.delete(xhr);\n        }\n    }\n    /**\n     * Creates a new span when method \"open\" is called\n     * @param xhr\n     * @param url\n     * @param method\n     * @private\n     */\n    _createSpan(xhr, url, method) {\n        if (isUrlIgnored(url, this.getConfig().ignoreUrls)) {\n            this._diag.debug('ignoring span as url matches ignored url');\n            return;\n        }\n        const spanName = method.toUpperCase();\n        const currentSpan = this.tracer.startSpan(spanName, {\n            kind: api.SpanKind.CLIENT,\n            attributes: {\n                [SEMATTRS_HTTP_METHOD]: method,\n                [SEMATTRS_HTTP_URL]: parseUrl(url).toString(),\n            },\n        });\n        currentSpan.addEvent(EventNames.METHOD_OPEN);\n        this._cleanPreviousSpanInformation(xhr);\n        this._xhrMem.set(xhr, {\n            span: currentSpan,\n            spanUrl: url,\n        });\n        return currentSpan;\n    }\n    /**\n     * Marks certain [resource]{@link PerformanceResourceTiming} when information\n     * from this is used to add events to span.\n     * This is done to avoid reusing the same resource again for next span\n     * @param resource\n     * @private\n     */\n    _markResourceAsUsed(resource) {\n        this._usedResources.add(resource);\n    }\n    /**\n     * Patches the method open\n     * @private\n     */\n    _patchOpen() {\n        return (original) => {\n            const plugin = this;\n            return function patchOpen(...args) {\n                const method = args[0];\n                const url = args[1];\n                plugin._createSpan(this, url, method);\n                return original.apply(this, args);\n            };\n        };\n    }\n    /**\n     * Patches the method send\n     * @private\n     */\n    _patchSend() {\n        const plugin = this;\n        function endSpanTimeout(eventName, xhrMem, performanceEndTime, endTime) {\n            const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n            if (typeof callbackToRemoveEvents === 'function') {\n                callbackToRemoveEvents();\n            }\n            const { span, spanUrl, sendStartTime } = xhrMem;\n            if (span) {\n                plugin._findResourceAndAddNetworkEvents(xhrMem, span, spanUrl, sendStartTime, performanceEndTime);\n                span.addEvent(eventName, endTime);\n                plugin._addFinalSpanAttributes(span, xhrMem, spanUrl);\n                span.end(endTime);\n                plugin._tasksCount--;\n            }\n            plugin._clearResources();\n        }\n        function endSpan(eventName, xhr) {\n            const xhrMem = plugin._xhrMem.get(xhr);\n            if (!xhrMem) {\n                return;\n            }\n            xhrMem.status = xhr.status;\n            xhrMem.statusText = xhr.statusText;\n            plugin._xhrMem.delete(xhr);\n            if (xhrMem.span) {\n                plugin._applyAttributesAfterXHR(xhrMem.span, xhr);\n            }\n            const performanceEndTime = hrTime();\n            const endTime = Date.now();\n            // the timeout is needed as observer doesn't have yet information\n            // when event \"load\" is called. Also the time may differ depends on\n            // browser and speed of computer\n            setTimeout(() => {\n                endSpanTimeout(eventName, xhrMem, performanceEndTime, endTime);\n            }, OBSERVER_WAIT_TIME_MS);\n        }\n        function onError() {\n            endSpan(EventNames.EVENT_ERROR, this);\n        }\n        function onAbort() {\n            endSpan(EventNames.EVENT_ABORT, this);\n        }\n        function onTimeout() {\n            endSpan(EventNames.EVENT_TIMEOUT, this);\n        }\n        function onLoad() {\n            if (this.status < 299) {\n                endSpan(EventNames.EVENT_LOAD, this);\n            }\n            else {\n                endSpan(EventNames.EVENT_ERROR, this);\n            }\n        }\n        function unregister(xhr) {\n            xhr.removeEventListener('abort', onAbort);\n            xhr.removeEventListener('error', onError);\n            xhr.removeEventListener('load', onLoad);\n            xhr.removeEventListener('timeout', onTimeout);\n            const xhrMem = plugin._xhrMem.get(xhr);\n            if (xhrMem) {\n                xhrMem.callbackToRemoveEvents = undefined;\n            }\n        }\n        return (original) => {\n            return function patchSend(...args) {\n                const xhrMem = plugin._xhrMem.get(this);\n                if (!xhrMem) {\n                    return original.apply(this, args);\n                }\n                const currentSpan = xhrMem.span;\n                const spanUrl = xhrMem.spanUrl;\n                if (currentSpan && spanUrl) {\n                    if (plugin.getConfig().measureRequestSize && args?.[0]) {\n                        const body = args[0];\n                        const bodyLength = getXHRBodyLength(body);\n                        if (bodyLength !== undefined) {\n                            currentSpan.setAttribute(SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED, bodyLength);\n                        }\n                    }\n                    api.context.with(api.trace.setSpan(api.context.active(), currentSpan), () => {\n                        plugin._tasksCount++;\n                        xhrMem.sendStartTime = hrTime();\n                        currentSpan.addEvent(EventNames.METHOD_SEND);\n                        this.addEventListener('abort', onAbort);\n                        this.addEventListener('error', onError);\n                        this.addEventListener('load', onLoad);\n                        this.addEventListener('timeout', onTimeout);\n                        xhrMem.callbackToRemoveEvents = () => {\n                            unregister(this);\n                            if (xhrMem.createdResources) {\n                                xhrMem.createdResources.observer.disconnect();\n                            }\n                        };\n                        plugin._addHeaders(this, spanUrl);\n                        plugin._addResourceObserver(this, spanUrl);\n                    });\n                }\n                return original.apply(this, args);\n            };\n        };\n    }\n    /**\n     * implements enable function\n     */\n    enable() {\n        this._diag.debug('applying patch to', this.moduleName, this.version);\n        if (isWrapped(XMLHttpRequest.prototype.open)) {\n            this._unwrap(XMLHttpRequest.prototype, 'open');\n            this._diag.debug('removing previous patch from method open');\n        }\n        if (isWrapped(XMLHttpRequest.prototype.send)) {\n            this._unwrap(XMLHttpRequest.prototype, 'send');\n            this._diag.debug('removing previous patch from method send');\n        }\n        this._wrap(XMLHttpRequest.prototype, 'open', this._patchOpen());\n        this._wrap(XMLHttpRequest.prototype, 'send', this._patchSend());\n    }\n    /**\n     * implements disable function\n     */\n    disable() {\n        this._diag.debug('removing patch from', this.moduleName, this.version);\n        this._unwrap(XMLHttpRequest.prototype, 'open');\n        this._unwrap(XMLHttpRequest.prototype, 'send');\n        this._tasksCount = 0;\n        this._xhrMem = new WeakMap();\n        this._usedResources = new WeakSet();\n    }\n}\n//# sourceMappingURL=xhr.js.map","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { DocumentLoadInstrumentation } from '@opentelemetry/instrumentation-document-load';\nimport { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';\nimport { UserInteractionInstrumentation } from '@opentelemetry/instrumentation-user-interaction';\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\nconst InstrumentationMap = {\n    '@opentelemetry/instrumentation-document-load': DocumentLoadInstrumentation,\n    '@opentelemetry/instrumentation-fetch': FetchInstrumentation,\n    '@opentelemetry/instrumentation-user-interaction': UserInteractionInstrumentation,\n    '@opentelemetry/instrumentation-xml-http-request': XMLHttpRequestInstrumentation,\n};\nexport function getWebAutoInstrumentations(inputConfigs = {}) {\n    for (const name of Object.keys(inputConfigs)) {\n        if (!Object.prototype.hasOwnProperty.call(InstrumentationMap, name)) {\n            diag.error(`Provided instrumentation name \"${name}\" not found`);\n            continue;\n        }\n    }\n    const instrumentations = [];\n    for (const name of Object.keys(InstrumentationMap)) {\n        const Instance = InstrumentationMap[name];\n        // Defaults are defined by the instrumentation itself\n        const userConfig = inputConfigs[name] ?? {};\n        if (userConfig.enabled === false) {\n            diag.debug(`Disabling instrumentation for ${name}`);\n            continue;\n        }\n        try {\n            diag.debug(`Loading instrumentation for ${name}`);\n            instrumentations.push(new Instance(userConfig));\n        }\n        catch (e) {\n            diag.error(e);\n        }\n    }\n    return instrumentations;\n}\n//# sourceMappingURL=utils.js.map","import { BatchSpanProcessor, WebTracerProvider } from \"@opentelemetry/sdk-trace-web\";\nimport { ZoneContextManager } from \"@opentelemetry/context-zone\";\nimport { registerInstrumentations } from \"@opentelemetry/instrumentation\";\nimport { OTLPTraceExporter } from \"@opentelemetry/exporter-trace-otlp-http\";\nimport { ATTR_SERVICE_NAME, ATTR_SERVICE_VERSION } from \"@opentelemetry/semantic-conventions\";\nimport { ATTR_DEPLOYMENT_ENVIRONMENT_NAME } from \"@opentelemetry/semantic-conventions/incubating\";\nimport { getWebAutoInstrumentations } from \"@opentelemetry/auto-instrumentations-web\";\n\n// Check if running in browser environment\nconst isBrowser = typeof window !== 'undefined';\n\n// Get configuration from window object if we're in a browser (injected by Hugo template)\nlet authToken = '';\nlet environment = 'production';\n\nif (isBrowser && window.DASH0_CONFIG) {\n  authToken = window.DASH0_CONFIG.authToken;\n  environment = window.DASH0_CONFIG.environment || 'production';\n  \n  // Don't initialize if using the placeholder token\n  if (authToken === 'YOUR_DASH0_AUTH_TOKEN') {\n    console.warn('Skipping OpenTelemetry initialization: No valid Dash0 auth token provided');\n    console.warn('Set HUGO_DASH0_AUTH_TOKEN environment variable in your Cloudflare Pages environment');\n  }\n}\n\n// Only proceed if we have a valid token\nif (authToken && authToken !== 'YOUR_DASH0_AUTH_TOKEN') {\n  console.log('Initializing OpenTelemetry for', environment);\n\n  const tracerProvider = new WebTracerProvider({\n    resource: {\n      attributes: {\n        [ATTR_DEPLOYMENT_ENVIRONMENT_NAME]: environment,\n        [ATTR_SERVICE_NAME]: \"chrisboyd-blog\",\n        [ATTR_SERVICE_VERSION]: \"1.0.0\",\n        // Add Cloudflare-specific attributes if available\n        ...(isBrowser && window.location.hostname.includes('.pages.dev') ? {\n          'cf.pages.url': window.location.origin,\n          'cf.pages.environment': 'preview'\n        } : {})\n      },\n    },\n    spanProcessors: [\n      new BatchSpanProcessor(\n        new OTLPTraceExporter({\n          url: \"https://ingress.us-west-2.aws.dash0.com/v1/traces\",\n          headers: {\n            'Authorization': `Bearer ${authToken}`,\n          },\n        }),\n        {\n          maxQueueSize: 100, // The maximum queue size. After the size is reached, spans are dropped.\n          maxExportBatchSize: 10, // The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n          scheduledDelayMillis: 500, // The interval between two consecutive exports\n          exportTimeoutMillis: 30000, // How long the export can run before it is cancelled\n        }\n      ),\n    ],\n  });\n\n  tracerProvider.register({\n    // Changing default context manager to use ZoneContextManager. This one supports tracking of asynchronous operations.\n    // Optional, but recommended for better correlation.\n    contextManager: new ZoneContextManager(),\n  });\n\n  // Registering instrumentations\n  registerInstrumentations({\n    instrumentations: [\n      // You can configure all the auto-instrumentations via this function's parameter.\n      // Learn more via this documentation: https://www.npmjs.com/package/@opentelemetry/auto-instrumentations-web\n      getWebAutoInstrumentations({\n        // Configure specific instrumentations\n        '@opentelemetry/instrumentation-document-load': {\n          enabled: true,\n        },\n        '@opentelemetry/instrumentation-user-interaction': {\n          enabled: true,\n          eventNames: ['click', 'submit', 'scroll'],\n        },\n        '@opentelemetry/instrumentation-fetch': {\n          enabled: true,\n          clearTimingResources: true,\n          propagateTraceHeaderCorsUrls: [\n            'https://dash0.com',\n            'https://ingress.us-west-2.aws.dash0.com'\n          ]\n        },\n        '@opentelemetry/instrumentation-xml-http-request': {\n          enabled: true,\n          clearTimingResources: true,\n          propagateTraceHeaderCorsUrls: [\n            'https://dash0.com',\n            'https://ingress.us-west-2.aws.dash0.com'\n          ]\n        },\n      }),\n    ],\n  });\n  \n  console.log('OpenTelemetry initialized successfully');\n} else if (isBrowser) {\n  console.warn('OpenTelemetry not initialized: Valid auth token not provided');\n} "],"names":["_globalThis","VERSION","_global","__read","this","__spreadArray","API_NAME","diag","SamplingDecision","performance","context","api.context","api.trace","api.diag","api.INVALID_SPAN_CONTEXT","api.SpanKind","api.SamplingDecision","api.TraceFlags","PTN","ZONE_CONTEXT_KEY","shimmer.wrap","shimmer.unwrap","shimmer.massWrap","shimmer.massUnwrap","AttributeNames","PACKAGE_VERSION","PACKAGE_NAME","EventNames","DIAG_LOGGER","getXHRBodyLength","getByteLength","isDocument","getFormDataSize","TEXT_ENCODER","OBSERVER_WAIT_TIME_MS","web.PerformanceTimingNames","web.addSpanNetworkEvents","web.parseUrl","web.shouldPropagateTraceHeaders","api.propagation","core.isUrlIgnored","web.getResource","core.millisToHrTime","core.hrTime"],"mappings":"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AAmB,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,YAAY,IAAI;IACpE,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC;IACpC,gBAAgB;IAChB,YAAY,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;IAC/C,YAAY,IAAI,KAAK,EAAE;IACvB,gBAAgB,MAAM,CAAC,YAAY,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;IACpD;IACA,SAAS,CAAC;IACV,QAAQ,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC;IAChD;IACA,IAAI,OAAO,MAAM;IACjB;;ICzDA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA,IAAI,eAAe,GAAG,mBAAmB,EAAE;IAQ3C;IACA;IACA;IACA;IACO,SAAS,kBAAkB,CAAC,EAAE,EAAE;IACvC,IAAI,IAAI;IACR,QAAQ,eAAe,CAAC,EAAE,CAAC;IAC3B;IACA,IAAI,MAAM,GAAG;IACb;;IClCA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAOO,SAAS,gBAAgB,CAAC,CAAC,EAAE;IACpC,IAAI,OAAO,SAAS;IACpB;;ICvBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAMN,aAAW,GAAG,OAAO,UAAU,KAAK;IACjD,MAAM;IACN,MAAM,OAAO,IAAI,KAAK;IACtB,UAAU;IACV,UAAU,OAAO,MAAM,KAAK;IAC5B,cAAc;IACd,cAAc,OAAO,MAAM,KAAK;IAChC,kBAAkB;IAClB,kBAAkB,EAAE;;ICjCpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAM,aAAa,GAAG,WAAW;;ICfxC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAMC,SAAO,GAAG,OAAO;;IChB9B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA+BA,IAAI,kBAAkB,GAAG,gBAAgB;IACzC,IAAI,qBAAqB,GAAG,mBAAmB;IAC/C,IAAI,wBAAwB,GAAG,sBAAsB;IAqCrD,IAAI,eAAe,GAAG,aAAa;IACnC,IAAI,YAAY,GAAG,UAAU;IAE7B,IAAI,aAAa,GAAG,WAAW;IAC/B,IAAI,eAAe,GAAG,aAAa;IACnC,IAAI,oBAAoB,GAAG,kBAAkB;IAE7C,IAAI,mBAAmB,GAAG,iBAAiB;IAE3C,IAAI,4CAA4C,GAAG,0CAA0C;IAC7F,IAAI,gCAAgC,GAAG,8BAA8B;IACrE,IAAI,6CAA6C,GAAG,2CAA2C;IAqM/F;IACA;IACA;IACA;IACA;IACO,IAAI,uBAAuB,GAAG,kBAAkB;IACvD;IACA;IACA;IACA;IACA;IACO,IAAI,0BAA0B,GAAG,qBAAqB;IAC7D;IACA;IACA;IACA;IACA;IACO,IAAI,6BAA6B,GAAG,wBAAwB;IAgPnE;IACA;IACA;IACA;IACA;IACO,IAAI,oBAAoB,GAAG,eAAe;IACjD;IACA;IACA;IACA;IACA;IACA;IACA;IACO,IAAI,iBAAiB,GAAG,YAAY;IAO3C;IACA;IACA;IACA;IACA;IACA;IACA;IACO,IAAI,kBAAkB,GAAG,aAAa;IAC7C;IACA;IACA;IACA;IACA;IACO,IAAI,oBAAoB,GAAG,eAAe;IACjD;IACA;IACA;IACA;IACA;IACO,IAAI,yBAAyB,GAAG,oBAAoB;IAS3D;IACA;IACA;IACA;IACA;IACO,IAAI,wBAAwB,GAAG,mBAAmB;IAOzD;IACA;IACA;IACA;IACA;IACO,IAAI,iDAAiD,GAAG,4CAA4C;IAC3G;IACA;IACA;IACA;IACA;IACO,IAAI,qCAAqC,GAAG,gCAAgC;IACnF;IACA;IACA;IACA;IACA;IACO,IAAI,kDAAkD,GAAG,6CAA6C;;IClnB7G;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA6EA,IAAI,wBAAwB,GAAG,sBAAsB;IAOrD,IAAI,sBAAsB,GAAG,oBAAoB;IACjD,IAAI,0BAA0B,GAAG,wBAAwB;IACzD,IAAI,yBAAyB,GAAG,uBAAuB;IAscvD;IACA;IACA;IACA;IACA;IACO,IAAI,gCAAgC,GAAG,wBAAwB;IA2CtE;IACA;IACA;IACA;IACA;IACO,IAAI,8BAA8B,GAAG,sBAAsB;IAClE;IACA;IACA;IACA;IACA;IACO,IAAI,kCAAkC,GAAG,0BAA0B;IAC1E;IACA;IACA;IACA;IACA;IACO,IAAI,iCAAiC,GAAG,yBAAyB;IAmjBxE,IAAI,oCAAoC,GAAG,OAAO;IAuDlD;IACA;IACA;IACA;IACA;IACO,IAAI,gCAAgC,GAAG,oCAAoC;;IC1tClF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IA+gBA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,IAAI,iBAAiB,GAAG,cAAc;IAC7C;IACA;IACA;IACA;IACA;IACA;IACO,IAAI,oBAAoB,GAAG,iBAAiB;IAuCnD;IACA;IACA;IACO,IAAI,2BAA2B,GAAG,wBAAwB;IAiDjE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,IAAI,uBAAuB,GAAG,oBAAoB;IACzD;IACA;IACA;IACA;IACA;IACO,IAAI,0BAA0B,GAAG,uBAAuB;;ICjqB/D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IACO,MAAM,QAAQ,GAAG;IACxB,IAAI,CAAC,8BAA8B,GAAG,eAAe;IACrD,IAAI,CAAC,gCAAgC,GAAG,SAAS;IACjD,IAAI,CAAC,kCAAkC,GAAG,gCAAgC;IAC1E,IAAI,CAAC,iCAAiC,GAAGA,SAAO;IAChD,CAAC;;ICvBD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS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AAQ,KAAK,CAAC,qCAAqC,CAAC,MAAM,EAAE,mBAAmB,EAAE,WAAW,EAAE,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;IACtI;IACA;;ICzBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAulFA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,IAAI,gCAAgC,GAAG,6BAA6B;;IChoF3E;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,IAAIC,gBAAc;IACzB,CAAC,UAAU,cAAc,EAAE;IAC3B,IAAI,cAAc,CAAC,eAAe,CAAC,GAAG,cAAc;IACpD,IAAI,cAAc,CAAC,gBAAgB,CAAC,GAAG,eAAe;IACtD,IAAI,cAAc,CAAC,gBAAgB,CAAC,GAAG,eAAe;IACtD,CAAC,EAAEA,gBAAc,KAAKA,gBAAc,GAAG,EAAE,CAAC,CAAC;;ICpB3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,MAAMC,iBAAe,GAAG,QAAQ;IAChC,MAAMC,cAAY,GAAG,8CAA8C;;ICjB1E;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,IAAIC,YAAU;IACrB,CAAC,UAAU,UAAU,EAAE;IACvB,IAAI,UAAU,CAAC,aAAa,CAAC,GAAG,YAAY;IAC5C,IAAI,UAAU,CAAC,wBAAwB,CAAC,GAAG,sBAAsB;IACjE,CAAC,EAAEA,YAAU,KAAKA,YAAU,GAAG,EAAE,CAAC,CAAC;;ICnBnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAIO,MAAM,+BAA+B,GAAG,MAAM;IACrD,IAAI,MAAM,OAAO,GAAG,EAAE;IACtB,IAAI,MA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145]}