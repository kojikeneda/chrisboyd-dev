---
description: directory structure to follow
globs: "**/*.{js,ts,jsx,tsx,go,html,md}"
---

# ChrisBoyd.dev Directory Structure

This document outlines the organization and purpose of directories in the ChrisBoyd.dev project.

```
chrisboyd.dev/
├── .cursor/                 # Cursor IDE rules and configuration
│   └── rules/               # Project-specific rules for AI assistants
├── .github/                 # GitHub workflow and action configurations
│   └── workflows/           # CI/CD pipeline definitions
├── archetypes/              # Hugo archetypes (content templates)
├── assets/                  # Raw assets processed by Hugo
├── content/                 # Hugo content files (markdown)
│   ├── about/               # About page content
│   ├── contact/             # Contact page content
│   ├── portfolio/           # Portfolio content
│   └── posts/               # Blog posts
├── data/                    # Hugo data files (YAML, JSON, TOML)
├── docs/                    # Project documentation
│   ├── architecture/        # System architecture documentation
│   ├── literature/          # Research and reference materials
│   └── technical/           # Technical documentation
├── layouts/                 # Hugo layout templates
│   ├── _default/            # Default content type layouts
│   ├── partials/            # Reusable template partials
│   └── shortcodes/          # Hugo shortcodes
├── public/                  # Hugo build output (generated)
├── resources/               # Hugo-processed resources (generated)
├── scripts/                 # Utility and build scripts
│   └── bundle-telemetry.js  # Telemetry bundling script
├── src/                     # Source code
│   └── telemetry/           # Telemetry module source
├── static/                  # Static files copied to site root
│   ├── _headers             # Cloudflare custom headers
│   ├── css/                 # Custom CSS files
│   ├── favicon.ico          # Favicon
│   ├── img/                 # Image files
│   └── js/                  # JavaScript files
├── tasks/                   # Task tracking and planning
│   ├── active_context.md    # Current development focus
│   ├── rfc/                 # Request for Comments
│   └── tasks_plan.md        # Tasks backlog and planning
├── telemetry-service/       # Telemetry service implementation
│   ├── main.go              # Go service for local telemetry
│   └── worker-js/           # Cloudflare Worker implementation
├── test/                    # Test files
│   └── telemetry.spec.ts    # Telemetry tests
├── theme/                   # Hugo theme customizations
├── config.toml              # Hugo configuration
└── package.json             # NPM package definition
```

## Key Directory Explanations

### Content Organization
- **content/**: All site content in Markdown format, organized by section
- **layouts/**: HTML templates for rendering content, with partials for reusable components
- **static/**: Files that should be copied as-is to the built site
- **assets/**: Source files that Hugo processes (SASS, JS)

### Development Structure
- **src/**: Source code for bundled components like telemetry
- **scripts/**: Utility scripts for development, building, and deployment
- **telemetry-service/**: Telemetry processing implementation, including worker code

### Documentation Structure
- **docs/**: Comprehensive project documentation
- **tasks/**: Development planning and task tracking
- **.cursor/rules/**: AI-assistant rules and knowledge base

### Generated Directories
- **public/**: Contains the built site (generated by Hugo)
- **resources/**: Processed resources (generated by Hugo)
- **node_modules/**: NPM dependencies (not committed to Git)

## Development Notes
1. Always place new content within appropriate sections in the `content/` directory
2. Custom JavaScript should go in `static/js/` or `src/` (if it needs bundling)
3. CSS customizations should go in `static/css/` or `assets/css/` (if using SASS)
4. Utility scripts should be placed in the `scripts/` directory
5. Keep test files alongside what they're testing in the `test/` directory